

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu Jun 05 11:35:01 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataBANK1
    67  0072C5                     __pidataBANK1:
    68                           	opt stack 0
    69                           
    70                           ;initializer for main@F4692
    71  0072C5  0A                 	db	10
    72  0072C6  44                 	db	68
    73  0072C7  6F                 	db	111
    74  0072C8  20                 	db	32
    75  0072C9  79                 	db	121
    76  0072CA  6F                 	db	111
    77  0072CB  75                 	db	117
    78  0072CC  20                 	db	32
    79  0072CD  77                 	db	119
    80  0072CE  61                 	db	97
    81  0072CF  6E                 	db	110
    82  0072D0  74                 	db	116
    83  0072D1  20                 	db	32
    84  0072D2  74                 	db	116
    85  0072D3  6F                 	db	111
    86  0072D4  20                 	db	32
    87  0072D5  73                 	db	115
    88  0072D6  65                 	db	101
    89  0072D7  74                 	db	116
    90  0072D8  20                 	db	32
    91  0072D9  74                 	db	116
    92  0072DA  68                 	db	104
    93  0072DB  65                 	db	101
    94  0072DC  20                 	db	32
    95  0072DD  74                 	db	116
    96  0072DE  69                 	db	105
    97  0072DF  6D                 	db	109
    98  0072E0  65                 	db	101
    99  0072E1  3F                 	db	63
   100  0072E2  20                 	db	32
   101  0072E3  79                 	db	121
   102  0072E4  2F                 	db	47
   103  0072E5  6E                 	db	110
   104  0072E6  00                 	db	0
   105  0072E7  00                 	db	0
   106                           
   107                           ;initializer for Set_date@F214
   108  0072E8  0A                 	db	10
   109  0072E9  45                 	db	69
   110  0072EA  6E                 	db	110
   111  0072EB  74                 	db	116
   112  0072EC  65                 	db	101
   113  0072ED  72                 	db	114
   114  0072EE  20                 	db	32
   115  0072EF  44                 	db	68
   116  0072F0  41                 	db	65
   117  0072F1  54                 	db	84
   118  0072F2  45                 	db	69
   119  0072F3  2F                 	db	47
   120  0072F4  4D                 	db	77
   121  0072F5  4F                 	db	79
   122  0072F6  4E                 	db	78
   123  0072F7  54                 	db	84
   124  0072F8  48                 	db	72
   125  0072F9  2F                 	db	47
   126  0072FA  59                 	db	89
   127  0072FB  45                 	db	69
   128  0072FC  41                 	db	65
   129  0072FD  52                 	db	82
   130  0072FE  09                 	db	9
   131  0072FF  44                 	db	68
   132  007300  44                 	db	68
   133  007301  4D                 	db	77
   134  007302  4D                 	db	77
   135  007303  59                 	db	89
   136  007304  59                 	db	89
   137  007305  00                 	db	0
   138                           
   139                           ;initializer for main@F4694
   140  007306  50                 	db	80
   141  007307  6C                 	db	108
   142  007308  65                 	db	101
   143  007309  61                 	db	97
   144  00730A  73                 	db	115
   145  00730B  65                 	db	101
   146  00730C  20                 	db	32
   147  00730D  65                 	db	101
   148  00730E  6E                 	db	110
   149  00730F  74                 	db	116
   150  007310  65                 	db	101
   151  007311  72                 	db	114
   152  007312  20                 	db	32
   153  007313  61                 	db	97
   154  007314  20                 	db	32
   155  007315  76                 	db	118
   156  007316  61                 	db	97
   157  007317  6C                 	db	108
   158  007318  69                 	db	105
   159  007319  64                 	db	100
   160  00731A  20                 	db	32
   161  00731B  64                 	db	100
   162  00731C  61                 	db	97
   163  00731D  74                 	db	116
   164  00731E  61                 	db	97
   165  00731F  2E                 	db	46
   166  007320  2E                 	db	46
   167  007321  21                 	db	33
   168  007322  00                 	db	0
   169                           
   170                           ;initializer for Get_data@F227
   171  007323  0A                 	db	10
   172  007324  53                 	db	83
   173  007325  45                 	db	69
   174  007326  4C                 	db	76
   175  007327  45                 	db	69
   176  007328  43                 	db	67
   177  007329  54                 	db	84
   178  00732A  20                 	db	32
   179  00732B  4D                 	db	77
   180  00732C  4F                 	db	79
   181  00732D  44                 	db	68
   182  00732E  45                 	db	69
   183  00732F  20                 	db	32
   184  007330  31                 	db	49
   185  007331  32                 	db	50
   186  007332  2F                 	db	47
   187  007333  32                 	db	50
   188  007334  34                 	db	52
   189  007335  00                 	db	0
   190                           
   191                           ;initializer for Get_data@F231
   192  007336  0A                 	db	10
   193  007337  49                 	db	73
   194  007338  6E                 	db	110
   195  007339  76                 	db	118
   196  00733A  61                 	db	97
   197  00733B  6C                 	db	108
   198  00733C  69                 	db	105
   199  00733D  64                 	db	100
   200  00733E  20                 	db	32
   201  00733F  45                 	db	69
   202  007340  6E                 	db	110
   203  007341  74                 	db	116
   204  007342  72                 	db	114
   205  007343  79                 	db	121
   206  007344  2E                 	db	46
   207  007345  2E                 	db	46
   208  007346  21                 	db	33
   209  007347  00                 	db	0
   210                           
   211                           ;initializer for Set_date@F216
   212  007348  0A                 	db	10
   213  007349  49                 	db	73
   214  00734A  6E                 	db	110
   215  00734B  76                 	db	118
   216  00734C  61                 	db	97
   217  00734D  6C                 	db	108
   218  00734E  69                 	db	105
   219  00734F  64                 	db	100
   220  007350  20                 	db	32
   221  007351  45                 	db	69
   222  007352  6E                 	db	110
   223  007353  74                 	db	116
   224  007354  72                 	db	114
   225  007355  79                 	db	121
   226  007356  2E                 	db	46
   227  007357  2E                 	db	46
   228  007358  21                 	db	33
   229  007359  00                 	db	0
   230                           
   231                           ;initializer for Set_day@F203
   232  00735A  0A                 	db	10
   233  00735B  49                 	db	73
   234  00735C  6E                 	db	110
   235  00735D  76                 	db	118
   236  00735E  61                 	db	97
   237  00735F  6C                 	db	108
   238  007360  69                 	db	105
   239  007361  64                 	db	100
   240  007362  20                 	db	32
   241  007363  45                 	db	69
   242  007364  6E                 	db	110
   243  007365  74                 	db	116
   244  007366  72                 	db	114
   245  007367  79                 	db	121
   246  007368  2E                 	db	46
   247  007369  2E                 	db	46
   248  00736A  21                 	db	33
   249  00736B  00                 	db	0
   250                           
   251                           ;initializer for Set_time@F200
   252  00736C  0A                 	db	10
   253  00736D  49                 	db	73
   254  00736E  6E                 	db	110
   255  00736F  76                 	db	118
   256  007370  61                 	db	97
   257  007371  6C                 	db	108
   258  007372  69                 	db	105
   259  007373  64                 	db	100
   260  007374  20                 	db	32
   261  007375  45                 	db	69
   262  007376  6E                 	db	110
   263  007377  74                 	db	116
   264  007378  72                 	db	114
   265  007379  79                 	db	121
   266  00737A  2E                 	db	46
   267  00737B  2E                 	db	46
   268  00737C  21                 	db	33
   269  00737D  00                 	db	0
   270                           
   271                           ;initializer for Get_data@F229
   272  00737E  0A                 	db	10
   273  00737F  45                 	db	69
   274  007380  6E                 	db	110
   275  007381  74                 	db	116
   276  007382  65                 	db	101
   277  007383  72                 	db	114
   278  007384  20                 	db	32
   279  007385  41                 	db	65
   280  007386  4D                 	db	77
   281  007387  2F                 	db	47
   282  007388  50                 	db	80
   283  007389  4D                 	db	77
   284  00738A  3F                 	db	63
   285  00738B  00                 	db	0
   286                           
   287                           ;initializer for write_DAY@F256
   288  00738C  53                 	db	83
   289  00738D  55                 	db	85
   290  00738E  4E                 	db	78
   291  00738F  00                 	db	0
   292                           
   293                           ;initializer for write_DAY@F258
   294  007390  4D                 	db	77
   295  007391  4F                 	db	79
   296  007392  4E                 	db	78
   297  007393  00                 	db	0
   298                           
   299                           ;initializer for write_DAY@F260
   300  007394  54                 	db	84
   301  007395  55                 	db	85
   302  007396  45                 	db	69
   303  007397  00                 	db	0
   304                           
   305                           ;initializer for write_DAY@F262
   306  007398  57                 	db	87
   307  007399  45                 	db	69
   308  00739A  44                 	db	68
   309  00739B  00                 	db	0
   310                           
   311                           ;initializer for write_DAY@F264
   312  00739C  54                 	db	84
   313  00739D  48                 	db	72
   314  00739E  55                 	db	85
   315  00739F  00                 	db	0
   316                           
   317                           ;initializer for write_DAY@F266
   318  0073A0  46                 	db	70
   319  0073A1  52                 	db	82
   320  0073A2  49                 	db	73
   321  0073A3  00                 	db	0
   322                           
   323                           ;initializer for write_DAY@F268
   324  0073A4  53                 	db	83
   325  0073A5  41                 	db	65
   326  0073A6  54                 	db	84
   327  0073A7  00                 	db	0
   328                           
   329                           ;initializer for Get_data@F233
   330  0073A8  31                 	db	49
   331  0073A9  32                 	db	50
   332  0073AA  00                 	db	0
   333                           
   334                           ;initializer for Get_data@F235
   335  0073AB  32                 	db	50
   336  0073AC  34                 	db	52
   337  0073AD  00                 	db	0
   338                           
   339                           ;initializer for Get_data@F237
   340  0073AE  61                 	db	97
   341  0073AF  6D                 	db	109
   342  0073B0  00                 	db	0
   343                           
   344                           ;initializer for Get_data@F239
   345  0073B1  41                 	db	65
   346  0073B2  4D                 	db	77
   347  0073B3  00                 	db	0
   348                           
   349                           ;initializer for Get_data@F241
   350  0073B4  70                 	db	112
   351  0073B5  6D                 	db	109
   352  0073B6  00                 	db	0
   353                           
   354                           ;initializer for Get_data@F243
   355  0073B7  50                 	db	80
   356  0073B8  4D                 	db	77
   357  0073B9  00                 	db	0
   358                           
   359                           	psect	idataBANK2
   360  006E7E                     __pidataBANK2:
   361                           	opt stack 0
   362                           
   363                           ;initializer for Set_day@F205
   364  006E7E  0A                 	db	10
   365  006E7F  45                 	db	69
   366  006E80  6E                 	db	110
   367  006E81  74                 	db	116
   368  006E82  65                 	db	101
   369  006E83  72                 	db	114
   370  006E84  20                 	db	32
   371  006E85  74                 	db	116
   372  006E86  68                 	db	104
   373  006E87  65                 	db	101
   374  006E88  20                 	db	32
   375  006E89  44                 	db	68
   376  006E8A  41                 	db	65
   377  006E8B  59                 	db	89
   378  006E8C  20                 	db	32
   379  006E8D  53                 	db	83
   380  006E8E  55                 	db	85
   381  006E8F  4E                 	db	78
   382  006E90  2D                 	db	45
   383  006E91  30                 	db	48
   384  006E92  31                 	db	49
   385  006E93  20                 	db	32
   386  006E94  4D                 	db	77
   387  006E95  4F                 	db	79
   388  006E96  4E                 	db	78
   389  006E97  2D                 	db	45
   390  006E98  30                 	db	48
   391  006E99  32                 	db	50
   392  006E9A  20                 	db	32
   393  006E9B  54                 	db	84
   394  006E9C  55                 	db	85
   395  006E9D  45                 	db	69
   396  006E9E  2D                 	db	45
   397  006E9F  30                 	db	48
   398  006EA0  33                 	db	51
   399  006EA1  20                 	db	32
   400  006EA2  57                 	db	87
   401  006EA3  45                 	db	69
   402  006EA4  44                 	db	68
   403  006EA5  2D                 	db	45
   404  006EA6  30                 	db	48
   405  006EA7  34                 	db	52
   406  006EA8  20                 	db	32
   407  006EA9  54                 	db	84
   408  006EAA  48                 	db	72
   409  006EAB  55                 	db	85
   410  006EAC  52                 	db	82
   411  006EAD  53                 	db	83
   412  006EAE  2D                 	db	45
   413  006EAF  30                 	db	48
   414  006EB0  35                 	db	53
   415  006EB1  20                 	db	32
   416  006EB2  46                 	db	70
   417  006EB3  52                 	db	82
   418  006EB4  49                 	db	73
   419  006EB5  2D                 	db	45
   420  006EB6  30                 	db	48
   421  006EB7  36                 	db	54
   422  006EB8  20                 	db	32
   423  006EB9  53                 	db	83
   424  006EBA  41                 	db	65
   425  006EBB  54                 	db	84
   426  006EBC  2D                 	db	45
   427  006EBD  30                 	db	48
   428  006EBE  37                 	db	55
   429  006EBF  00                 	db	0
   430  006EC0  00                 	db	0
   431                           
   432                           ;initializer for Set_time@F198
   433  006EC1  0A                 	db	10
   434  006EC2  45                 	db	69
   435  006EC3  6E                 	db	110
   436  006EC4  74                 	db	116
   437  006EC5  65                 	db	101
   438  006EC6  72                 	db	114
   439  006EC7  20                 	db	32
   440  006EC8  74                 	db	116
   441  006EC9  68                 	db	104
   442  006ECA  65                 	db	101
   443  006ECB  20                 	db	32
   444  006ECC  74                 	db	116
   445  006ECD  69                 	db	105
   446  006ECE  6D                 	db	109
   447  006ECF  65                 	db	101
   448  006ED0  20                 	db	32
   449  006ED1  69                 	db	105
   450  006ED2  6E                 	db	110
   451  006ED3  20                 	db	32
   452  006ED4  74                 	db	116
   453  006ED5  68                 	db	104
   454  006ED6  65                 	db	101
   455  006ED7  20                 	db	32
   456  006ED8  66                 	db	102
   457  006ED9  6F                 	db	111
   458  006EDA  72                 	db	114
   459  006EDB  6D                 	db	109
   460  006EDC  61                 	db	97
   461  006EDD  74                 	db	116
   462  006EDE  20                 	db	32
   463  006EDF  48                 	db	72
   464  006EE0  48                 	db	72
   465  006EE1  4D                 	db	77
   466  006EE2  4D                 	db	77
   467  006EE3  53                 	db	83
   468  006EE4  53                 	db	83
   469  006EE5  00                 	db	0
   470  0000                     _LATAbits	set	3977
   471  0000                     _LATBbits	set	3978
   472  0000                     _PIE1bits	set	3997
   473  0000                     _PIR1bits	set	3998
   474  0000                     _PORTB	set	3969
   475  0000                     _PORTD	set	3971
   476  0000                     _RCREG	set	4014
   477  0000                     _RCSTA	set	4011
   478  0000                     _RCSTAbits	set	4011
   479  0000                     _SPBRG	set	4015
   480  0000                     _SPBRGH	set	4016
   481  0000                     _SSPADD	set	4040
   482  0000                     _SSPBUF	set	4041
   483  0000                     _SSPCON1	set	4038
   484  0000                     _SSPCON1bits	set	4038
   485  0000                     _SSPCON2	set	4037
   486  0000                     _SSPCON2bits	set	4037
   487  0000                     _SSPSTAT	set	4039
   488  0000                     _SSPSTATbits	set	4039
   489  0000                     _TRISAbits	set	3986
   490  0000                     _TRISB	set	3987
   491  0000                     _TRISBbits	set	3987
   492  0000                     _TRISCbits	set	3988
   493  0000                     _TRISD	set	3989
   494  0000                     _TXREG	set	4013
   495  0000                     _TXSTA	set	4012
   496  0000                     _TXSTAbits	set	4012
   497                           
   498                           ; #config settings
   499  0000                     
   500                           	psect	cinit
   501  006D1A                     __pcinit:
   502                           	opt stack 0
   503  006D1A                     start_initialization:
   504                           	opt stack 0
   505  006D1A                     __initialization:
   506                           	opt stack 0
   507                           
   508                           ; Clear objects allocated to BANK0 (14 bytes)
   509  006D1A  EE00  F0F2         	lfsr	0,__pbssBANK0
   510  006D1E  0E0E               	movlw	14
   511  006D20                     clear_0:
   512  006D20  6AEE               	clrf	postinc0,c
   513  006D22  06E8               	decf	wreg,f,c
   514  006D24  E1FD               	bnz	clear_0
   515                           
   516                           ; Initialize objects allocated to BANK2 (104 bytes)
   517                           ; load TBLPTR registers with __pidataBANK2
   518  006D26  0E7E               	movlw	low __pidataBANK2
   519  006D28  6EF6               	movwf	tblptrl,c
   520  006D2A  0E6E               	movlw	high __pidataBANK2
   521  006D2C  6EF7               	movwf	tblptrh,c
   522  006D2E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   523  006D30  6EF8               	movwf	tblptru,c
   524  006D32  EE02  F000         	lfsr	0,__pdataBANK2
   525  006D36  EE10 F068          	lfsr	1,104
   526  006D3A                     copy_data0:
   527  006D3A  0009               	tblrd		*+
   528  006D3C  CFF5 FFEE          	movff	tablat,postinc0
   529  006D40  50E5               	movf	postdec1,w,c
   530  006D42  50E1               	movf	fsr1l,w,c
   531  006D44  E1FA               	bnz	copy_data0
   532                           
   533                           ; Initialize objects allocated to BANK1 (245 bytes)
   534                           ; load TBLPTR registers with __pidataBANK1
   535  006D46  0EC5               	movlw	low __pidataBANK1
   536  006D48  6EF6               	movwf	tblptrl,c
   537  006D4A  0E72               	movlw	high __pidataBANK1
   538  006D4C  6EF7               	movwf	tblptrh,c
   539  006D4E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   540  006D50  6EF8               	movwf	tblptru,c
   541  006D52  EE01  F000         	lfsr	0,__pdataBANK1
   542  006D56  EE10 F0F5          	lfsr	1,245
   543  006D5A                     copy_data1:
   544  006D5A  0009               	tblrd		*+
   545  006D5C  CFF5 FFEE          	movff	tablat,postinc0
   546  006D60  50E5               	movf	postdec1,w,c
   547  006D62  50E1               	movf	fsr1l,w,c
   548  006D64  E1FA               	bnz	copy_data1
   549  006D66                     end_of_initialization:
   550                           	opt stack 0
   551  006D66                     __end_of__initialization:
   552                           	opt stack 0
   553  006D66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   554  006D68  6EF8               	movwf	tblptru,c
   555  006D6A  0100               	movlb	0
   556  006D6C  EFA6  F03B         	goto	_main	;jump to C main() function
   557                           tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           postdec1	equ	0xFE5
   564                           fsr1l	equ	0xFE1
   565                           
   566                           	psect	bssBANK0
   567  0000F2                     __pbssBANK0:
   568                           	opt stack 0
   569  0000F2                     _USART_Status:
   570                           	opt stack 0
   571  0000F2                     	ds	1
   572  0000F3                     _str:
   573                           	opt stack 0
   574  0000F3                     	ds	11
   575  0000FE                     _time:
   576                           	opt stack 0
   577  0000FE                     	ds	2
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           postinc0	equ	0xFEE
   583                           wreg	equ	0xFE8
   584                           postdec1	equ	0xFE5
   585                           fsr1l	equ	0xFE1
   586                           
   587                           	psect	dataBANK1
   588  000100                     __pdataBANK1:
   589                           	opt stack 0
   590  000100                     main@F4692:
   591                           	opt stack 0
   592  000100                     	ds	35
   593  000123                     Set_date@F214:
   594                           	opt stack 0
   595  000123                     	ds	30
   596  000141                     main@F4694:
   597                           	opt stack 0
   598  000141                     	ds	29
   599  00015E                     Get_data@F227:
   600                           	opt stack 0
   601  00015E                     	ds	19
   602  000171                     Get_data@F231:
   603                           	opt stack 0
   604  000171                     	ds	18
   605  000183                     Set_date@F216:
   606                           	opt stack 0
   607  000183                     	ds	18
   608  000195                     Set_day@F203:
   609                           	opt stack 0
   610  000195                     	ds	18
   611  0001A7                     Set_time@F200:
   612                           	opt stack 0
   613  0001A7                     	ds	18
   614  0001B9                     Get_data@F229:
   615                           	opt stack 0
   616  0001B9                     	ds	14
   617  0001C7                     write_DAY@F256:
   618                           	opt stack 0
   619  0001C7                     	ds	4
   620  0001CB                     write_DAY@F258:
   621                           	opt stack 0
   622  0001CB                     	ds	4
   623  0001CF                     write_DAY@F260:
   624                           	opt stack 0
   625  0001CF                     	ds	4
   626  0001D3                     write_DAY@F262:
   627                           	opt stack 0
   628  0001D3                     	ds	4
   629  0001D7                     write_DAY@F264:
   630                           	opt stack 0
   631  0001D7                     	ds	4
   632  0001DB                     write_DAY@F266:
   633                           	opt stack 0
   634  0001DB                     	ds	4
   635  0001DF                     write_DAY@F268:
   636                           	opt stack 0
   637  0001DF                     	ds	4
   638  0001E3                     Get_data@F233:
   639                           	opt stack 0
   640  0001E3                     	ds	3
   641  0001E6                     Get_data@F235:
   642                           	opt stack 0
   643  0001E6                     	ds	3
   644  0001E9                     Get_data@F237:
   645                           	opt stack 0
   646  0001E9                     	ds	3
   647  0001EC                     Get_data@F239:
   648                           	opt stack 0
   649  0001EC                     	ds	3
   650  0001EF                     Get_data@F241:
   651                           	opt stack 0
   652  0001EF                     	ds	3
   653  0001F2                     Get_data@F243:
   654                           	opt stack 0
   655  0001F2                     	ds	3
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           
   665                           	psect	dataBANK2
   666  000200                     __pdataBANK2:
   667                           	opt stack 0
   668  000200                     Set_day@F205:
   669                           	opt stack 0
   670  000200                     	ds	67
   671  000243                     Set_time@F198:
   672                           	opt stack 0
   673  000243                     	ds	37
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           postinc0	equ	0xFEE
   679                           wreg	equ	0xFE8
   680                           postdec1	equ	0xFE5
   681                           fsr1l	equ	0xFE1
   682                           
   683                           	psect	cstackBANK0
   684  000060                     __pcstackBANK0:
   685                           	opt stack 0
   686  000060                     ??_Get_data:
   687                           
   688                           ; 0 bytes @ 0x0
   689  000060                     	ds	1
   690  000061                     Get_data@str2:
   691                           	opt stack 0
   692                           
   693                           ; 19 bytes @ 0x1
   694  000061                     	ds	19
   695  000074                     Get_data@str8:
   696                           	opt stack 0
   697                           
   698                           ; 14 bytes @ 0x14
   699  000074                     	ds	14
   700  000082                     Get_data@error:
   701                           	opt stack 0
   702                           
   703                           ; 18 bytes @ 0x22
   704  000082                     	ds	18
   705  000094                     Get_data@s_1:
   706                           	opt stack 0
   707                           
   708                           ; 3 bytes @ 0x34
   709  000094                     	ds	3
   710  000097                     Get_data@s_2:
   711                           	opt stack 0
   712                           
   713                           ; 3 bytes @ 0x37
   714  000097                     	ds	3
   715  00009A                     Get_data@s_3:
   716                           	opt stack 0
   717                           
   718                           ; 3 bytes @ 0x3A
   719  00009A                     	ds	3
   720  00009D                     Get_data@s_4:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x3D
   724  00009D                     	ds	3
   725  0000A0                     Get_data@s_5:
   726                           	opt stack 0
   727                           
   728                           ; 3 bytes @ 0x40
   729  0000A0                     	ds	3
   730  0000A3                     Get_data@s_6:
   731                           	opt stack 0
   732                           
   733                           ; 3 bytes @ 0x43
   734  0000A3                     	ds	3
   735  0000A6                     Get_data@day:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x46
   739  0000A6                     	ds	1
   740  0000A7                     Get_data@s:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x47
   744  0000A7                     	ds	1
   745  0000A8                     Get_data@m:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x48
   749  0000A8                     	ds	1
   750  0000A9                     Get_data@h:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x49
   754  0000A9                     	ds	1
   755  0000AA                     Get_data@year:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x4A
   759  0000AA                     	ds	1
   760  0000AB                     Get_data@date:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x4B
   764  0000AB                     	ds	1
   765  0000AC                     Get_data@month:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x4C
   769  0000AC                     	ds	1
   770  0000AD                     Get_data@mode:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x4D
   774  0000AD                     	ds	1
   775  0000AE                     ??_main:
   776                           
   777                           ; 0 bytes @ 0x4E
   778  0000AE                     	ds	1
   779  0000AF                     main@str7:
   780                           	opt stack 0
   781                           
   782                           ; 35 bytes @ 0x4F
   783  0000AF                     	ds	35
   784  0000D2                     main@str8:
   785                           	opt stack 0
   786                           
   787                           ; 29 bytes @ 0x72
   788  0000D2                     	ds	29
   789  0000EF                     main@mode:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x8F
   793  0000EF                     	ds	1
   794  0000F0                     main@config1:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x90
   798  0000F0                     	ds	1
   799  0000F1                     main@c:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x91
   803  0000F1                     	ds	1
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           postinc0	equ	0xFEE
   809                           wreg	equ	0xFE8
   810                           postdec1	equ	0xFE5
   811                           fsr1l	equ	0xFE1
   812                           
   813                           	psect	cstackCOMRAM
   814  000001                     __pcstackCOMRAM:
   815                           	opt stack 0
   816  000001                     ?_Delay1KTCYx:
   817                           	opt stack 0
   818  000001                     ?_Delay10TCYx:
   819                           	opt stack 0
   820  000001                     ?_Delay10KTCYx:
   821                           	opt stack 0
   822  000001                     ?_OpenI2C:
   823                           	opt stack 0
   824  000001                     ?_OpenUSART:
   825                           	opt stack 0
   826  000001                     ?_WriteUSART:
   827                           	opt stack 0
   828  000001                     ?_Clear_array:
   829                           	opt stack 0
   830  000001                     ?_Write_ARR:
   831                           	opt stack 0
   832  000001                     ?_WriteI2C:
   833                           	opt stack 0
   834  000001                     ?_BCD_format:
   835                           	opt stack 0
   836  000001                     ?_BCD_to_DEC:
   837                           	opt stack 0
   838  000001                     ?_strcmp:
   839                           	opt stack 0
   840  000001                     BCD_to_DEC@c:
   841                           	opt stack 0
   842  000001                     ReadBUF@c:
   843                           	opt stack 0
   844  000001                     OpenUSART@config:
   845                           	opt stack 0
   846  000001                     ReadUSART@data:
   847                           	opt stack 0
   848  000001                     WriteUSART@data:
   849                           	opt stack 0
   850  000001                     OpenI2C@sync_mode:
   851                           	opt stack 0
   852  000001                     WriteI2C@data_out:
   853                           	opt stack 0
   854  000001                     Delay10KTCYx@unit:
   855                           	opt stack 0
   856  000001                     Delay10TCYx@unit:
   857                           	opt stack 0
   858  000001                     Delay1KTCYx@unit:
   859                           	opt stack 0
   860  000001                     BCD_format@str:
   861                           	opt stack 0
   862  000001                     Clear_array@e:
   863                           	opt stack 0
   864  000001                     Write_ARR@c:
   865                           	opt stack 0
   866  000001                     strcmp@s1:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x0
   870  000001                     	ds	1
   871  000002                     ??_Delay10KTCYx:
   872  000002                     ?_delay_us:
   873                           	opt stack 0
   874  000002                     ??_DelayFor18TCY:
   875  000002                     ??_DelayPORXLCD:
   876  000002                     ??_BCD_to_DEC:
   877  000002                     ?_Write:
   878                           	opt stack 0
   879  000002                     delay_us@t:
   880                           	opt stack 0
   881  000002                     Write@data:
   882                           	opt stack 0
   883  000002                     OpenI2C@slew:
   884                           	opt stack 0
   885  000002                     OpenUSART@spbrg:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x1
   889  000002                     	ds	1
   890  000003                     ?_Write_str:
   891                           	opt stack 0
   892  000003                     ??_Read_char:
   893  000003                     ?_Read_string:
   894                           	opt stack 0
   895  000003                     ??_delay_us:
   896  000003                     ??_BCD_format:
   897  000003                     DelayFor18TCY@i:
   898                           	opt stack 0
   899  000003                     Clear_array@n:
   900                           	opt stack 0
   901  000003                     Write_ARR@e:
   902                           	opt stack 0
   903  000003                     Write_str@c:
   904                           	opt stack 0
   905  000003                     Read_string@buffer:
   906                           	opt stack 0
   907  000003                     strcmp@s2:
   908                           	opt stack 0
   909                           
   910                           ; 2 bytes @ 0x2
   911  000003                     	ds	1
   912  000004                     ?_UsartConfig:
   913                           	opt stack 0
   914  000004                     ?_WriteCmdXLCD:
   915                           	opt stack 0
   916  000004                     ?_SetDDRamAddr:
   917                           	opt stack 0
   918  000004                     ??_Clear_array:
   919  000004                     ?_WriteDataXLCD:
   920                           	opt stack 0
   921  000004                     delay_us@i:
   922                           	opt stack 0
   923  000004                     BCD_format@a:
   924                           	opt stack 0
   925  000004                     WriteCmdXLCD@cmd:
   926                           	opt stack 0
   927  000004                     WriteDataXLCD@data:
   928                           	opt stack 0
   929  000004                     UsartConfig@config1:
   930                           	opt stack 0
   931  000004                     Read_char@c:
   932                           	opt stack 0
   933  000004                     SetDDRamAddr@DDaddr:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x3
   937  000004                     	ds	1
   938  000005                     ??_Write_str:
   939  000005                     ??_SetDDRamAddr:
   940  000005                     ?_Write_time_XLCD:
   941                           	opt stack 0
   942  000005                     ??_strcmp:
   943  000005                     ?_write_DAY:
   944                           	opt stack 0
   945  000005                     Clear_array@i:
   946                           	opt stack 0
   947  000005                     write_DAY@day:
   948                           	opt stack 0
   949  000005                     UsartConfig@config2:
   950                           	opt stack 0
   951  000005                     Read_string@len:
   952                           	opt stack 0
   953  000005                     Write_time_XLCD@str:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x4
   957  000005                     	ds	1
   958  000006                     ??_Read_string:
   959  000006                     strcmp@r:
   960                           	opt stack 0
   961  000006                     write_DAY@day_1:
   962                           	opt stack 0
   963                           
   964                           ; 4 bytes @ 0x5
   965  000006                     	ds	1
   966  000007                     ??_Write_time_XLCD:
   967  000007                     Read_string@i:
   968                           	opt stack 0
   969                           
   970                           ; 1 bytes @ 0x6
   971  000007                     	ds	1
   972  000008                     ?_OpenXLCD:
   973                           	opt stack 0
   974  000008                     OpenXLCD@lcdtype:
   975                           	opt stack 0
   976  000008                     Write_time_XLCD@i:
   977                           	opt stack 0
   978  000008                     Read_string@data:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x7
   982  000008                     	ds	1
   983  000009                     ??_OpenXLCD:
   984  000009                     ?_Set_time:
   985                           	opt stack 0
   986  000009                     ??_Set_day:
   987  000009                     ?_Set_date:
   988                           	opt stack 0
   989  000009                     Set_time@sec:
   990                           	opt stack 0
   991  000009                     Set_date@date:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x8
   995  000009                     	ds	1
   996  00000A                     write_DAY@day_2:
   997                           	opt stack 0
   998  00000A                     Set_day@str5:
   999                           	opt stack 0
  1000                           
  1001                           ; 67 bytes @ 0x9
  1002  00000A                     	ds	1
  1003  00000B                     Set_time@min:
  1004                           	opt stack 0
  1005  00000B                     Set_date@month:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0xA
  1009  00000B                     	ds	2
  1010  00000D                     Set_time@hour:
  1011                           	opt stack 0
  1012  00000D                     Set_date@year:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0xC
  1016  00000D                     	ds	1
  1017  00000E                     write_DAY@day_3:
  1018                           	opt stack 0
  1019                           
  1020                           ; 4 bytes @ 0xD
  1021  00000E                     	ds	1
  1022  00000F                     ??_Set_date:
  1023  00000F                     Set_time@mode:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0xE
  1027  00000F                     	ds	1
  1028  000010                     ??_Set_time:
  1029  000010                     Set_date@str6:
  1030                           	opt stack 0
  1031                           
  1032                           ; 30 bytes @ 0xF
  1033  000010                     	ds	1
  1034  000011                     Set_time@str3:
  1035                           	opt stack 0
  1036                           
  1037                           ; 37 bytes @ 0x10
  1038  000011                     	ds	1
  1039  000012                     write_DAY@day_4:
  1040                           	opt stack 0
  1041                           
  1042                           ; 4 bytes @ 0x11
  1043  000012                     	ds	4
  1044  000016                     write_DAY@day_5:
  1045                           	opt stack 0
  1046                           
  1047                           ; 4 bytes @ 0x15
  1048  000016                     	ds	4
  1049  00001A                     write_DAY@day_6:
  1050                           	opt stack 0
  1051                           
  1052                           ; 4 bytes @ 0x19
  1053  00001A                     	ds	4
  1054  00001E                     write_DAY@day_7:
  1055                           	opt stack 0
  1056                           
  1057                           ; 4 bytes @ 0x1D
  1058  00001E                     	ds	4
  1059  000022                     ?_delay_ms:
  1060                           	opt stack 0
  1061  000022                     ?_Write_I2C:
  1062                           	opt stack 0
  1063  000022                     delay_ms@t:
  1064                           	opt stack 0
  1065  000022                     Write_I2C@c:
  1066                           	opt stack 0
  1067                           
  1068                           ; 1 bytes @ 0x21
  1069  000022                     	ds	1
  1070  000023                     ??_delay_ms:
  1071  000023                     
  1072                           ; 0 bytes @ 0x22
  1073  000023                     	ds	1
  1074  000024                     delay_ms@i:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x23
  1078  000024                     	ds	1
  1079  000025                     ?_Write_time_:
  1080                           	opt stack 0
  1081  000025                     ?_Write_time:
  1082                           	opt stack 0
  1083  000025                     ??_Read:
  1084  000025                     Write_time_@s:
  1085                           	opt stack 0
  1086  000025                     Write_time@day:
  1087                           	opt stack 0
  1088                           
  1089                           ; 1 bytes @ 0x24
  1090  000025                     	ds	1
  1091  000026                     Read@c:
  1092                           	opt stack 0
  1093  000026                     Write_time_@m:
  1094                           	opt stack 0
  1095  000026                     Write_time@date:
  1096                           	opt stack 0
  1097                           
  1098                           ; 1 bytes @ 0x25
  1099  000026                     	ds	1
  1100  000027                     ?_Read_sec:
  1101                           	opt stack 0
  1102  000027                     ?_Read_min:
  1103                           	opt stack 0
  1104  000027                     ?_Read_hour:
  1105                           	opt stack 0
  1106  000027                     ?_Read_date:
  1107                           	opt stack 0
  1108  000027                     ?_Read_month:
  1109                           	opt stack 0
  1110  000027                     ?_Read_year:
  1111                           	opt stack 0
  1112  000027                     Write_time_@h:
  1113                           	opt stack 0
  1114  000027                     Write_time@month:
  1115                           	opt stack 0
  1116  000027                     Read_sec@e:
  1117                           	opt stack 0
  1118  000027                     Read_min@e:
  1119                           	opt stack 0
  1120  000027                     Read_hour@e:
  1121                           	opt stack 0
  1122  000027                     Read_date@e:
  1123                           	opt stack 0
  1124  000027                     Read_month@e:
  1125                           	opt stack 0
  1126  000027                     Read_year@e:
  1127                           	opt stack 0
  1128                           
  1129                           ; 2 bytes @ 0x26
  1130  000027                     	ds	1
  1131  000028                     ??_Write_time_:
  1132  000028                     Write_time@year:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x27
  1136  000028                     	ds	1
  1137  000029                     ??_Write_time:
  1138  000029                     Read_sec@c:
  1139                           	opt stack 0
  1140  000029                     Read_min@c:
  1141                           	opt stack 0
  1142  000029                     Read_hour@mode:
  1143                           	opt stack 0
  1144  000029                     Read_date@c:
  1145                           	opt stack 0
  1146  000029                     Read_month@c:
  1147                           	opt stack 0
  1148  000029                     Read_year@c:
  1149                           	opt stack 0
  1150                           
  1151                           ; 1 bytes @ 0x28
  1152  000029                     	ds	1
  1153  00002A                     ??_Read_hour:
  1154                           
  1155                           ; 0 bytes @ 0x29
  1156  00002A                     	ds	2
  1157  00002C                     Read_hour@i:
  1158                           	opt stack 0
  1159                           
  1160                           ; 1 bytes @ 0x2B
  1161  00002C                     	ds	1
  1162  00002D                     Read_hour@c:
  1163                           	opt stack 0
  1164                           
  1165                           ; 1 bytes @ 0x2C
  1166  00002D                     	ds	1
  1167  00002E                     ?_Read_time:
  1168                           	opt stack 0
  1169  00002E                     Read_time@mode:
  1170                           	opt stack 0
  1171  00002E                     Set_date@error:
  1172                           	opt stack 0
  1173                           
  1174                           ; 18 bytes @ 0x2D
  1175  00002E                     	ds	1
  1176  00002F                     ??_Read_time:
  1177                           
  1178                           ; 0 bytes @ 0x2E
  1179  00002F                     	ds	7
  1180  000036                     Set_time@error:
  1181                           	opt stack 0
  1182                           
  1183                           ; 18 bytes @ 0x35
  1184  000036                     	ds	10
  1185  000040                     Set_date@x:
  1186                           	opt stack 0
  1187                           
  1188                           ; 1 bytes @ 0x3F
  1189  000040                     	ds	1
  1190  000041                     Set_date@y:
  1191                           	opt stack 0
  1192                           
  1193                           ; 1 bytes @ 0x40
  1194  000041                     	ds	1
  1195  000042                     Set_date@z:
  1196                           	opt stack 0
  1197                           
  1198                           ; 1 bytes @ 0x41
  1199  000042                     	ds	6
  1200  000048                     Set_time@s:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x47
  1204  000048                     	ds	1
  1205  000049                     Set_time@m:
  1206                           	opt stack 0
  1207                           
  1208                           ; 1 bytes @ 0x48
  1209  000049                     	ds	1
  1210  00004A                     Set_time@x:
  1211                           	opt stack 0
  1212                           
  1213                           ; 1 bytes @ 0x49
  1214  00004A                     	ds	1
  1215  00004B                     Set_time@y:
  1216                           	opt stack 0
  1217                           
  1218                           ; 1 bytes @ 0x4A
  1219  00004B                     	ds	1
  1220  00004C                     Set_time@z:
  1221                           	opt stack 0
  1222                           
  1223                           ; 1 bytes @ 0x4B
  1224  00004C                     	ds	1
  1225  00004D                     Set_time@h:
  1226                           	opt stack 0
  1227  00004D                     Set_day@error:
  1228                           	opt stack 0
  1229                           
  1230                           ; 18 bytes @ 0x4C
  1231  00004D                     	ds	18
  1232  00005F                     Set_day@day:
  1233                           	opt stack 0
  1234                           
  1235                           ; 1 bytes @ 0x5E
  1236  00005F                     	ds	1
  1237                           tblptru	equ	0xFF8
  1238                           tblptrh	equ	0xFF7
  1239                           tblptrl	equ	0xFF6
  1240                           tablat	equ	0xFF5
  1241                           postinc0	equ	0xFEE
  1242                           wreg	equ	0xFE8
  1243                           postdec1	equ	0xFE5
  1244                           fsr1l	equ	0xFE1
  1245                           
  1246 ;;
  1247 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1248 ;;
  1249 ;; *************** function _main *****************
  1250 ;; Defined at:
  1251 ;;		line 75 in file "main.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  str7           35   79[BANK0 ] unsigned char [35]
  1256 ;;  str8           29  114[BANK0 ] unsigned char [29]
  1257 ;;  c               1  145[BANK0 ] unsigned char 
  1258 ;;  config1         1  144[BANK0 ] unsigned char 
  1259 ;;  mode            1  143[BANK0 ] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;		None               void
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0
  1270 ;;      Locals:         0      67       0       0       0       0       0       0       0
  1271 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1272 ;;      Totals:         0      68       0       0       0       0       0       0       0
  1273 ;;Total ram usage:       68 bytes
  1274 ;; Hardware stack levels required when called:    6
  1275 ;; This function calls:
  1276 ;;		_delay_ms
  1277 ;;		_UsartConfig
  1278 ;;		_OpenXLCD
  1279 ;;		_WriteCmdXLCD
  1280 ;;		_Write_str
  1281 ;;		_Read_char
  1282 ;;		_Get_data
  1283 ;;		_SetDDRamAddr
  1284 ;;		_Read_time
  1285 ;;		_Write_time_XLCD
  1286 ;; This function is called by:
  1287 ;;		Startup code after reset
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text0
  1292  00774C                     __ptext0:
  1293                           	opt stack 0
  1294  00774C                     _main:
  1295                           	opt stack 24
  1296                           
  1297                           ;main.c: 76: unsigned char mode;
  1298                           ;main.c: 77: unsigned char str7[35] = "\nDo you want to set the time? y/n";
  1299                           
  1300                           ;incstack = 0
  1301                           ;incstack = 0
  1302  00774C  EE21  F000         	lfsr	2,main@F4692
  1303  007750  EE10  F0AF         	lfsr	1,main@str7
  1304  007754  0E23               	movlw	35
  1305  007756                     u2751:
  1306  007756  CFDE FFE6          	movff	postinc2,postinc1
  1307  00775A  2EE8               	decfsz	wreg,f,c
  1308  00775C  D7FC               	goto	u2751
  1309                           
  1310                           ;main.c: 78: unsigned char str8[29] = "Please enter a valid data..!";
  1311  00775E  EE21  F041         	lfsr	2,main@F4694
  1312  007762  EE10  F0D2         	lfsr	1,main@str8
  1313  007766  0E1D               	movlw	29
  1314  007768                     u2761:
  1315  007768  CFDE FFE6          	movff	postinc2,postinc1
  1316  00776C  2EE8               	decfsz	wreg,f,c
  1317  00776E  D7FC               	goto	u2761
  1318                           
  1319                           ;main.c: 79: unsigned char config1 = 0x00, c;
  1320  007770  0100               	movlb	0	; () banked
  1321  007772  6FAE               	movwf	??_main& (0+255),b
  1322  007774  0E00               	movlw	0
  1323  007776  0100               	movlb	0	; () banked
  1324  007778  0100               	movlb	0	; () banked
  1325  00777A  6FF0               	movwf	main@config1& (0+255),b
  1326  00777C  0100               	movlb	0	; () banked
  1327  00777E  51AE               	movf	??_main& (0+255),w,b
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;main.c: 80: config1 = (0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 &
      +                           0b11101111);
  1331  007780  0100               	movlb	0	; () banked
  1332  007782  6FAE               	movwf	??_main& (0+255),b
  1333  007784  0E2C               	movlw	44
  1334  007786  0100               	movlb	0	; () banked
  1335  007788  0100               	movlb	0	; () banked
  1336  00778A  6FF0               	movwf	main@config1& (0+255),b
  1337  00778C  0100               	movlb	0	; () banked
  1338  00778E  51AE               	movf	??_main& (0+255),w,b
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;main.c: 81: SSPADD = ((20000000/100000)/4-1);;
  1342  007790  0E31               	movlw	49
  1343  007792  6EC8               	movwf	4040,c	;volatile
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;main.c: 82: UsartConfig(config1, ((20000000/9600/64)-1));
  1347  007794  C0F0  F004         	movff	main@config1,?_UsartConfig
  1348  007798  0100               	movlb	0	; () banked
  1349  00779A  6FAE               	movwf	??_main& (0+255),b
  1350  00779C  0E1F               	movlw	31
  1351  00779E  6E05               	movwf	?_UsartConfig+1,c
  1352  0077A0  0100               	movlb	0	; () banked
  1353  0077A2  51AE               	movf	??_main& (0+255),w,b
  1354  0077A4  EC29  F034         	call	_UsartConfig	;wreg free
  1355                           
  1356                           ;main.c: 83: OpenXLCD(0b00111100 & 0b00111000);
  1357  0077A8  0100               	movlb	0	; () banked
  1358  0077AA  6FAE               	movwf	??_main& (0+255),b
  1359  0077AC  0E38               	movlw	56
  1360  0077AE  6E08               	movwf	?_OpenXLCD,c
  1361  0077B0  0100               	movlb	0	; () banked
  1362  0077B2  51AE               	movf	??_main& (0+255),w,b
  1363  0077B4  ECFD  F038         	call	_OpenXLCD	;wreg free
  1364                           
  1365                           ;main.c: 84: WriteCmdXLCD(0x0C);
  1366  0077B8  0100               	movlb	0	; () banked
  1367  0077BA  6FAE               	movwf	??_main& (0+255),b
  1368  0077BC  0E0C               	movlw	12
  1369  0077BE  6E04               	movwf	?_WriteCmdXLCD,c
  1370  0077C0  0100               	movlb	0	; () banked
  1371  0077C2  51AE               	movf	??_main& (0+255),w,b
  1372  0077C4  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  1373  0077C8                     l3207:
  1374                           
  1375                           ;main.c: 86: {
  1376                           ;main.c: 87: Write_str(str7);
  1377  0077C8  0100               	movlb	0	; () banked
  1378  0077CA  0E00               	movlw	high main@str7
  1379  0077CC  6E04               	movwf	?_Write_str+1,c
  1380  0077CE  0100               	movlb	0	; () banked
  1381  0077D0  0EAF               	movlw	low main@str7
  1382  0077D2  6E03               	movwf	?_Write_str,c
  1383  0077D4  EC22  F035         	call	_Write_str	;wreg free
  1384                           
  1385                           ;main.c: 88: c = Read_char();
  1386  0077D8  EC0B  F035         	call	_Read_char	;wreg free
  1387  0077DC  0100               	movlb	0	; () banked
  1388  0077DE  0100               	movlb	0	; () banked
  1389  0077E0  6FF1               	movwf	main@c& (0+255),b
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;main.c: 89: if((c== 'Y') || (c== 'y'))
  1393  0077E2  0100               	movlb	0	; () banked
  1394  0077E4  0100               	movlb	0	; () banked
  1395  0077E6  51F1               	movf	main@c& (0+255),w,b
  1396  0077E8  0A59               	xorlw	89
  1397  0077EA  B4D8               	btfsc	status,2,c
  1398  0077EC  D006               	goto	l3215
  1399                           
  1400                           ; BSR set to: 0
  1401  0077EE  0100               	movlb	0	; () banked
  1402  0077F0  0100               	movlb	0	; () banked
  1403  0077F2  51F1               	movf	main@c& (0+255),w,b
  1404  0077F4  0A79               	xorlw	121
  1405  0077F6  A4D8               	btfss	status,2,c
  1406  0077F8  D006               	goto	l3217
  1407  0077FA                     l3215:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;main.c: 90: mode = Get_data();
  1411  0077FA  EC1B  F03D         	call	_Get_data	;wreg free
  1412  0077FE  0100               	movlb	0	; () banked
  1413  007800  0100               	movlb	0	; () banked
  1414  007802  6FEF               	movwf	main@mode& (0+255),b
  1415  007804  D014               	goto	l3225
  1416  007806                     l3217:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;main.c: 91: else if((c== 'N') || (c== 'n'))
  1420  007806  0100               	movlb	0	; () banked
  1421  007808  0100               	movlb	0	; () banked
  1422  00780A  51F1               	movf	main@c& (0+255),w,b
  1423  00780C  0A4E               	xorlw	78
  1424  00780E  B4D8               	btfsc	status,2,c
  1425  007810  D026               	goto	l3233
  1426                           
  1427                           ; BSR set to: 0
  1428  007812  0100               	movlb	0	; () banked
  1429  007814  0100               	movlb	0	; () banked
  1430  007816  51F1               	movf	main@c& (0+255),w,b
  1431  007818  0A6E               	xorlw	110
  1432  00781A  B4D8               	btfsc	status,2,c
  1433  00781C  D020               	goto	l3233
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;main.c: 93: else
  1437                           ;main.c: 94: Write_str(str8);
  1438                           
  1439                           ; BSR set to: 0
  1440                           
  1441                           ; BSR set to: 0
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;main.c: 92: break;
  1445  00781E  0100               	movlb	0	; () banked
  1446  007820  0E00               	movlw	high main@str8
  1447  007822  6E04               	movwf	?_Write_str+1,c
  1448  007824  0100               	movlb	0	; () banked
  1449  007826  0ED2               	movlw	low main@str8
  1450  007828  6E03               	movwf	?_Write_str,c
  1451  00782A  EC22  F035         	call	_Write_str	;wreg free
  1452  00782E                     l3225:
  1453                           
  1454                           ;main.c: 95: }while(!((c== 'Y') || (c== 'y') || (c== 'N') || (c== 'n'))) ;
  1455  00782E  0100               	movlb	0	; () banked
  1456  007830  0100               	movlb	0	; () banked
  1457  007832  51F1               	movf	main@c& (0+255),w,b
  1458  007834  0A59               	xorlw	89
  1459  007836  B4D8               	btfsc	status,2,c
  1460  007838  D012               	goto	l3233
  1461                           
  1462                           ; BSR set to: 0
  1463  00783A  0100               	movlb	0	; () banked
  1464  00783C  0100               	movlb	0	; () banked
  1465  00783E  51F1               	movf	main@c& (0+255),w,b
  1466  007840  0A79               	xorlw	121
  1467  007842  B4D8               	btfsc	status,2,c
  1468  007844  D00C               	goto	l3233
  1469                           
  1470                           ; BSR set to: 0
  1471  007846  0100               	movlb	0	; () banked
  1472  007848  0100               	movlb	0	; () banked
  1473  00784A  51F1               	movf	main@c& (0+255),w,b
  1474  00784C  0A4E               	xorlw	78
  1475  00784E  B4D8               	btfsc	status,2,c
  1476  007850  D006               	goto	l3233
  1477                           
  1478                           ; BSR set to: 0
  1479  007852  0100               	movlb	0	; () banked
  1480  007854  0100               	movlb	0	; () banked
  1481  007856  51F1               	movf	main@c& (0+255),w,b
  1482  007858  0A6E               	xorlw	110
  1483  00785A  A4D8               	btfss	status,2,c
  1484  00785C  D7B5               	goto	l3207
  1485  00785E                     l3233:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;main.c: 96: WriteCmdXLCD(0x01);
  1489  00785E  0100               	movlb	0	; () banked
  1490  007860  6FAE               	movwf	??_main& (0+255),b
  1491  007862  0E01               	movlw	1
  1492  007864  6E04               	movwf	?_WriteCmdXLCD,c
  1493  007866  0100               	movlb	0	; () banked
  1494  007868  51AE               	movf	??_main& (0+255),w,b
  1495  00786A  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  1496                           
  1497                           ;main.c: 97: SetDDRamAddr(0x80);
  1498  00786E  0100               	movlb	0	; () banked
  1499  007870  6FAE               	movwf	??_main& (0+255),b
  1500  007872  0E80               	movlw	128
  1501  007874  6E04               	movwf	?_SetDDRamAddr,c
  1502  007876  0100               	movlb	0	; () banked
  1503  007878  51AE               	movf	??_main& (0+255),w,b
  1504  00787A  EC62  F036         	call	_SetDDRamAddr	;wreg free
  1505  00787E                     l3235:
  1506                           
  1507                           ;main.c: 99: {
  1508                           ;main.c: 100: Read_time(mode);
  1509  00787E  C0EF  F02E         	movff	main@mode,?_Read_time
  1510  007882  ECDD  F039         	call	_Read_time	;wreg free
  1511                           
  1512                           ;main.c: 101: Write_str(time);
  1513  007886  0100               	movlb	0	; () banked
  1514  007888  0E00               	movlw	high _time
  1515  00788A  6E04               	movwf	?_Write_str+1,c
  1516  00788C  0100               	movlb	0	; () banked
  1517  00788E  0EFE               	movlw	low _time
  1518  007890  6E03               	movwf	?_Write_str,c
  1519  007892  EC22  F035         	call	_Write_str	;wreg free
  1520                           
  1521                           ;main.c: 102: Write_time_XLCD(time);
  1522  007896  0100               	movlb	0	; () banked
  1523  007898  0E00               	movlw	high _time
  1524  00789A  6E06               	movwf	?_Write_time_XLCD+1,c
  1525  00789C  0100               	movlb	0	; () banked
  1526  00789E  0EFE               	movlw	low _time
  1527  0078A0  6E05               	movwf	?_Write_time_XLCD,c
  1528  0078A2  EC73  F037         	call	_Write_time_XLCD	;wreg free
  1529                           
  1530                           ;main.c: 103: delay_ms(10);
  1531  0078A6  0100               	movlb	0	; () banked
  1532  0078A8  6FAE               	movwf	??_main& (0+255),b
  1533  0078AA  0E0A               	movlw	10
  1534  0078AC  6E22               	movwf	?_delay_ms,c
  1535  0078AE  0100               	movlb	0	; () banked
  1536  0078B0  51AE               	movf	??_main& (0+255),w,b
  1537  0078B2  EC8D  F034         	call	_delay_ms	;wreg free
  1538  0078B6  D7E3               	goto	l3235
  1539  0078B8                     __end_of_main:
  1540                           	opt stack 0
  1541                           tblptru	equ	0xFF8
  1542                           tblptrh	equ	0xFF7
  1543                           tblptrl	equ	0xFF6
  1544                           tablat	equ	0xFF5
  1545                           postinc0	equ	0xFEE
  1546                           wreg	equ	0xFE8
  1547                           postinc1	equ	0xFE6
  1548                           postdec1	equ	0xFE5
  1549                           fsr1l	equ	0xFE1
  1550                           postinc2	equ	0xFDE
  1551                           status	equ	0xFD8
  1552                           
  1553 ;; *************** function _Write_time_XLCD *****************
  1554 ;; Defined at:
  1555 ;;		line 125 in file "xlcd.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  str             2    4[COMRAM] PTR unsigned char 
  1558 ;;		 -> time(2), 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  i               1    7[COMRAM] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;		None               void
  1563 ;; Registers used:
  1564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1570 ;;      Params:         2       0       0       0       0       0       0       0       0
  1571 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1572 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1573 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1574 ;;Total ram usage:        4 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    3
  1577 ;; This function calls:
  1578 ;;		_WriteCmdXLCD
  1579 ;;		_WriteDataXLCD
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text1
  1586  006EE6                     __ptext1:
  1587                           	opt stack 0
  1588  006EE6                     _Write_time_XLCD:
  1589                           	opt stack 26
  1590                           
  1591                           ;incstack = 0
  1592                           ;incstack = 0
  1593  006EE6  6E07               	movwf	??_Write_time_XLCD& (0+255),c
  1594  006EE8  0E00               	movlw	0
  1595  006EEA  6E08               	movwf	Write_time_XLCD@i,c
  1596  006EEC  5007               	movf	??_Write_time_XLCD& (0+255),w,c
  1597                           
  1598                           ;xlcd.c: 126: WriteCmdXLCD(0x80);
  1599  006EEE  6E07               	movwf	??_Write_time_XLCD& (0+255),c
  1600  006EF0  0E80               	movlw	128
  1601  006EF2  6E04               	movwf	?_WriteCmdXLCD,c
  1602  006EF4  5007               	movf	??_Write_time_XLCD& (0+255),w,c
  1603  006EF6  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  1604                           
  1605                           ;xlcd.c: 127: while(i!=16)
  1606  006EFA  D00B               	goto	l3029
  1607  006EFC                     l3023:
  1608                           
  1609                           ;xlcd.c: 128: {
  1610                           ;xlcd.c: 129: WriteDataXLCD(*str);
  1611  006EFC  C005  FFD9         	movff	Write_time_XLCD@str,fsr2l
  1612  006F00  C006  FFDA         	movff	Write_time_XLCD@str+1,fsr2h
  1613  006F04  50DF               	movf	indf2,w,c
  1614  006F06  6E04               	movwf	?_WriteDataXLCD,c
  1615  006F08  ECBE  F034         	call	_WriteDataXLCD	;wreg free
  1616                           
  1617                           ;xlcd.c: 130: str++;
  1618  006F0C  4A05               	infsnz	Write_time_XLCD@str,f,c
  1619  006F0E  2A06               	incf	Write_time_XLCD@str+1,f,c
  1620                           
  1621                           ;xlcd.c: 131: i++;
  1622  006F10  2A08               	incf	Write_time_XLCD@i,f,c
  1623  006F12                     l3029:
  1624  006F12  5008               	movf	Write_time_XLCD@i,w,c
  1625  006F14  0A10               	xorlw	16
  1626  006F16  A4D8               	btfss	status,2,c
  1627  006F18  D7F1               	goto	l3023
  1628                           
  1629                           ;xlcd.c: 132: }
  1630                           ;xlcd.c: 133: str++;
  1631  006F1A  4A05               	infsnz	Write_time_XLCD@str,f,c
  1632  006F1C  2A06               	incf	Write_time_XLCD@str+1,f,c
  1633                           
  1634                           ;xlcd.c: 134: i=17;
  1635  006F1E  6E07               	movwf	??_Write_time_XLCD& (0+255),c
  1636  006F20  0E11               	movlw	17
  1637  006F22  6E08               	movwf	Write_time_XLCD@i,c
  1638  006F24  5007               	movf	??_Write_time_XLCD& (0+255),w,c
  1639                           
  1640                           ;xlcd.c: 135: WriteCmdXLCD(0xC0);
  1641  006F26  6E07               	movwf	??_Write_time_XLCD& (0+255),c
  1642  006F28  0EC0               	movlw	192
  1643  006F2A  6E04               	movwf	?_WriteCmdXLCD,c
  1644  006F2C  5007               	movf	??_Write_time_XLCD& (0+255),w,c
  1645  006F2E  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  1646                           
  1647                           ;xlcd.c: 136: while(i!=32)
  1648  006F32  D00B               	goto	l3043
  1649  006F34                     l3037:
  1650                           
  1651                           ;xlcd.c: 137: {
  1652                           ;xlcd.c: 138: WriteDataXLCD(*str);
  1653  006F34  C005  FFD9         	movff	Write_time_XLCD@str,fsr2l
  1654  006F38  C006  FFDA         	movff	Write_time_XLCD@str+1,fsr2h
  1655  006F3C  50DF               	movf	indf2,w,c
  1656  006F3E  6E04               	movwf	?_WriteDataXLCD,c
  1657  006F40  ECBE  F034         	call	_WriteDataXLCD	;wreg free
  1658                           
  1659                           ;xlcd.c: 139: str++;
  1660  006F44  4A05               	infsnz	Write_time_XLCD@str,f,c
  1661  006F46  2A06               	incf	Write_time_XLCD@str+1,f,c
  1662                           
  1663                           ;xlcd.c: 140: i++;
  1664  006F48  2A08               	incf	Write_time_XLCD@i,f,c
  1665  006F4A                     l3043:
  1666  006F4A  5008               	movf	Write_time_XLCD@i,w,c
  1667  006F4C  0A20               	xorlw	32
  1668  006F4E  B4D8               	btfsc	status,2,c
  1669  006F50  0012               	return	
  1670  006F52  D7F0               	goto	l3037
  1671  006F54                     __end_of_Write_time_XLCD:
  1672                           	opt stack 0
  1673                           tblptru	equ	0xFF8
  1674                           tblptrh	equ	0xFF7
  1675                           tblptrl	equ	0xFF6
  1676                           tablat	equ	0xFF5
  1677                           postinc0	equ	0xFEE
  1678                           wreg	equ	0xFE8
  1679                           postinc1	equ	0xFE6
  1680                           postdec1	equ	0xFE5
  1681                           fsr1l	equ	0xFE1
  1682                           indf2	equ	0xFDF
  1683                           postinc2	equ	0xFDE
  1684                           fsr2h	equ	0xFDA
  1685                           fsr2l	equ	0xFD9
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function _WriteDataXLCD *****************
  1689 ;; Defined at:
  1690 ;;		line 63 in file "xlcd.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  data            1    3[COMRAM] unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;		None               void
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1704 ;;      Params:         1       0       0       0       0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1707 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1708 ;;Total ram usage:        1 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    2
  1711 ;; This function calls:
  1712 ;;		_DelayFor18TCY
  1713 ;; This function is called by:
  1714 ;;		_Write_time_XLCD
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text2
  1719  00697C                     __ptext2:
  1720                           	opt stack 0
  1721  00697C                     _WriteDataXLCD:
  1722                           	opt stack 26
  1723                           
  1724                           ;xlcd.c: 65: TRISD = 0;
  1725                           
  1726                           ;incstack = 0
  1727                           ;incstack = 0
  1728  00697C  0E00               	movlw	0
  1729  00697E  6E95               	movwf	3989,c	;volatile
  1730                           
  1731                           ;xlcd.c: 66: PORTD = data;
  1732  006980  C004  FF83         	movff	WriteDataXLCD@data,3971	;volatile
  1733                           
  1734                           ;xlcd.c: 67: LATAbits.LATA2 = 1;
  1735  006984  8489               	bsf	3977,2,c	;volatile
  1736                           
  1737                           ;xlcd.c: 68: LATAbits.LATA1 = 0;
  1738  006986  9289               	bcf	3977,1,c	;volatile
  1739                           
  1740                           ;xlcd.c: 69: DelayFor18TCY();
  1741  006988  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  1742                           
  1743                           ;xlcd.c: 70: LATAbits.LATA0 = 1;
  1744  00698C  8089               	bsf	3977,0,c	;volatile
  1745                           
  1746                           ;xlcd.c: 71: DelayFor18TCY();
  1747  00698E  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  1748                           
  1749                           ;xlcd.c: 72: LATAbits.LATA0 = 0;
  1750  006992  9089               	bcf	3977,0,c	;volatile
  1751                           
  1752                           ;xlcd.c: 73: DelayFor18TCY();
  1753  006994  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  1754                           
  1755                           ;xlcd.c: 74: LATAbits.LATA2 = 0;
  1756  006998  9489               	bcf	3977,2,c	;volatile
  1757                           
  1758                           ;xlcd.c: 75: TRISD = 0xff;
  1759  00699A  6895               	setf	3989,c	;volatile
  1760                           
  1761                           ;xlcd.c: 77: return;
  1762  00699C  0012               	return	
  1763  00699E                     __end_of_WriteDataXLCD:
  1764                           	opt stack 0
  1765                           tblptru	equ	0xFF8
  1766                           tblptrh	equ	0xFF7
  1767                           tblptrl	equ	0xFF6
  1768                           tablat	equ	0xFF5
  1769                           postinc0	equ	0xFEE
  1770                           wreg	equ	0xFE8
  1771                           postinc1	equ	0xFE6
  1772                           postdec1	equ	0xFE5
  1773                           fsr1l	equ	0xFE1
  1774                           indf2	equ	0xFDF
  1775                           postinc2	equ	0xFDE
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _Read_time *****************
  1781 ;; Defined at:
  1782 ;;		line 101 in file "i2c_1.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  mode            1   45[COMRAM] unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;		None               void
  1789 ;; Registers used:
  1790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1796 ;;      Params:         1       0       0       0       0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1798 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1799 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        3 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    5
  1803 ;; This function calls:
  1804 ;;		_delay_ms
  1805 ;;		_delay_us
  1806 ;;		_Clear_array
  1807 ;;		_Read_sec
  1808 ;;		_Read_min
  1809 ;;		_Read_hour
  1810 ;;		_Read_day
  1811 ;;		_Read_date
  1812 ;;		_Read_month
  1813 ;;		_Read_year
  1814 ;;		_Write_I2C
  1815 ;;		_OpenI2C
  1816 ;;		_CloseI2C
  1817 ;;		_IdleI2C
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text3
  1824  0073BA                     __ptext3:
  1825                           	opt stack 0
  1826  0073BA                     _Read_time:
  1827                           	opt stack 24
  1828                           
  1829                           ;i2c_1.c: 102: OpenI2C(0b00001000, 0b10000000);
  1830                           
  1831                           ;incstack = 0
  1832                           ;incstack = 0
  1833  0073BA  6E2F               	movwf	??_Read_time& (0+255),c
  1834  0073BC  0E08               	movlw	8
  1835  0073BE  6E01               	movwf	?_OpenI2C,c
  1836  0073C0  502F               	movf	??_Read_time& (0+255),w,c
  1837  0073C2  6E30               	movwf	(??_Read_time+1)& (0+255),c
  1838  0073C4  0E80               	movlw	128
  1839  0073C6  6E02               	movwf	?_OpenI2C+1,c
  1840  0073C8  5030               	movf	(??_Read_time+1)& (0+255),w,c
  1841  0073CA  EC5F  F034         	call	_OpenI2C	;wreg free
  1842                           
  1843                           ;i2c_1.c: 103: delay_ms(1);
  1844  0073CE  6E2F               	movwf	??_Read_time& (0+255),c
  1845  0073D0  0E01               	movlw	1
  1846  0073D2  6E22               	movwf	?_delay_ms,c
  1847  0073D4  502F               	movf	??_Read_time& (0+255),w,c
  1848  0073D6  EC8D  F034         	call	_delay_ms	;wreg free
  1849                           
  1850                           ;i2c_1.c: 104: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1851  0073DA  80C5               	bsf	4037,0,c	;volatile
  1852  0073DC                     l344:
  1853  0073DC  B0C5               	btfsc	4037,0,c	;volatile
  1854  0073DE  D7FE               	goto	l344
  1855                           
  1856                           ;i2c_1.c: 105: delay_us(10);
  1857  0073E0  6E2F               	movwf	??_Read_time& (0+255),c
  1858  0073E2  0E0A               	movlw	10
  1859  0073E4  6E02               	movwf	?_delay_us,c
  1860  0073E6  502F               	movf	??_Read_time& (0+255),w,c
  1861  0073E8  EC9D  F034         	call	_delay_us	;wreg free
  1862                           
  1863                           ;i2c_1.c: 106: Write_I2C(0xD0);
  1864  0073EC  6E2F               	movwf	??_Read_time& (0+255),c
  1865  0073EE  0ED0               	movlw	208
  1866  0073F0  6E22               	movwf	?_Write_I2C,c
  1867  0073F2  502F               	movf	??_Read_time& (0+255),w,c
  1868  0073F4  EC1B  F034         	call	_Write_I2C	;wreg free
  1869                           
  1870                           ;i2c_1.c: 107: delay_ms(1);
  1871  0073F8  6E2F               	movwf	??_Read_time& (0+255),c
  1872  0073FA  0E01               	movlw	1
  1873  0073FC  6E22               	movwf	?_delay_ms,c
  1874  0073FE  502F               	movf	??_Read_time& (0+255),w,c
  1875  007400  EC8D  F034         	call	_delay_ms	;wreg free
  1876                           
  1877                           ;i2c_1.c: 108: Write_I2C(0x00);
  1878  007404  6E2F               	movwf	??_Read_time& (0+255),c
  1879  007406  0E00               	movlw	0
  1880  007408  6E22               	movwf	?_Write_I2C,c
  1881  00740A  502F               	movf	??_Read_time& (0+255),w,c
  1882  00740C  EC1B  F034         	call	_Write_I2C	;wreg free
  1883                           
  1884                           ;i2c_1.c: 109: delay_ms(10);
  1885  007410  6E2F               	movwf	??_Read_time& (0+255),c
  1886  007412  0E0A               	movlw	10
  1887  007414  6E22               	movwf	?_delay_ms,c
  1888  007416  502F               	movf	??_Read_time& (0+255),w,c
  1889  007418  EC8D  F034         	call	_delay_ms	;wreg free
  1890                           
  1891                           ;i2c_1.c: 110: Clear_array(time, 33);
  1892  00741C  0100               	movlb	0	; () banked
  1893  00741E  0E00               	movlw	high _time
  1894  007420  6E02               	movwf	?_Clear_array+1,c
  1895  007422  0100               	movlb	0	; () banked
  1896  007424  0EFE               	movlw	low _time
  1897  007426  6E01               	movwf	?_Clear_array,c
  1898  007428  6E2F               	movwf	??_Read_time& (0+255),c
  1899  00742A  0E21               	movlw	33
  1900  00742C  6E03               	movwf	?_Clear_array+2,c
  1901  00742E  502F               	movf	??_Read_time& (0+255),w,c
  1902  007430  ECE2  F034         	call	_Clear_array	;wreg free
  1903                           
  1904                           ;i2c_1.c: 111: Read_sec(time);
  1905  007434  0100               	movlb	0	; () banked
  1906  007436  0E00               	movlw	high _time
  1907  007438  6E28               	movwf	?_Read_sec+1,c
  1908  00743A  0100               	movlb	0	; () banked
  1909  00743C  0EFE               	movlw	low _time
  1910  00743E  6E27               	movwf	?_Read_sec,c
  1911  007440  ECA0  F035         	call	_Read_sec	;wreg free
  1912                           
  1913                           ;i2c_1.c: 112: Read_min(time);
  1914  007444  0100               	movlb	0	; () banked
  1915  007446  0E00               	movlw	high _time
  1916  007448  6E28               	movwf	?_Read_min+1,c
  1917  00744A  0100               	movlb	0	; () banked
  1918  00744C  0EFE               	movlw	low _time
  1919  00744E  6E27               	movwf	?_Read_min,c
  1920  007450  ECC5  F035         	call	_Read_min	;wreg free
  1921                           
  1922                           ;i2c_1.c: 113: Read_hour(time, mode);
  1923  007454  0100               	movlb	0	; () banked
  1924  007456  0E00               	movlw	high _time
  1925  007458  6E28               	movwf	?_Read_hour+1,c
  1926  00745A  0100               	movlb	0	; () banked
  1927  00745C  0EFE               	movlw	low _time
  1928  00745E  6E27               	movwf	?_Read_hour,c
  1929  007460  C02E  F029         	movff	Read_time@mode,?_Read_hour+2
  1930  007464  ECA0  F038         	call	_Read_hour	;wreg free
  1931                           
  1932                           ;i2c_1.c: 114: Read_day();
  1933  007468  EC22  F034         	call	_Read_day	;wreg free
  1934                           
  1935                           ;i2c_1.c: 115: Read_date(time);
  1936  00746C  0100               	movlb	0	; () banked
  1937  00746E  0E00               	movlw	high _time
  1938  007470  6E28               	movwf	?_Read_date+1,c
  1939  007472  0100               	movlb	0	; () banked
  1940  007474  0EFE               	movlw	low _time
  1941  007476  6E27               	movwf	?_Read_date,c
  1942  007478  ECE4  F036         	call	_Read_date	;wreg free
  1943                           
  1944                           ;i2c_1.c: 116: Read_month(time);
  1945  00747C  0100               	movlb	0	; () banked
  1946  00747E  0E00               	movlw	high _time
  1947  007480  6E28               	movwf	?_Read_month+1,c
  1948  007482  0100               	movlb	0	; () banked
  1949  007484  0EFE               	movlw	low _time
  1950  007486  6E27               	movwf	?_Read_month,c
  1951  007488  ECEA  F035         	call	_Read_month	;wreg free
  1952                           
  1953                           ;i2c_1.c: 117: Read_year(time);
  1954  00748C  0100               	movlb	0	; () banked
  1955  00748E  0E00               	movlw	high _time
  1956  007490  6E28               	movwf	?_Read_year+1,c
  1957  007492  0100               	movlb	0	; () banked
  1958  007494  0EFE               	movlw	low _time
  1959  007496  6E27               	movwf	?_Read_year,c
  1960  007498  ECB8  F036         	call	_Read_year	;wreg free
  1961                           
  1962                           ;i2c_1.c: 118: IdleI2C();
  1963  00749C  ECF9  F033         	call	_IdleI2C	;wreg free
  1964                           
  1965                           ;i2c_1.c: 119: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  1966  0074A0  8AC5               	bsf	4037,5,c	;volatile
  1967  0074A2  88C5               	bsf	4037,4,c	;volatile
  1968  0074A4                     l347:
  1969  0074A4  B8C5               	btfsc	4037,4,c	;volatile
  1970  0074A6  D7FE               	goto	l347
  1971                           
  1972                           ;i2c_1.c: 120: IdleI2C();
  1973  0074A8  ECF9  F033         	call	_IdleI2C	;wreg free
  1974                           
  1975                           ;i2c_1.c: 121: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1976  0074AC  84C5               	bsf	4037,2,c	;volatile
  1977  0074AE                     l350:
  1978  0074AE  B4C5               	btfsc	4037,2,c	;volatile
  1979  0074B0  D7FE               	goto	l350
  1980                           
  1981                           ;i2c_1.c: 122: CloseI2C();
  1982  0074B2  ECF2  F033         	call	_CloseI2C	;wreg free
  1983  0074B6  0012               	return	
  1984  0074B8                     __end_of_Read_time:
  1985                           	opt stack 0
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           postinc0	equ	0xFEE
  1991                           wreg	equ	0xFE8
  1992                           postinc1	equ	0xFE6
  1993                           postdec1	equ	0xFE5
  1994                           fsr1l	equ	0xFE1
  1995                           indf2	equ	0xFDF
  1996                           postinc2	equ	0xFDE
  1997                           fsr2h	equ	0xFDA
  1998                           fsr2l	equ	0xFD9
  1999                           status	equ	0xFD8
  2000                           
  2001 ;; *************** function _Read_year *****************
  2002 ;; Defined at:
  2003 ;;		line 370 in file "time.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  e               2   38[COMRAM] PTR unsigned char 
  2006 ;;		 -> time(2), 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  c               1   40[COMRAM] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;		None               void
  2011 ;; Registers used:
  2012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2018 ;;      Params:         2       0       0       0       0       0       0       0       0
  2019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2021 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2022 ;;Total ram usage:        3 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    4
  2025 ;; This function calls:
  2026 ;;		_Read
  2027 ;; This function is called by:
  2028 ;;		_Read_time
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text4
  2033  006D70                     __ptext4:
  2034                           	opt stack 0
  2035  006D70                     _Read_year:
  2036                           	opt stack 24
  2037                           
  2038                           ;time.c: 371: unsigned char c;
  2039                           ;time.c: 372: e= e+30;
  2040                           
  2041                           ;incstack = 0
  2042                           ;incstack = 0
  2043  006D70  0E1E               	movlw	30
  2044  006D72  2427               	addwf	Read_year@e,w,c
  2045  006D74  6E27               	movwf	Read_year@e,c
  2046  006D76  0E00               	movlw	0
  2047  006D78  2028               	addwfc	Read_year@e+1,w,c
  2048  006D7A  6E28               	movwf	Read_year@e+1,c
  2049                           
  2050                           ;time.c: 373: c = Read();
  2051  006D7C  ECF5  F034         	call	_Read	;wreg free
  2052  006D80  6E29               	movwf	Read_year@c,c
  2053                           
  2054                           ;time.c: 374: *e = (c>>4) + '0';
  2055  006D82  3829               	swapf	Read_year@c,w,c
  2056  006D84  0B0F               	andlw	15
  2057  006D86  0F30               	addlw	48
  2058  006D88  C027  FFD9         	movff	Read_year@e,fsr2l
  2059  006D8C  C028  FFDA         	movff	Read_year@e+1,fsr2h
  2060  006D90  6EDF               	movwf	indf2,c
  2061                           
  2062                           ;time.c: 375: e++;
  2063  006D92  4A27               	infsnz	Read_year@e,f,c
  2064  006D94  2A28               	incf	Read_year@e+1,f,c
  2065                           
  2066                           ;time.c: 376: *e = (c&0x0F) + '0';
  2067  006D96  5029               	movf	Read_year@c,w,c
  2068  006D98  0B0F               	andlw	15
  2069  006D9A  0F30               	addlw	48
  2070  006D9C  C027  FFD9         	movff	Read_year@e,fsr2l
  2071  006DA0  C028  FFDA         	movff	Read_year@e+1,fsr2h
  2072  006DA4  6EDF               	movwf	indf2,c
  2073                           
  2074                           ;time.c: 377: e++;
  2075  006DA6  4A27               	infsnz	Read_year@e,f,c
  2076  006DA8  2A28               	incf	Read_year@e+1,f,c
  2077                           
  2078                           ;time.c: 378: *e = '\r';
  2079  006DAA  C027  FFD9         	movff	Read_year@e,fsr2l
  2080  006DAE  C028  FFDA         	movff	Read_year@e+1,fsr2h
  2081  006DB2  0E0D               	movlw	13
  2082  006DB4  6EDF               	movwf	indf2,c
  2083                           
  2084                           ;time.c: 379: e++;
  2085  006DB6  4A27               	infsnz	Read_year@e,f,c
  2086  006DB8  2A28               	incf	Read_year@e+1,f,c
  2087                           
  2088                           ;time.c: 380: *e = '\0';
  2089  006DBA  C027  FFD9         	movff	Read_year@e,fsr2l
  2090  006DBE  C028  FFDA         	movff	Read_year@e+1,fsr2h
  2091  006DC2  0E00               	movlw	0
  2092  006DC4  6EDF               	movwf	indf2,c
  2093  006DC6  0012               	return	
  2094  006DC8                     __end_of_Read_year:
  2095                           	opt stack 0
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           postinc0	equ	0xFEE
  2101                           wreg	equ	0xFE8
  2102                           postinc1	equ	0xFE6
  2103                           postdec1	equ	0xFE5
  2104                           fsr1l	equ	0xFE1
  2105                           indf2	equ	0xFDF
  2106                           postinc2	equ	0xFDE
  2107                           fsr2h	equ	0xFDA
  2108                           fsr2l	equ	0xFD9
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function _Read_month *****************
  2112 ;; Defined at:
  2113 ;;		line 355 in file "time.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  e               2   38[COMRAM] PTR unsigned char 
  2116 ;;		 -> time(2), 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  c               1   40[COMRAM] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;		None               void
  2121 ;; Registers used:
  2122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2128 ;;      Params:         2       0       0       0       0       0       0       0       0
  2129 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2131 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2132 ;;Total ram usage:        3 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    4
  2135 ;; This function calls:
  2136 ;;		_Read
  2137 ;; This function is called by:
  2138 ;;		_Read_time
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text5
  2143  006BD4                     __ptext5:
  2144                           	opt stack 0
  2145  006BD4                     _Read_month:
  2146                           	opt stack 24
  2147                           
  2148                           ;time.c: 356: unsigned char c;
  2149                           ;time.c: 357: e= e+27;
  2150                           
  2151                           ;incstack = 0
  2152                           ;incstack = 0
  2153  006BD4  0E1B               	movlw	27
  2154  006BD6  2427               	addwf	Read_month@e,w,c
  2155  006BD8  6E27               	movwf	Read_month@e,c
  2156  006BDA  0E00               	movlw	0
  2157  006BDC  2028               	addwfc	Read_month@e+1,w,c
  2158  006BDE  6E28               	movwf	Read_month@e+1,c
  2159                           
  2160                           ;time.c: 358: c = Read();
  2161  006BE0  ECF5  F034         	call	_Read	;wreg free
  2162  006BE4  6E29               	movwf	Read_month@c,c
  2163                           
  2164                           ;time.c: 359: *e = ((c>>4)&0x01) + '0';
  2165  006BE6  3829               	swapf	Read_month@c,w,c
  2166  006BE8  0B0F               	andlw	15
  2167  006BEA  0B01               	andlw	1
  2168  006BEC  0F30               	addlw	48
  2169  006BEE  C027  FFD9         	movff	Read_month@e,fsr2l
  2170  006BF2  C028  FFDA         	movff	Read_month@e+1,fsr2h
  2171  006BF6  6EDF               	movwf	indf2,c
  2172                           
  2173                           ;time.c: 360: e++;
  2174  006BF8  4A27               	infsnz	Read_month@e,f,c
  2175  006BFA  2A28               	incf	Read_month@e+1,f,c
  2176                           
  2177                           ;time.c: 361: *e = (c&0x0F) + '0';
  2178  006BFC  5029               	movf	Read_month@c,w,c
  2179  006BFE  0B0F               	andlw	15
  2180  006C00  0F30               	addlw	48
  2181  006C02  C027  FFD9         	movff	Read_month@e,fsr2l
  2182  006C06  C028  FFDA         	movff	Read_month@e+1,fsr2h
  2183  006C0A  6EDF               	movwf	indf2,c
  2184                           
  2185                           ;time.c: 362: e++;
  2186  006C0C  4A27               	infsnz	Read_month@e,f,c
  2187  006C0E  2A28               	incf	Read_month@e+1,f,c
  2188                           
  2189                           ;time.c: 363: *e = '/';
  2190  006C10  C027  FFD9         	movff	Read_month@e,fsr2l
  2191  006C14  C028  FFDA         	movff	Read_month@e+1,fsr2h
  2192  006C18  0E2F               	movlw	47
  2193  006C1A  6EDF               	movwf	indf2,c
  2194  006C1C  0012               	return	
  2195  006C1E                     __end_of_Read_month:
  2196                           	opt stack 0
  2197                           tblptru	equ	0xFF8
  2198                           tblptrh	equ	0xFF7
  2199                           tblptrl	equ	0xFF6
  2200                           tablat	equ	0xFF5
  2201                           postinc0	equ	0xFEE
  2202                           wreg	equ	0xFE8
  2203                           postinc1	equ	0xFE6
  2204                           postdec1	equ	0xFE5
  2205                           fsr1l	equ	0xFE1
  2206                           indf2	equ	0xFDF
  2207                           postinc2	equ	0xFDE
  2208                           fsr2h	equ	0xFDA
  2209                           fsr2l	equ	0xFD9
  2210                           status	equ	0xFD8
  2211                           
  2212 ;; *************** function _Read_date *****************
  2213 ;; Defined at:
  2214 ;;		line 339 in file "time.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  e               2   38[COMRAM] PTR unsigned char 
  2217 ;;		 -> time(2), 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  c               1   40[COMRAM] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;		None               void
  2222 ;; Registers used:
  2223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2229 ;;      Params:         2       0       0       0       0       0       0       0       0
  2230 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2232 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2233 ;;Total ram usage:        3 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    4
  2236 ;; This function calls:
  2237 ;;		_Read
  2238 ;; This function is called by:
  2239 ;;		_Read_time
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text6
  2244  006DC8                     __ptext6:
  2245                           	opt stack 0
  2246  006DC8                     _Read_date:
  2247                           	opt stack 24
  2248                           
  2249                           ;time.c: 340: unsigned char c;
  2250                           ;time.c: 341: e= e+23;
  2251                           
  2252                           ;incstack = 0
  2253                           ;incstack = 0
  2254  006DC8  0E17               	movlw	23
  2255  006DCA  2427               	addwf	Read_date@e,w,c
  2256  006DCC  6E27               	movwf	Read_date@e,c
  2257  006DCE  0E00               	movlw	0
  2258  006DD0  2028               	addwfc	Read_date@e+1,w,c
  2259  006DD2  6E28               	movwf	Read_date@e+1,c
  2260                           
  2261                           ;time.c: 342: *e = ' ';
  2262  006DD4  C027  FFD9         	movff	Read_date@e,fsr2l
  2263  006DD8  C028  FFDA         	movff	Read_date@e+1,fsr2h
  2264  006DDC  0E20               	movlw	32
  2265  006DDE  6EDF               	movwf	indf2,c
  2266                           
  2267                           ;time.c: 343: e++;
  2268  006DE0  4A27               	infsnz	Read_date@e,f,c
  2269  006DE2  2A28               	incf	Read_date@e+1,f,c
  2270                           
  2271                           ;time.c: 344: c = Read();
  2272  006DE4  ECF5  F034         	call	_Read	;wreg free
  2273  006DE8  6E29               	movwf	Read_date@c,c
  2274                           
  2275                           ;time.c: 345: *e = ((c>>4)&0x03) + '0';
  2276  006DEA  3829               	swapf	Read_date@c,w,c
  2277  006DEC  0B0F               	andlw	15
  2278  006DEE  0B03               	andlw	3
  2279  006DF0  0F30               	addlw	48
  2280  006DF2  C027  FFD9         	movff	Read_date@e,fsr2l
  2281  006DF6  C028  FFDA         	movff	Read_date@e+1,fsr2h
  2282  006DFA  6EDF               	movwf	indf2,c
  2283                           
  2284                           ;time.c: 346: e++;
  2285  006DFC  4A27               	infsnz	Read_date@e,f,c
  2286  006DFE  2A28               	incf	Read_date@e+1,f,c
  2287                           
  2288                           ;time.c: 347: *e = (c&0x0F) + '0';
  2289  006E00  5029               	movf	Read_date@c,w,c
  2290  006E02  0B0F               	andlw	15
  2291  006E04  0F30               	addlw	48
  2292  006E06  C027  FFD9         	movff	Read_date@e,fsr2l
  2293  006E0A  C028  FFDA         	movff	Read_date@e+1,fsr2h
  2294  006E0E  6EDF               	movwf	indf2,c
  2295                           
  2296                           ;time.c: 348: e++;
  2297  006E10  4A27               	infsnz	Read_date@e,f,c
  2298  006E12  2A28               	incf	Read_date@e+1,f,c
  2299                           
  2300                           ;time.c: 349: *e = '/';
  2301  006E14  C027  FFD9         	movff	Read_date@e,fsr2l
  2302  006E18  C028  FFDA         	movff	Read_date@e+1,fsr2h
  2303  006E1C  0E2F               	movlw	47
  2304  006E1E  6EDF               	movwf	indf2,c
  2305  006E20  0012               	return	
  2306  006E22                     __end_of_Read_date:
  2307                           	opt stack 0
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           postinc0	equ	0xFEE
  2313                           wreg	equ	0xFE8
  2314                           postinc1	equ	0xFE6
  2315                           postdec1	equ	0xFE5
  2316                           fsr1l	equ	0xFE1
  2317                           indf2	equ	0xFDF
  2318                           postinc2	equ	0xFDE
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function _Read_day *****************
  2324 ;; Defined at:
  2325 ;;		line 332 in file "time.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    4
  2346 ;; This function calls:
  2347 ;;		_Read
  2348 ;;		_write_DAY
  2349 ;; This function is called by:
  2350 ;;		_Read_time
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text7
  2355  006844                     __ptext7:
  2356                           	opt stack 0
  2357  006844                     _Read_day:
  2358                           	opt stack 24
  2359                           
  2360                           ;time.c: 333: write_DAY(0x07 & Read());
  2361                           
  2362                           ;incstack = 0
  2363                           ;incstack = 0
  2364  006844  ECF5  F034         	call	_Read	;wreg free
  2365  006848  0B07               	andlw	7
  2366  00684A  6E05               	movwf	?_write_DAY,c
  2367  00684C  ECFB  F03A         	call	_write_DAY	;wreg free
  2368  006850  0012               	return	
  2369  006852                     __end_of_Read_day:
  2370                           	opt stack 0
  2371                           tblptru	equ	0xFF8
  2372                           tblptrh	equ	0xFF7
  2373                           tblptrl	equ	0xFF6
  2374                           tablat	equ	0xFF5
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           postinc1	equ	0xFE6
  2378                           postdec1	equ	0xFE5
  2379                           fsr1l	equ	0xFE1
  2380                           indf2	equ	0xFDF
  2381                           postinc2	equ	0xFDE
  2382                           fsr2h	equ	0xFDA
  2383                           fsr2l	equ	0xFD9
  2384                           status	equ	0xFD8
  2385                           
  2386 ;; *************** function _write_DAY *****************
  2387 ;; Defined at:
  2388 ;;		line 300 in file "time.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  day             1    4[COMRAM] unsigned char 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  day_7           4   29[COMRAM] unsigned char [4]
  2393 ;;  day_6           4   25[COMRAM] unsigned char [4]
  2394 ;;  day_5           4   21[COMRAM] unsigned char [4]
  2395 ;;  day_4           4   17[COMRAM] unsigned char [4]
  2396 ;;  day_3           4   13[COMRAM] unsigned char [4]
  2397 ;;  day_2           4    9[COMRAM] unsigned char [4]
  2398 ;;  day_1           4    5[COMRAM] unsigned char [4]
  2399 ;; Return value:  Size  Location     Type
  2400 ;;		None               void
  2401 ;; Registers used:
  2402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2408 ;;      Params:         1       0       0       0       0       0       0       0       0
  2409 ;;      Locals:        28       0       0       0       0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2411 ;;      Totals:        29       0       0       0       0       0       0       0       0
  2412 ;;Total ram usage:       29 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    1
  2415 ;; This function calls:
  2416 ;;		_Write_ARR
  2417 ;; This function is called by:
  2418 ;;		_Read_day
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text8
  2423  0075F6                     __ptext8:
  2424                           	opt stack 0
  2425  0075F6                     _write_DAY:
  2426                           	opt stack 26
  2427                           
  2428                           ;time.c: 301: unsigned char day_1[4] = "SUN";
  2429                           
  2430                           ;incstack = 0
  2431                           ;incstack = 0
  2432  0075F6  C1C7  F006         	movff	write_DAY@F256,write_DAY@day_1
  2433  0075FA  C1C8  F007         	movff	write_DAY@F256+1,write_DAY@day_1+1
  2434  0075FE  C1C9  F008         	movff	write_DAY@F256+2,write_DAY@day_1+2
  2435  007602  C1CA  F009         	movff	write_DAY@F256+3,write_DAY@day_1+3
  2436                           
  2437                           ;time.c: 302: unsigned char day_2[4] = "MON";
  2438  007606  C1CB  F00A         	movff	write_DAY@F258,write_DAY@day_2
  2439  00760A  C1CC  F00B         	movff	write_DAY@F258+1,write_DAY@day_2+1
  2440  00760E  C1CD  F00C         	movff	write_DAY@F258+2,write_DAY@day_2+2
  2441  007612  C1CE  F00D         	movff	write_DAY@F258+3,write_DAY@day_2+3
  2442                           
  2443                           ;time.c: 303: unsigned char day_3[4] = "TUE";
  2444  007616  C1CF  F00E         	movff	write_DAY@F260,write_DAY@day_3
  2445  00761A  C1D0  F00F         	movff	write_DAY@F260+1,write_DAY@day_3+1
  2446  00761E  C1D1  F010         	movff	write_DAY@F260+2,write_DAY@day_3+2
  2447  007622  C1D2  F011         	movff	write_DAY@F260+3,write_DAY@day_3+3
  2448                           
  2449                           ;time.c: 304: unsigned char day_4[4] = "WED";
  2450  007626  C1D3  F012         	movff	write_DAY@F262,write_DAY@day_4
  2451  00762A  C1D4  F013         	movff	write_DAY@F262+1,write_DAY@day_4+1
  2452  00762E  C1D5  F014         	movff	write_DAY@F262+2,write_DAY@day_4+2
  2453  007632  C1D6  F015         	movff	write_DAY@F262+3,write_DAY@day_4+3
  2454                           
  2455                           ;time.c: 305: unsigned char day_5[4] = "THU";
  2456  007636  C1D7  F016         	movff	write_DAY@F264,write_DAY@day_5
  2457  00763A  C1D8  F017         	movff	write_DAY@F264+1,write_DAY@day_5+1
  2458  00763E  C1D9  F018         	movff	write_DAY@F264+2,write_DAY@day_5+2
  2459  007642  C1DA  F019         	movff	write_DAY@F264+3,write_DAY@day_5+3
  2460                           
  2461                           ;time.c: 306: unsigned char day_6[4] = "FRI";
  2462  007646  C1DB  F01A         	movff	write_DAY@F266,write_DAY@day_6
  2463  00764A  C1DC  F01B         	movff	write_DAY@F266+1,write_DAY@day_6+1
  2464  00764E  C1DD  F01C         	movff	write_DAY@F266+2,write_DAY@day_6+2
  2465  007652  C1DE  F01D         	movff	write_DAY@F266+3,write_DAY@day_6+3
  2466                           
  2467                           ;time.c: 307: unsigned char day_7[4] = "SAT";
  2468  007656  C1DF  F01E         	movff	write_DAY@F268,write_DAY@day_7
  2469  00765A  C1E0  F01F         	movff	write_DAY@F268+1,write_DAY@day_7+1
  2470  00765E  C1E1  F020         	movff	write_DAY@F268+2,write_DAY@day_7+2
  2471  007662  C1E2  F021         	movff	write_DAY@F268+3,write_DAY@day_7+3
  2472                           
  2473                           ;time.c: 309: switch(day)
  2474  007666  D05B               	goto	l2591
  2475  007668                     l2575:
  2476  007668  0E00               	movlw	high write_DAY@day_1
  2477  00766A  6E02               	movwf	?_Write_ARR+1,c
  2478  00766C  0E06               	movlw	low write_DAY@day_1
  2479  00766E  6E01               	movwf	?_Write_ARR,c
  2480  007670  0100               	movlb	0	; () banked
  2481  007672  0E00               	movlw	high _time
  2482  007674  6E04               	movwf	?_Write_ARR+3,c
  2483  007676  0100               	movlb	0	; () banked
  2484  007678  0EFE               	movlw	low _time
  2485  00767A  6E03               	movwf	?_Write_ARR+2,c
  2486  00767C  EC0F  F036         	call	_Write_ARR	;wreg free
  2487                           
  2488                           ;time.c: 312: break;
  2489  007680  D064               	goto	l259
  2490  007682                     l2577:
  2491  007682  0E00               	movlw	high write_DAY@day_2
  2492  007684  6E02               	movwf	?_Write_ARR+1,c
  2493  007686  0E0A               	movlw	low write_DAY@day_2
  2494  007688  6E01               	movwf	?_Write_ARR,c
  2495  00768A  0100               	movlb	0	; () banked
  2496  00768C  0E00               	movlw	high _time
  2497  00768E  6E04               	movwf	?_Write_ARR+3,c
  2498  007690  0100               	movlb	0	; () banked
  2499  007692  0EFE               	movlw	low _time
  2500  007694  6E03               	movwf	?_Write_ARR+2,c
  2501  007696  EC0F  F036         	call	_Write_ARR	;wreg free
  2502                           
  2503                           ;time.c: 314: break;
  2504  00769A  D057               	goto	l259
  2505  00769C                     l2579:
  2506  00769C  0E00               	movlw	high write_DAY@day_3
  2507  00769E  6E02               	movwf	?_Write_ARR+1,c
  2508  0076A0  0E0E               	movlw	low write_DAY@day_3
  2509  0076A2  6E01               	movwf	?_Write_ARR,c
  2510  0076A4  0100               	movlb	0	; () banked
  2511  0076A6  0E00               	movlw	high _time
  2512  0076A8  6E04               	movwf	?_Write_ARR+3,c
  2513  0076AA  0100               	movlb	0	; () banked
  2514  0076AC  0EFE               	movlw	low _time
  2515  0076AE  6E03               	movwf	?_Write_ARR+2,c
  2516  0076B0  EC0F  F036         	call	_Write_ARR	;wreg free
  2517                           
  2518                           ;time.c: 316: break;
  2519  0076B4  D04A               	goto	l259
  2520  0076B6                     l2581:
  2521  0076B6  0E00               	movlw	high write_DAY@day_4
  2522  0076B8  6E02               	movwf	?_Write_ARR+1,c
  2523  0076BA  0E12               	movlw	low write_DAY@day_4
  2524  0076BC  6E01               	movwf	?_Write_ARR,c
  2525  0076BE  0100               	movlb	0	; () banked
  2526  0076C0  0E00               	movlw	high _time
  2527  0076C2  6E04               	movwf	?_Write_ARR+3,c
  2528  0076C4  0100               	movlb	0	; () banked
  2529  0076C6  0EFE               	movlw	low _time
  2530  0076C8  6E03               	movwf	?_Write_ARR+2,c
  2531  0076CA  EC0F  F036         	call	_Write_ARR	;wreg free
  2532                           
  2533                           ;time.c: 318: break;
  2534  0076CE  D03D               	goto	l259
  2535  0076D0                     l2583:
  2536  0076D0  0E00               	movlw	high write_DAY@day_5
  2537  0076D2  6E02               	movwf	?_Write_ARR+1,c
  2538  0076D4  0E16               	movlw	low write_DAY@day_5
  2539  0076D6  6E01               	movwf	?_Write_ARR,c
  2540  0076D8  0100               	movlb	0	; () banked
  2541  0076DA  0E00               	movlw	high _time
  2542  0076DC  6E04               	movwf	?_Write_ARR+3,c
  2543  0076DE  0100               	movlb	0	; () banked
  2544  0076E0  0EFE               	movlw	low _time
  2545  0076E2  6E03               	movwf	?_Write_ARR+2,c
  2546  0076E4  EC0F  F036         	call	_Write_ARR	;wreg free
  2547                           
  2548                           ;time.c: 320: break;
  2549  0076E8  D030               	goto	l259
  2550  0076EA                     l2585:
  2551  0076EA  0E00               	movlw	high write_DAY@day_6
  2552  0076EC  6E02               	movwf	?_Write_ARR+1,c
  2553  0076EE  0E1A               	movlw	low write_DAY@day_6
  2554  0076F0  6E01               	movwf	?_Write_ARR,c
  2555  0076F2  0100               	movlb	0	; () banked
  2556  0076F4  0E00               	movlw	high _time
  2557  0076F6  6E04               	movwf	?_Write_ARR+3,c
  2558  0076F8  0100               	movlb	0	; () banked
  2559  0076FA  0EFE               	movlw	low _time
  2560  0076FC  6E03               	movwf	?_Write_ARR+2,c
  2561  0076FE  EC0F  F036         	call	_Write_ARR	;wreg free
  2562                           
  2563                           ;time.c: 322: break;
  2564  007702  D023               	goto	l259
  2565  007704                     l2587:
  2566  007704  0E00               	movlw	high write_DAY@day_7
  2567  007706  6E02               	movwf	?_Write_ARR+1,c
  2568  007708  0E1E               	movlw	low write_DAY@day_7
  2569  00770A  6E01               	movwf	?_Write_ARR,c
  2570  00770C  0100               	movlb	0	; () banked
  2571  00770E  0E00               	movlw	high _time
  2572  007710  6E04               	movwf	?_Write_ARR+3,c
  2573  007712  0100               	movlb	0	; () banked
  2574  007714  0EFE               	movlw	low _time
  2575  007716  6E03               	movwf	?_Write_ARR+2,c
  2576  007718  EC0F  F036         	call	_Write_ARR	;wreg free
  2577                           
  2578                           ;time.c: 324: break;
  2579  00771C  D016               	goto	l259
  2580  00771E                     l2591:
  2581  00771E  5005               	movf	write_DAY@day,w,c
  2582                           
  2583                           ; Switch size 1, requested type "space"
  2584                           ; Number of cases is 7, Range of values is 1 to 7
  2585                           ; switch strategies available:
  2586                           ; Name         Instructions Cycles
  2587                           ; simple_byte           22    12 (average)
  2588                           ;	Chosen strategy is simple_byte
  2589  007720  0A01               	xorlw	1	; case 1
  2590  007722  B4D8               	btfsc	status,2,c
  2591  007724  D7A1               	goto	l2575
  2592  007726  0A03               	xorlw	3	; case 2
  2593  007728  B4D8               	btfsc	status,2,c
  2594  00772A  D7AB               	goto	l2577
  2595  00772C  0A01               	xorlw	1	; case 3
  2596  00772E  B4D8               	btfsc	status,2,c
  2597  007730  D7B5               	goto	l2579
  2598  007732  0A07               	xorlw	7	; case 4
  2599  007734  B4D8               	btfsc	status,2,c
  2600  007736  D7BF               	goto	l2581
  2601  007738  0A01               	xorlw	1	; case 5
  2602  00773A  B4D8               	btfsc	status,2,c
  2603  00773C  D7C9               	goto	l2583
  2604  00773E  0A03               	xorlw	3	; case 6
  2605  007740  B4D8               	btfsc	status,2,c
  2606  007742  D7D3               	goto	l2585
  2607  007744  0A01               	xorlw	1	; case 7
  2608  007746  B4D8               	btfsc	status,2,c
  2609  007748  D7DD               	goto	l2587
  2610  00774A                     l259:
  2611  00774A  0012               	return	
  2612  00774C                     __end_of_write_DAY:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           postinc0	equ	0xFEE
  2619                           wreg	equ	0xFE8
  2620                           postinc1	equ	0xFE6
  2621                           postdec1	equ	0xFE5
  2622                           fsr1l	equ	0xFE1
  2623                           indf2	equ	0xFDF
  2624                           postinc2	equ	0xFDE
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _Write_ARR *****************
  2630 ;; Defined at:
  2631 ;;		line 285 in file "time.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  c               2    0[COMRAM] PTR unsigned char 
  2634 ;;		 -> write_DAY@day_7(4), write_DAY@day_6(4), write_DAY@day_5(4), write_DAY@day_4(4), 
  2635 ;;		 -> write_DAY@day_3(4), write_DAY@day_2(4), write_DAY@day_1(4), 
  2636 ;;  e               2    2[COMRAM] PTR unsigned char 
  2637 ;;		 -> time(2), 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;		None               void
  2642 ;; Registers used:
  2643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2649 ;;      Params:         4       0       0       0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2652 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2653 ;;Total ram usage:        4 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_write_DAY
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text9
  2663  006C1E                     __ptext9:
  2664                           	opt stack 0
  2665  006C1E                     _Write_ARR:
  2666                           	opt stack 26
  2667                           
  2668                           ;time.c: 286: e = e+17;
  2669                           
  2670                           ;incstack = 0
  2671                           ;incstack = 0
  2672  006C1E  0E11               	movlw	17
  2673  006C20  2403               	addwf	Write_ARR@e,w,c
  2674  006C22  6E03               	movwf	Write_ARR@e,c
  2675  006C24  0E00               	movlw	0
  2676  006C26  2004               	addwfc	Write_ARR@e+1,w,c
  2677  006C28  6E04               	movwf	Write_ARR@e+1,c
  2678                           
  2679                           ;time.c: 287: while(*c!='\0')
  2680  006C2A  D00E               	goto	l2333
  2681  006C2C                     l2327:
  2682                           
  2683                           ;time.c: 288: {
  2684                           ;time.c: 289: *e = *c;
  2685  006C2C  C001  FFD9         	movff	Write_ARR@c,fsr2l
  2686  006C30  C002  FFDA         	movff	Write_ARR@c+1,fsr2h
  2687  006C34  C003  FFE1         	movff	Write_ARR@e,fsr1l
  2688  006C38  C004  FFE2         	movff	Write_ARR@e+1,fsr1h
  2689  006C3C  CFDF FFE7          	movff	indf2,indf1
  2690                           
  2691                           ;time.c: 290: e++;
  2692  006C40  4A03               	infsnz	Write_ARR@e,f,c
  2693  006C42  2A04               	incf	Write_ARR@e+1,f,c
  2694                           
  2695                           ;time.c: 291: c++;
  2696  006C44  4A01               	infsnz	Write_ARR@c,f,c
  2697  006C46  2A02               	incf	Write_ARR@c+1,f,c
  2698  006C48                     l2333:
  2699  006C48  C001  FFD9         	movff	Write_ARR@c,fsr2l
  2700  006C4C  C002  FFDA         	movff	Write_ARR@c+1,fsr2h
  2701  006C50  50DF               	movf	indf2,w,c
  2702  006C52  A4D8               	btfss	status,2,c
  2703  006C54  D7EB               	goto	l2327
  2704                           
  2705                           ;time.c: 292: }
  2706                           ;time.c: 293: e = e+2;
  2707  006C56  0E02               	movlw	2
  2708  006C58  2403               	addwf	Write_ARR@e,w,c
  2709  006C5A  6E03               	movwf	Write_ARR@e,c
  2710  006C5C  0E00               	movlw	0
  2711  006C5E  2004               	addwfc	Write_ARR@e+1,w,c
  2712  006C60  6E04               	movwf	Write_ARR@e+1,c
  2713                           
  2714                           ;time.c: 294: *e = ' ';
  2715  006C62  C003  FFD9         	movff	Write_ARR@e,fsr2l
  2716  006C66  C004  FFDA         	movff	Write_ARR@e+1,fsr2h
  2717  006C6A  0E20               	movlw	32
  2718  006C6C  6EDF               	movwf	indf2,c
  2719  006C6E  0012               	return	
  2720  006C70                     __end_of_Write_ARR:
  2721                           	opt stack 0
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           indf1	equ	0xFE7
  2729                           postinc1	equ	0xFE6
  2730                           postdec1	equ	0xFE5
  2731                           fsr1h	equ	0xFE2
  2732                           fsr1l	equ	0xFE1
  2733                           indf2	equ	0xFDF
  2734                           postinc2	equ	0xFDE
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _Read_hour *****************
  2740 ;; Defined at:
  2741 ;;		line 252 in file "time.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  e               2   38[COMRAM] PTR unsigned char 
  2744 ;;		 -> time(2), 
  2745 ;;  mode            1   40[COMRAM] unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  c               1   44[COMRAM] unsigned char 
  2748 ;;  i               1   43[COMRAM] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;		None               void
  2751 ;; Registers used:
  2752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2758 ;;      Params:         3       0       0       0       0       0       0       0       0
  2759 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2760 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2761 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2762 ;;Total ram usage:        7 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    4
  2765 ;; This function calls:
  2766 ;;		_Read
  2767 ;; This function is called by:
  2768 ;;		_Read_time
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text10
  2773  007140                     __ptext10:
  2774                           	opt stack 0
  2775  007140                     _Read_hour:
  2776                           	opt stack 24
  2777                           
  2778                           ;time.c: 253: unsigned char c,i=0;
  2779                           
  2780                           ;incstack = 0
  2781                           ;incstack = 0
  2782  007140  6E2A               	movwf	??_Read_hour& (0+255),c
  2783  007142  0E00               	movlw	0
  2784  007144  6E2C               	movwf	Read_hour@i,c
  2785  007146  502A               	movf	??_Read_hour& (0+255),w,c
  2786                           
  2787                           ;time.c: 254: c = Read();
  2788  007148  ECF5  F034         	call	_Read	;wreg free
  2789  00714C  6E2D               	movwf	Read_hour@c,c
  2790                           
  2791                           ;time.c: 255: if((mode==0)||(mode==1))
  2792  00714E  5029               	movf	Read_hour@mode,w,c
  2793  007150  B4D8               	btfsc	status,2,c
  2794  007152  D003               	goto	l3081
  2795  007154  0429               	decf	Read_hour@mode,w,c
  2796  007156  A4D8               	btfss	status,2,c
  2797  007158  D004               	goto	l3083
  2798  00715A                     l3081:
  2799                           
  2800                           ;time.c: 256: *e = ((c>>4)&0x01) + '0';
  2801  00715A  382D               	swapf	Read_hour@c,w,c
  2802  00715C  0B0F               	andlw	15
  2803  00715E  0B01               	andlw	1
  2804  007160  D003               	goto	L1
  2805  007162                     l3083:
  2806                           
  2807                           ;time.c: 257: else
  2808                           ;time.c: 258: *e = ((c>>4)&0x03) + '0';
  2809  007162  382D               	swapf	Read_hour@c,w,c
  2810  007164  0B0F               	andlw	15
  2811  007166  0B03               	andlw	3
  2812  007168                     L1:
  2813  007168  0F30               	addlw	48
  2814  00716A  C027  FFD9         	movff	Read_hour@e,fsr2l
  2815  00716E  C028  FFDA         	movff	Read_hour@e+1,fsr2h
  2816  007172  6EDF               	movwf	indf2,c
  2817                           
  2818                           ;time.c: 259: e++;
  2819  007174  4A27               	infsnz	Read_hour@e,f,c
  2820  007176  2A28               	incf	Read_hour@e+1,f,c
  2821                           
  2822                           ;time.c: 260: *e = (c&0x0F) + '0';
  2823  007178  502D               	movf	Read_hour@c,w,c
  2824  00717A  0B0F               	andlw	15
  2825  00717C  0F30               	addlw	48
  2826  00717E  C027  FFD9         	movff	Read_hour@e,fsr2l
  2827  007182  C028  FFDA         	movff	Read_hour@e+1,fsr2h
  2828  007186  6EDF               	movwf	indf2,c
  2829                           
  2830                           ;time.c: 261: e++;
  2831  007188  4A27               	infsnz	Read_hour@e,f,c
  2832  00718A  2A28               	incf	Read_hour@e+1,f,c
  2833                           
  2834                           ;time.c: 262: *e = ':';
  2835  00718C  C027  FFD9         	movff	Read_hour@e,fsr2l
  2836  007190  C028  FFDA         	movff	Read_hour@e+1,fsr2h
  2837  007194  0E3A               	movlw	58
  2838  007196  6EDF               	movwf	indf2,c
  2839                           
  2840                           ;time.c: 263: while(i!=11)
  2841  007198  D003               	goto	l3093
  2842  00719A                     l3091:
  2843                           
  2844                           ;time.c: 264: {
  2845                           ;time.c: 265: e++;
  2846  00719A  4A27               	infsnz	Read_hour@e,f,c
  2847  00719C  2A28               	incf	Read_hour@e+1,f,c
  2848                           
  2849                           ;time.c: 266: i++;
  2850  00719E  2A2C               	incf	Read_hour@i,f,c
  2851  0071A0                     l3093:
  2852  0071A0  502C               	movf	Read_hour@i,w,c
  2853  0071A2  0A0B               	xorlw	11
  2854  0071A4  A4D8               	btfss	status,2,c
  2855  0071A6  D7F9               	goto	l3091
  2856                           
  2857                           ;time.c: 267: }
  2858                           ;time.c: 268: if((c>>6)&0x01)
  2859  0071A8  C02D  F02A         	movff	Read_hour@c,??_Read_hour
  2860  0071AC  0E06               	movlw	6
  2861  0071AE  6E2B               	movwf	(??_Read_hour+1)& (0+255),c
  2862  0071B0                     u2685:
  2863  0071B0  90D8               	bcf	status,0,c
  2864  0071B2  322A               	rrcf	??_Read_hour,f,c
  2865  0071B4  2E2B               	decfsz	(??_Read_hour+1)& (0+255),f,c
  2866  0071B6  D7FC               	goto	u2685
  2867  0071B8  A02A               	btfss	??_Read_hour,0,c
  2868  0071BA  D01E               	goto	l227
  2869                           
  2870                           ;time.c: 269: {
  2871                           ;time.c: 270: if((c>>5)&0x01)
  2872  0071BC  C02D  F02A         	movff	Read_hour@c,??_Read_hour
  2873  0071C0  0E05               	movlw	5
  2874  0071C2  6E2B               	movwf	(??_Read_hour+1)& (0+255),c
  2875  0071C4                     u2705:
  2876  0071C4  90D8               	bcf	status,0,c
  2877  0071C6  322A               	rrcf	??_Read_hour,f,c
  2878  0071C8  2E2B               	decfsz	(??_Read_hour+1)& (0+255),f,c
  2879  0071CA  D7FC               	goto	u2705
  2880  0071CC  A02A               	btfss	??_Read_hour,0,c
  2881  0071CE  D006               	goto	l3101
  2882                           
  2883                           ;time.c: 271: *e = 'P';
  2884  0071D0  C027  FFD9         	movff	Read_hour@e,fsr2l
  2885  0071D4  C028  FFDA         	movff	Read_hour@e+1,fsr2h
  2886  0071D8  0E50               	movlw	80
  2887  0071DA  D005               	goto	L2
  2888  0071DC                     l3101:
  2889                           
  2890                           ;time.c: 272: else
  2891                           ;time.c: 273: *e = 'A';
  2892  0071DC  C027  FFD9         	movff	Read_hour@e,fsr2l
  2893  0071E0  C028  FFDA         	movff	Read_hour@e+1,fsr2h
  2894  0071E4  0E41               	movlw	65
  2895  0071E6                     L2:
  2896  0071E6  6EDF               	movwf	indf2,c
  2897                           
  2898                           ;time.c: 274: e++;
  2899  0071E8  4A27               	infsnz	Read_hour@e,f,c
  2900  0071EA  2A28               	incf	Read_hour@e+1,f,c
  2901                           
  2902                           ;time.c: 275: *e = 'M';
  2903  0071EC  C027  FFD9         	movff	Read_hour@e,fsr2l
  2904  0071F0  C028  FFDA         	movff	Read_hour@e+1,fsr2h
  2905  0071F4  0E4D               	movlw	77
  2906  0071F6  6EDF               	movwf	indf2,c
  2907  0071F8                     l227:
  2908  0071F8  0012               	return	
  2909  0071FA                     __end_of_Read_hour:
  2910                           	opt stack 0
  2911                           tblptru	equ	0xFF8
  2912                           tblptrh	equ	0xFF7
  2913                           tblptrl	equ	0xFF6
  2914                           tablat	equ	0xFF5
  2915                           postinc0	equ	0xFEE
  2916                           wreg	equ	0xFE8
  2917                           indf1	equ	0xFE7
  2918                           postinc1	equ	0xFE6
  2919                           postdec1	equ	0xFE5
  2920                           fsr1h	equ	0xFE2
  2921                           fsr1l	equ	0xFE1
  2922                           indf2	equ	0xFDF
  2923                           postinc2	equ	0xFDE
  2924                           fsr2h	equ	0xFDA
  2925                           fsr2l	equ	0xFD9
  2926                           status	equ	0xFD8
  2927                           
  2928 ;; *************** function _Read_min *****************
  2929 ;; Defined at:
  2930 ;;		line 238 in file "time.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  e               2   38[COMRAM] PTR unsigned char 
  2933 ;;		 -> time(2), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  c               1   40[COMRAM] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;		None               void
  2938 ;; Registers used:
  2939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2945 ;;      Params:         2       0       0       0       0       0       0       0       0
  2946 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2948 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2949 ;;Total ram usage:        3 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    4
  2952 ;; This function calls:
  2953 ;;		_Read
  2954 ;; This function is called by:
  2955 ;;		_Read_time
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text11
  2960  006B8A                     __ptext11:
  2961                           	opt stack 0
  2962  006B8A                     _Read_min:
  2963                           	opt stack 24
  2964                           
  2965                           ;time.c: 239: unsigned char c;
  2966                           ;time.c: 240: e= e+3;
  2967                           
  2968                           ;incstack = 0
  2969                           ;incstack = 0
  2970  006B8A  0E03               	movlw	3
  2971  006B8C  2427               	addwf	Read_min@e,w,c
  2972  006B8E  6E27               	movwf	Read_min@e,c
  2973  006B90  0E00               	movlw	0
  2974  006B92  2028               	addwfc	Read_min@e+1,w,c
  2975  006B94  6E28               	movwf	Read_min@e+1,c
  2976                           
  2977                           ;time.c: 241: c = Read();
  2978  006B96  ECF5  F034         	call	_Read	;wreg free
  2979  006B9A  6E29               	movwf	Read_min@c,c
  2980                           
  2981                           ;time.c: 242: *e = ((c>>4)&0x07) + '0';
  2982  006B9C  3829               	swapf	Read_min@c,w,c
  2983  006B9E  0B0F               	andlw	15
  2984  006BA0  0B07               	andlw	7
  2985  006BA2  0F30               	addlw	48
  2986  006BA4  C027  FFD9         	movff	Read_min@e,fsr2l
  2987  006BA8  C028  FFDA         	movff	Read_min@e+1,fsr2h
  2988  006BAC  6EDF               	movwf	indf2,c
  2989                           
  2990                           ;time.c: 243: e++;
  2991  006BAE  4A27               	infsnz	Read_min@e,f,c
  2992  006BB0  2A28               	incf	Read_min@e+1,f,c
  2993                           
  2994                           ;time.c: 244: *e = (c&0x0F) + '0';
  2995  006BB2  5029               	movf	Read_min@c,w,c
  2996  006BB4  0B0F               	andlw	15
  2997  006BB6  0F30               	addlw	48
  2998  006BB8  C027  FFD9         	movff	Read_min@e,fsr2l
  2999  006BBC  C028  FFDA         	movff	Read_min@e+1,fsr2h
  3000  006BC0  6EDF               	movwf	indf2,c
  3001                           
  3002                           ;time.c: 245: e++;
  3003  006BC2  4A27               	infsnz	Read_min@e,f,c
  3004  006BC4  2A28               	incf	Read_min@e+1,f,c
  3005                           
  3006                           ;time.c: 246: *e = ':';
  3007  006BC6  C027  FFD9         	movff	Read_min@e,fsr2l
  3008  006BCA  C028  FFDA         	movff	Read_min@e+1,fsr2h
  3009  006BCE  0E3A               	movlw	58
  3010  006BD0  6EDF               	movwf	indf2,c
  3011  006BD2  0012               	return	
  3012  006BD4                     __end_of_Read_min:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           postinc0	equ	0xFEE
  3019                           wreg	equ	0xFE8
  3020                           indf1	equ	0xFE7
  3021                           postinc1	equ	0xFE6
  3022                           postdec1	equ	0xFE5
  3023                           fsr1h	equ	0xFE2
  3024                           fsr1l	equ	0xFE1
  3025                           indf2	equ	0xFDF
  3026                           postinc2	equ	0xFDE
  3027                           fsr2h	equ	0xFDA
  3028                           fsr2l	equ	0xFD9
  3029                           status	equ	0xFD8
  3030                           
  3031 ;; *************** function _Read_sec *****************
  3032 ;; Defined at:
  3033 ;;		line 224 in file "time.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  e               2   38[COMRAM] PTR unsigned char 
  3036 ;;		 -> time(2), 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  c               1   40[COMRAM] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;		None               void
  3041 ;; Registers used:
  3042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3048 ;;      Params:         2       0       0       0       0       0       0       0       0
  3049 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3051 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3052 ;;Total ram usage:        3 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    4
  3055 ;; This function calls:
  3056 ;;		_Read
  3057 ;; This function is called by:
  3058 ;;		_Read_time
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text12
  3063  006B40                     __ptext12:
  3064                           	opt stack 0
  3065  006B40                     _Read_sec:
  3066                           	opt stack 24
  3067                           
  3068                           ;time.c: 225: unsigned char c;
  3069                           ;time.c: 226: e=e+6;
  3070                           
  3071                           ;incstack = 0
  3072                           ;incstack = 0
  3073  006B40  0E06               	movlw	6
  3074  006B42  2427               	addwf	Read_sec@e,w,c
  3075  006B44  6E27               	movwf	Read_sec@e,c
  3076  006B46  0E00               	movlw	0
  3077  006B48  2028               	addwfc	Read_sec@e+1,w,c
  3078  006B4A  6E28               	movwf	Read_sec@e+1,c
  3079                           
  3080                           ;time.c: 227: c = Read();
  3081  006B4C  ECF5  F034         	call	_Read	;wreg free
  3082  006B50  6E29               	movwf	Read_sec@c,c
  3083                           
  3084                           ;time.c: 228: *e = ((c>>4)&0x07) + '0';
  3085  006B52  3829               	swapf	Read_sec@c,w,c
  3086  006B54  0B0F               	andlw	15
  3087  006B56  0B07               	andlw	7
  3088  006B58  0F30               	addlw	48
  3089  006B5A  C027  FFD9         	movff	Read_sec@e,fsr2l
  3090  006B5E  C028  FFDA         	movff	Read_sec@e+1,fsr2h
  3091  006B62  6EDF               	movwf	indf2,c
  3092                           
  3093                           ;time.c: 229: e++;
  3094  006B64  4A27               	infsnz	Read_sec@e,f,c
  3095  006B66  2A28               	incf	Read_sec@e+1,f,c
  3096                           
  3097                           ;time.c: 230: *e = (c&0x0F) + '0';
  3098  006B68  5029               	movf	Read_sec@c,w,c
  3099  006B6A  0B0F               	andlw	15
  3100  006B6C  0F30               	addlw	48
  3101  006B6E  C027  FFD9         	movff	Read_sec@e,fsr2l
  3102  006B72  C028  FFDA         	movff	Read_sec@e+1,fsr2h
  3103  006B76  6EDF               	movwf	indf2,c
  3104                           
  3105                           ;time.c: 231: e++;
  3106  006B78  4A27               	infsnz	Read_sec@e,f,c
  3107  006B7A  2A28               	incf	Read_sec@e+1,f,c
  3108                           
  3109                           ;time.c: 232: *e = ' ';
  3110  006B7C  C027  FFD9         	movff	Read_sec@e,fsr2l
  3111  006B80  C028  FFDA         	movff	Read_sec@e+1,fsr2h
  3112  006B84  0E20               	movlw	32
  3113  006B86  6EDF               	movwf	indf2,c
  3114  006B88  0012               	return	
  3115  006B8A                     __end_of_Read_sec:
  3116                           	opt stack 0
  3117                           tblptru	equ	0xFF8
  3118                           tblptrh	equ	0xFF7
  3119                           tblptrl	equ	0xFF6
  3120                           tablat	equ	0xFF5
  3121                           postinc0	equ	0xFEE
  3122                           wreg	equ	0xFE8
  3123                           indf1	equ	0xFE7
  3124                           postinc1	equ	0xFE6
  3125                           postdec1	equ	0xFE5
  3126                           fsr1h	equ	0xFE2
  3127                           fsr1l	equ	0xFE1
  3128                           indf2	equ	0xFDF
  3129                           postinc2	equ	0xFDE
  3130                           fsr2h	equ	0xFDA
  3131                           fsr2l	equ	0xFD9
  3132                           status	equ	0xFD8
  3133                           
  3134 ;; *************** function _Read *****************
  3135 ;; Defined at:
  3136 ;;		line 47 in file "i2c_1.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  c               1   37[COMRAM] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      unsigned char 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3150 ;;      Params:         0       0       0       0       0       0       0       0       0
  3151 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3152 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3153 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3154 ;;Total ram usage:        2 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    3
  3157 ;; This function calls:
  3158 ;;		_delay_ms
  3159 ;;		_ReadBUF
  3160 ;;		_Write_I2C
  3161 ;;		_ReadI2C
  3162 ;; This function is called by:
  3163 ;;		_Read_sec
  3164 ;;		_Read_min
  3165 ;;		_Read_hour
  3166 ;;		_Read_day
  3167 ;;		_Read_date
  3168 ;;		_Read_month
  3169 ;;		_Read_year
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text13
  3174  0069EA                     __ptext13:
  3175                           	opt stack 0
  3176  0069EA                     _Read:
  3177                           	opt stack 24
  3178                           
  3179                           ;i2c_1.c: 48: unsigned char c;
  3180                           ;i2c_1.c: 49: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  3181                           
  3182                           ;incstack = 0
  3183                           ;incstack = 0
  3184  0069EA  82C5               	bsf	4037,1,c	;volatile
  3185  0069EC                     l320:
  3186  0069EC  B2C5               	btfsc	4037,1,c	;volatile
  3187  0069EE  D7FE               	goto	l320
  3188                           
  3189                           ;i2c_1.c: 50: delay_ms(1);
  3190  0069F0  6E25               	movwf	??_Read& (0+255),c
  3191  0069F2  0E01               	movlw	1
  3192  0069F4  6E22               	movwf	?_delay_ms,c
  3193  0069F6  5025               	movf	??_Read& (0+255),w,c
  3194  0069F8  EC8D  F034         	call	_delay_ms	;wreg free
  3195                           
  3196                           ;i2c_1.c: 51: Write_I2C( 0xD1 );
  3197  0069FC  6E25               	movwf	??_Read& (0+255),c
  3198  0069FE  0ED1               	movlw	209
  3199  006A00  6E22               	movwf	?_Write_I2C,c
  3200  006A02  5025               	movf	??_Read& (0+255),w,c
  3201  006A04  EC1B  F034         	call	_Write_I2C	;wreg free
  3202                           
  3203                           ;i2c_1.c: 52: c = ReadI2C();
  3204  006A08  EC51  F034         	call	_ReadI2C	;wreg free
  3205  006A0C  6E26               	movwf	Read@c,c
  3206                           
  3207                           ;i2c_1.c: 53: ReadBUF();
  3208  006A0E  ECF4  F033         	call	_ReadBUF	;wreg free
  3209                           
  3210                           ;i2c_1.c: 54: return(c);
  3211  006A12  5026               	movf	Read@c,w,c
  3212  006A14  0012               	return	
  3213  006A16                     __end_of_Read:
  3214                           	opt stack 0
  3215                           tblptru	equ	0xFF8
  3216                           tblptrh	equ	0xFF7
  3217                           tblptrl	equ	0xFF6
  3218                           tablat	equ	0xFF5
  3219                           postinc0	equ	0xFEE
  3220                           wreg	equ	0xFE8
  3221                           indf1	equ	0xFE7
  3222                           postinc1	equ	0xFE6
  3223                           postdec1	equ	0xFE5
  3224                           fsr1h	equ	0xFE2
  3225                           fsr1l	equ	0xFE1
  3226                           indf2	equ	0xFDF
  3227                           postinc2	equ	0xFDE
  3228                           fsr2h	equ	0xFDA
  3229                           fsr2l	equ	0xFD9
  3230                           status	equ	0xFD8
  3231                           
  3232 ;; *************** function _delay_us *****************
  3233 ;; Defined at:
  3234 ;;		line 28 in file "delay.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  t               1    1[COMRAM] unsigned char 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  i               1    3[COMRAM] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;		None               void
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3248 ;;      Params:         1       0       0       0       0       0       0       0       0
  3249 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3250 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3251 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3252 ;;Total ram usage:        3 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    1
  3255 ;; This function calls:
  3256 ;;		_Delay1KTCYx
  3257 ;; This function is called by:
  3258 ;;		_Read_time
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text14
  3263  00693A                     __ptext14:
  3264                           	opt stack 0
  3265  00693A                     _delay_us:
  3266                           	opt stack 27
  3267                           
  3268                           ;delay.c: 29: unsigned char i;
  3269                           ;delay.c: 30: for (i=0;i<=t;i++)
  3270                           
  3271                           ;incstack = 0
  3272                           ;incstack = 0
  3273  00693A  6E03               	movwf	??_delay_us& (0+255),c
  3274  00693C  0E00               	movlw	0
  3275  00693E  6E04               	movwf	delay_us@i,c
  3276  006940  5003               	movf	??_delay_us& (0+255),w,c
  3277  006942  D007               	goto	l2523
  3278  006944                     l2519:
  3279                           
  3280                           ;delay.c: 31: Delay1KTCYx(1);
  3281  006944  6E03               	movwf	??_delay_us& (0+255),c
  3282  006946  0E01               	movlw	1
  3283  006948  6E01               	movwf	?_Delay1KTCYx,c
  3284  00694A  5003               	movf	??_delay_us& (0+255),w,c
  3285  00694C  EC14  F034         	call	_Delay1KTCYx	;wreg free
  3286  006950  2A04               	incf	delay_us@i,f,c
  3287  006952                     l2523:
  3288  006952  5004               	movf	delay_us@i,w,c
  3289  006954  6002               	cpfslt	delay_us@t,c
  3290  006956  D7F6               	goto	l2519
  3291                           
  3292                           ;delay.c: 34: return;
  3293  006958  0012               	return	
  3294  00695A                     __end_of_delay_us:
  3295                           	opt stack 0
  3296                           tblptru	equ	0xFF8
  3297                           tblptrh	equ	0xFF7
  3298                           tblptrl	equ	0xFF6
  3299                           tablat	equ	0xFF5
  3300                           postinc0	equ	0xFEE
  3301                           wreg	equ	0xFE8
  3302                           indf1	equ	0xFE7
  3303                           postinc1	equ	0xFE6
  3304                           postdec1	equ	0xFE5
  3305                           fsr1h	equ	0xFE2
  3306                           fsr1l	equ	0xFE1
  3307                           indf2	equ	0xFDF
  3308                           postinc2	equ	0xFDE
  3309                           fsr2h	equ	0xFDA
  3310                           fsr2l	equ	0xFD9
  3311                           status	equ	0xFD8
  3312                           
  3313 ;; *************** function _Get_data *****************
  3314 ;; Defined at:
  3315 ;;		line 170 in file "time.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  str2           19    1[BANK0 ] unsigned char [19]
  3320 ;;  error          18   34[BANK0 ] unsigned char [18]
  3321 ;;  str8           14   20[BANK0 ] unsigned char [14]
  3322 ;;  s_6             3   67[BANK0 ] unsigned char [3]
  3323 ;;  s_5             3   64[BANK0 ] unsigned char [3]
  3324 ;;  s_4             3   61[BANK0 ] unsigned char [3]
  3325 ;;  s_3             3   58[BANK0 ] unsigned char [3]
  3326 ;;  s_2             3   55[BANK0 ] unsigned char [3]
  3327 ;;  s_1             3   52[BANK0 ] unsigned char [3]
  3328 ;;  mode            1   77[BANK0 ] unsigned char 
  3329 ;;  month           1   76[BANK0 ] unsigned char 
  3330 ;;  date            1   75[BANK0 ] unsigned char 
  3331 ;;  year            1   74[BANK0 ] unsigned char 
  3332 ;;  h               1   73[BANK0 ] unsigned char 
  3333 ;;  m               1   72[BANK0 ] unsigned char 
  3334 ;;  s               1   71[BANK0 ] unsigned char 
  3335 ;;  day             1   70[BANK0 ] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      unsigned char 
  3338 ;; Registers used:
  3339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0
  3346 ;;      Locals:         0      77       0       0       0       0       0       0       0
  3347 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3348 ;;      Totals:         0      78       0       0       0       0       0       0       0
  3349 ;;Total ram usage:       78 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    4
  3352 ;; This function calls:
  3353 ;;		_Write_str
  3354 ;;		_Set_time
  3355 ;;		_Read_string
  3356 ;;		_Set_day
  3357 ;;		_Set_date
  3358 ;;		_strcmp
  3359 ;;		_Write_time_
  3360 ;;		_Write_time
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text15
  3367  007A36                     __ptext15:
  3368                           	opt stack 0
  3369  007A36                     _Get_data:
  3370                           	opt stack 25
  3371                           
  3372                           ;time.c: 171: unsigned char s, m, h, day, date, month, year, mode=4;
  3373                           
  3374                           ;incstack = 0
  3375                           ;incstack = 0
  3376  007A36  0100               	movlb	0	; () banked
  3377  007A38  6F60               	movwf	??_Get_data& (0+255),b
  3378  007A3A  0E04               	movlw	4
  3379  007A3C  0100               	movlb	0	; () banked
  3380  007A3E  0100               	movlb	0	; () banked
  3381  007A40  6FAD               	movwf	Get_data@mode& (0+255),b
  3382  007A42  0100               	movlb	0	; () banked
  3383  007A44  5160               	movf	??_Get_data& (0+255),w,b
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;time.c: 172: unsigned char str2[19] = "\nSELECT MODE 12/24";
  3387  007A46  EE21  F05E         	lfsr	2,Get_data@F227
  3388  007A4A  EE10  F061         	lfsr	1,Get_data@str2
  3389  007A4E  0E13               	movlw	19
  3390  007A50                     u2491:
  3391  007A50  CFDE FFE6          	movff	postinc2,postinc1
  3392  007A54  2EE8               	decfsz	wreg,f,c
  3393  007A56  D7FC               	goto	u2491
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;time.c: 173: unsigned char str8[14] = "\nEnter AM/PM?";
  3397  007A58  EE21  F0B9         	lfsr	2,Get_data@F229
  3398  007A5C  EE10  F074         	lfsr	1,Get_data@str8
  3399  007A60  0E0E               	movlw	14
  3400  007A62                     u2501:
  3401  007A62  CFDE FFE6          	movff	postinc2,postinc1
  3402  007A66  2EE8               	decfsz	wreg,f,c
  3403  007A68  D7FC               	goto	u2501
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;time.c: 174: unsigned char error[] = "\nInvalid Entry..!";
  3407  007A6A  EE21  F071         	lfsr	2,Get_data@F231
  3408  007A6E  EE10  F082         	lfsr	1,Get_data@error
  3409  007A72  0E12               	movlw	18
  3410  007A74                     u2511:
  3411  007A74  CFDE FFE6          	movff	postinc2,postinc1
  3412  007A78  2EE8               	decfsz	wreg,f,c
  3413  007A7A  D7FC               	goto	u2511
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;time.c: 175: unsigned char s_1[3] = "12";
  3417  007A7C  C1E3  F094         	movff	Get_data@F233,Get_data@s_1
  3418  007A80  C1E4  F095         	movff	Get_data@F233+1,Get_data@s_1+1
  3419  007A84  C1E5  F096         	movff	Get_data@F233+2,Get_data@s_1+2
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;time.c: 176: unsigned char s_2[3] = "24";
  3423  007A88  C1E6  F097         	movff	Get_data@F235,Get_data@s_2
  3424  007A8C  C1E7  F098         	movff	Get_data@F235+1,Get_data@s_2+1
  3425  007A90  C1E8  F099         	movff	Get_data@F235+2,Get_data@s_2+2
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;time.c: 177: unsigned char s_3[3] = "am";
  3429  007A94  C1E9  F09A         	movff	Get_data@F237,Get_data@s_3
  3430  007A98  C1EA  F09B         	movff	Get_data@F237+1,Get_data@s_3+1
  3431  007A9C  C1EB  F09C         	movff	Get_data@F237+2,Get_data@s_3+2
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;time.c: 178: unsigned char s_4[3] = "AM";
  3435  007AA0  C1EC  F09D         	movff	Get_data@F239,Get_data@s_4
  3436  007AA4  C1ED  F09E         	movff	Get_data@F239+1,Get_data@s_4+1
  3437  007AA8  C1EE  F09F         	movff	Get_data@F239+2,Get_data@s_4+2
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;time.c: 179: unsigned char s_5[3] = "pm";
  3441  007AAC  C1EF  F0A0         	movff	Get_data@F241,Get_data@s_5
  3442  007AB0  C1F0  F0A1         	movff	Get_data@F241+1,Get_data@s_5+1
  3443  007AB4  C1F1  F0A2         	movff	Get_data@F241+2,Get_data@s_5+2
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;time.c: 180: unsigned char s_6[3] = "PM";
  3447  007AB8  C1F2  F0A3         	movff	Get_data@F243,Get_data@s_6
  3448  007ABC  C1F3  F0A4         	movff	Get_data@F243+1,Get_data@s_6+1
  3449  007AC0  C1F4  F0A5         	movff	Get_data@F243+2,Get_data@s_6+2
  3450  007AC4                     l2969:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;time.c: 182: {
  3454                           ;time.c: 183: Write_str(str2);
  3455  007AC4  0100               	movlb	0	; () banked
  3456  007AC6  0E00               	movlw	high Get_data@str2
  3457  007AC8  6E04               	movwf	?_Write_str+1,c
  3458  007ACA  0100               	movlb	0	; () banked
  3459  007ACC  0E61               	movlw	low Get_data@str2
  3460  007ACE  6E03               	movwf	?_Write_str,c
  3461  007AD0  EC22  F035         	call	_Write_str	;wreg free
  3462                           
  3463                           ;time.c: 184: Read_string(str, 2);
  3464  007AD4  0100               	movlb	0	; () banked
  3465  007AD6  0E00               	movlw	high _str
  3466  007AD8  6E04               	movwf	?_Read_string+1,c
  3467  007ADA  0100               	movlb	0	; () banked
  3468  007ADC  0EF3               	movlw	low _str
  3469  007ADE  6E03               	movwf	?_Read_string,c
  3470  007AE0  0100               	movlb	0	; () banked
  3471  007AE2  6F60               	movwf	??_Get_data& (0+255),b
  3472  007AE4  0E02               	movlw	2
  3473  007AE6  6E05               	movwf	?_Read_string+2,c
  3474  007AE8  0100               	movlb	0	; () banked
  3475  007AEA  5160               	movf	??_Get_data& (0+255),w,b
  3476  007AEC  EC38  F036         	call	_Read_string	;wreg free
  3477                           
  3478                           ;time.c: 185: if(!(strcmp(str, s_1)))
  3479  007AF0  0100               	movlb	0	; () banked
  3480  007AF2  0E00               	movlw	high _str
  3481  007AF4  6E02               	movwf	?_strcmp+1,c
  3482  007AF6  0100               	movlb	0	; () banked
  3483  007AF8  0EF3               	movlw	low _str
  3484  007AFA  6E01               	movwf	?_strcmp,c
  3485  007AFC  0100               	movlb	0	; () banked
  3486  007AFE  0E00               	movlw	high Get_data@s_1
  3487  007B00  6E04               	movwf	?_strcmp+3,c
  3488  007B02  0100               	movlb	0	; () banked
  3489  007B04  0E94               	movlw	low Get_data@s_1
  3490  007B06  6E03               	movwf	?_strcmp+2,c
  3491  007B08  EC59  F035         	call	_strcmp	;wreg free
  3492  007B0C  5002               	movf	?_strcmp+1,w,c
  3493  007B0E  1001               	iorwf	?_strcmp,w,c
  3494  007B10  A4D8               	btfss	status,2,c
  3495  007B12  D07E               	goto	l2993
  3496  007B14                     l2975:
  3497                           
  3498                           ;time.c: 188: Write_str(str8);
  3499  007B14  0100               	movlb	0	; () banked
  3500  007B16  0E00               	movlw	high Get_data@str8
  3501  007B18  6E04               	movwf	?_Write_str+1,c
  3502  007B1A  0100               	movlb	0	; () banked
  3503  007B1C  0E74               	movlw	low Get_data@str8
  3504  007B1E  6E03               	movwf	?_Write_str,c
  3505  007B20  EC22  F035         	call	_Write_str	;wreg free
  3506                           
  3507                           ;time.c: 189: Read_string(str, 2);
  3508  007B24  0100               	movlb	0	; () banked
  3509  007B26  0E00               	movlw	high _str
  3510  007B28  6E04               	movwf	?_Read_string+1,c
  3511  007B2A  0100               	movlb	0	; () banked
  3512  007B2C  0EF3               	movlw	low _str
  3513  007B2E  6E03               	movwf	?_Read_string,c
  3514  007B30  0100               	movlb	0	; () banked
  3515  007B32  6F60               	movwf	??_Get_data& (0+255),b
  3516  007B34  0E02               	movlw	2
  3517  007B36  6E05               	movwf	?_Read_string+2,c
  3518  007B38  0100               	movlb	0	; () banked
  3519  007B3A  5160               	movf	??_Get_data& (0+255),w,b
  3520  007B3C  EC38  F036         	call	_Read_string	;wreg free
  3521                           
  3522                           ;time.c: 190: if(!(strcmp(str, s_3)) || !(strcmp(str, s_4)) )
  3523  007B40  0100               	movlb	0	; () banked
  3524  007B42  0E00               	movlw	high _str
  3525  007B44  6E02               	movwf	?_strcmp+1,c
  3526  007B46  0100               	movlb	0	; () banked
  3527  007B48  0EF3               	movlw	low _str
  3528  007B4A  6E01               	movwf	?_strcmp,c
  3529  007B4C  0100               	movlb	0	; () banked
  3530  007B4E  0E00               	movlw	high Get_data@s_3
  3531  007B50  6E04               	movwf	?_strcmp+3,c
  3532  007B52  0100               	movlb	0	; () banked
  3533  007B54  0E9A               	movlw	low Get_data@s_3
  3534  007B56  6E03               	movwf	?_strcmp+2,c
  3535  007B58  EC59  F035         	call	_strcmp	;wreg free
  3536  007B5C  5002               	movf	?_strcmp+1,w,c
  3537  007B5E  1001               	iorwf	?_strcmp,w,c
  3538  007B60  B4D8               	btfsc	status,2,c
  3539  007B62  D012               	goto	l2979
  3540  007B64  0100               	movlb	0	; () banked
  3541  007B66  0E00               	movlw	high _str
  3542  007B68  6E02               	movwf	?_strcmp+1,c
  3543  007B6A  0100               	movlb	0	; () banked
  3544  007B6C  0EF3               	movlw	low _str
  3545  007B6E  6E01               	movwf	?_strcmp,c
  3546  007B70  0100               	movlb	0	; () banked
  3547  007B72  0E00               	movlw	high Get_data@s_4
  3548  007B74  6E04               	movwf	?_strcmp+3,c
  3549  007B76  0100               	movlb	0	; () banked
  3550  007B78  0E9D               	movlw	low Get_data@s_4
  3551  007B7A  6E03               	movwf	?_strcmp+2,c
  3552  007B7C  EC59  F035         	call	_strcmp	;wreg free
  3553  007B80  5002               	movf	?_strcmp+1,w,c
  3554  007B82  1001               	iorwf	?_strcmp,w,c
  3555  007B84  A4D8               	btfss	status,2,c
  3556  007B86  D004               	goto	l2981
  3557  007B88                     l2979:
  3558                           
  3559                           ;time.c: 191: {
  3560                           ;time.c: 192: mode = 0;
  3561  007B88  0100               	movlb	0	; () banked
  3562  007B8A  6F60               	movwf	??_Get_data& (0+255),b
  3563  007B8C  0E00               	movlw	0
  3564  007B8E  D027               	goto	L3
  3565  007B90                     l2981:
  3566                           
  3567                           ;time.c: 194: else if(!(strcmp(str, s_5)) || !(strcmp(str, s_6)) )
  3568  007B90  0100               	movlb	0	; () banked
  3569  007B92  0E00               	movlw	high _str
  3570  007B94  6E02               	movwf	?_strcmp+1,c
  3571  007B96  0100               	movlb	0	; () banked
  3572  007B98  0EF3               	movlw	low _str
  3573  007B9A  6E01               	movwf	?_strcmp,c
  3574  007B9C  0100               	movlb	0	; () banked
  3575  007B9E  0E00               	movlw	high Get_data@s_5
  3576  007BA0  6E04               	movwf	?_strcmp+3,c
  3577  007BA2  0100               	movlb	0	; () banked
  3578  007BA4  0EA0               	movlw	low Get_data@s_5
  3579  007BA6  6E03               	movwf	?_strcmp+2,c
  3580  007BA8  EC59  F035         	call	_strcmp	;wreg free
  3581  007BAC  5002               	movf	?_strcmp+1,w,c
  3582  007BAE  1001               	iorwf	?_strcmp,w,c
  3583  007BB0  B4D8               	btfsc	status,2,c
  3584  007BB2  D012               	goto	l2985
  3585  007BB4  0100               	movlb	0	; () banked
  3586  007BB6  0E00               	movlw	high _str
  3587  007BB8  6E02               	movwf	?_strcmp+1,c
  3588  007BBA  0100               	movlb	0	; () banked
  3589  007BBC  0EF3               	movlw	low _str
  3590  007BBE  6E01               	movwf	?_strcmp,c
  3591  007BC0  0100               	movlb	0	; () banked
  3592  007BC2  0E00               	movlw	high Get_data@s_6
  3593  007BC4  6E04               	movwf	?_strcmp+3,c
  3594  007BC6  0100               	movlb	0	; () banked
  3595  007BC8  0EA3               	movlw	low Get_data@s_6
  3596  007BCA  6E03               	movwf	?_strcmp+2,c
  3597  007BCC  EC59  F035         	call	_strcmp	;wreg free
  3598  007BD0  5002               	movf	?_strcmp+1,w,c
  3599  007BD2  1001               	iorwf	?_strcmp,w,c
  3600  007BD4  A4D8               	btfss	status,2,c
  3601  007BD6  D009               	goto	l2987
  3602  007BD8                     l2985:
  3603                           
  3604                           ;time.c: 195: {
  3605                           ;time.c: 196: mode = 1;
  3606  007BD8  0100               	movlb	0	; () banked
  3607  007BDA  6F60               	movwf	??_Get_data& (0+255),b
  3608  007BDC  0E01               	movlw	1
  3609  007BDE                     L3:
  3610  007BDE  0100               	movlb	0	; () banked
  3611  007BE0  0100               	movlb	0	; () banked
  3612  007BE2  6FAD               	movwf	Get_data@mode& (0+255),b
  3613  007BE4  0100               	movlb	0	; () banked
  3614  007BE6  5160               	movf	??_Get_data& (0+255),w,b
  3615                           
  3616                           ;time.c: 197: }
  3617  007BE8  D008               	goto	l2989
  3618  007BEA                     l2987:
  3619                           
  3620                           ;time.c: 198: else
  3621                           ;time.c: 199: {
  3622                           ;time.c: 200: Write_str(error);
  3623  007BEA  0100               	movlb	0	; () banked
  3624  007BEC  0E00               	movlw	high Get_data@error
  3625  007BEE  6E04               	movwf	?_Write_str+1,c
  3626  007BF0  0100               	movlb	0	; () banked
  3627  007BF2  0E82               	movlw	low Get_data@error
  3628  007BF4  6E03               	movwf	?_Write_str,c
  3629  007BF6  EC22  F035         	call	_Write_str	;wreg free
  3630  007BFA                     l2989:
  3631                           
  3632                           ;time.c: 201: }
  3633                           ;time.c: 202: }while(!(mode==0||mode==1));
  3634  007BFA  0100               	movlb	0	; () banked
  3635  007BFC  0100               	movlb	0	; () banked
  3636  007BFE  51AD               	movf	Get_data@mode& (0+255),w,b
  3637  007C00  B4D8               	btfsc	status,2,c
  3638  007C02  D029               	goto	l2999
  3639                           
  3640                           ; BSR set to: 0
  3641  007C04  0100               	movlb	0	; () banked
  3642  007C06  0100               	movlb	0	; () banked
  3643  007C08  05AD               	decf	Get_data@mode& (0+255),w,b
  3644  007C0A  B4D8               	btfsc	status,2,c
  3645  007C0C  D024               	goto	l2999
  3646  007C0E  D782               	goto	l2975
  3647  007C10                     l2993:
  3648                           
  3649                           ;time.c: 204: else if(!(strcmp(str, s_2)))
  3650  007C10  0100               	movlb	0	; () banked
  3651  007C12  0E00               	movlw	high _str
  3652  007C14  6E02               	movwf	?_strcmp+1,c
  3653  007C16  0100               	movlb	0	; () banked
  3654  007C18  0EF3               	movlw	low _str
  3655  007C1A  6E01               	movwf	?_strcmp,c
  3656  007C1C  0100               	movlb	0	; () banked
  3657  007C1E  0E00               	movlw	high Get_data@s_2
  3658  007C20  6E04               	movwf	?_strcmp+3,c
  3659  007C22  0100               	movlb	0	; () banked
  3660  007C24  0E97               	movlw	low Get_data@s_2
  3661  007C26  6E03               	movwf	?_strcmp+2,c
  3662  007C28  EC59  F035         	call	_strcmp	;wreg free
  3663  007C2C  5002               	movf	?_strcmp+1,w,c
  3664  007C2E  1001               	iorwf	?_strcmp,w,c
  3665  007C30  A4D8               	btfss	status,2,c
  3666  007C32  D009               	goto	l2997
  3667                           
  3668                           ;time.c: 205: {
  3669                           ;time.c: 206: mode = 2;
  3670  007C34  0100               	movlb	0	; () banked
  3671  007C36  6F60               	movwf	??_Get_data& (0+255),b
  3672  007C38  0E02               	movlw	2
  3673  007C3A  0100               	movlb	0	; () banked
  3674  007C3C  0100               	movlb	0	; () banked
  3675  007C3E  6FAD               	movwf	Get_data@mode& (0+255),b
  3676  007C40  0100               	movlb	0	; () banked
  3677  007C42  5160               	movf	??_Get_data& (0+255),w,b
  3678                           
  3679                           ;time.c: 207: }
  3680  007C44  D008               	goto	l2999
  3681  007C46                     l2997:
  3682                           
  3683                           ;time.c: 208: else
  3684                           ;time.c: 209: {
  3685                           ;time.c: 210: Write_str(error);
  3686  007C46  0100               	movlb	0	; () banked
  3687  007C48  0E00               	movlw	high Get_data@error
  3688  007C4A  6E04               	movwf	?_Write_str+1,c
  3689  007C4C  0100               	movlb	0	; () banked
  3690  007C4E  0E82               	movlw	low Get_data@error
  3691  007C50  6E03               	movwf	?_Write_str,c
  3692  007C52  EC22  F035         	call	_Write_str	;wreg free
  3693  007C56                     l2999:
  3694                           
  3695                           ;time.c: 211: }
  3696                           ;time.c: 212: }while(!(mode==0 || mode==1 || mode==2));
  3697  007C56  0100               	movlb	0	; () banked
  3698  007C58  0100               	movlb	0	; () banked
  3699  007C5A  51AD               	movf	Get_data@mode& (0+255),w,b
  3700  007C5C  B4D8               	btfsc	status,2,c
  3701  007C5E  D00B               	goto	l3005
  3702                           
  3703                           ; BSR set to: 0
  3704  007C60  0100               	movlb	0	; () banked
  3705  007C62  0100               	movlb	0	; () banked
  3706  007C64  05AD               	decf	Get_data@mode& (0+255),w,b
  3707  007C66  B4D8               	btfsc	status,2,c
  3708  007C68  D006               	goto	l3005
  3709                           
  3710                           ; BSR set to: 0
  3711  007C6A  0100               	movlb	0	; () banked
  3712  007C6C  0100               	movlb	0	; () banked
  3713  007C6E  51AD               	movf	Get_data@mode& (0+255),w,b
  3714  007C70  0A02               	xorlw	2
  3715  007C72  A4D8               	btfss	status,2,c
  3716  007C74  D727               	goto	l2969
  3717  007C76                     l3005:
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;time.c: 213: Set_time(&s, &m, &h ,mode);
  3721  007C76  0100               	movlb	0	; () banked
  3722  007C78  0E00               	movlw	high Get_data@s
  3723  007C7A  6E0A               	movwf	?_Set_time+1,c
  3724  007C7C  0100               	movlb	0	; () banked
  3725  007C7E  0EA7               	movlw	low Get_data@s
  3726  007C80  6E09               	movwf	?_Set_time,c
  3727  007C82  0100               	movlb	0	; () banked
  3728  007C84  0E00               	movlw	high Get_data@m
  3729  007C86  6E0C               	movwf	?_Set_time+3,c
  3730  007C88  0100               	movlb	0	; () banked
  3731  007C8A  0EA8               	movlw	low Get_data@m
  3732  007C8C  6E0B               	movwf	?_Set_time+2,c
  3733  007C8E  0100               	movlb	0	; () banked
  3734  007C90  0E00               	movlw	high Get_data@h
  3735  007C92  6E0E               	movwf	?_Set_time+5,c
  3736  007C94  0100               	movlb	0	; () banked
  3737  007C96  0EA9               	movlw	low Get_data@h
  3738  007C98  6E0D               	movwf	?_Set_time+4,c
  3739  007C9A  C0AD  F00F         	movff	Get_data@mode,?_Set_time+6
  3740  007C9E  EC5C  F03C         	call	_Set_time	;wreg free
  3741                           
  3742                           ;time.c: 214: Write_time_(s, m, h);
  3743  007CA2  C0A7  F025         	movff	Get_data@s,?_Write_time_
  3744  007CA6  C0A8  F026         	movff	Get_data@m,?_Write_time_+1
  3745  007CAA  C0A9  F027         	movff	Get_data@h,?_Write_time_+2
  3746  007CAE  ECAA  F037         	call	_Write_time_	;wreg free
  3747                           
  3748                           ;time.c: 215: day = Set_day();
  3749  007CB2  EC4A  F038         	call	_Set_day	;wreg free
  3750  007CB6  0100               	movlb	0	; () banked
  3751  007CB8  0100               	movlb	0	; () banked
  3752  007CBA  6FA6               	movwf	Get_data@day& (0+255),b
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;time.c: 216: Set_date(&date, &month, &year);
  3756  007CBC  0100               	movlb	0	; () banked
  3757  007CBE  0E00               	movlw	high Get_data@date
  3758  007CC0  6E0A               	movwf	?_Set_date+1,c
  3759  007CC2  0100               	movlb	0	; () banked
  3760  007CC4  0EAB               	movlw	low Get_data@date
  3761  007CC6  6E09               	movwf	?_Set_date,c
  3762  007CC8  0100               	movlb	0	; () banked
  3763  007CCA  0E00               	movlw	high Get_data@month
  3764  007CCC  6E0C               	movwf	?_Set_date+3,c
  3765  007CCE  0100               	movlb	0	; () banked
  3766  007CD0  0EAC               	movlw	low Get_data@month
  3767  007CD2  6E0B               	movwf	?_Set_date+2,c
  3768  007CD4  0100               	movlb	0	; () banked
  3769  007CD6  0E00               	movlw	high Get_data@year
  3770  007CD8  6E0E               	movwf	?_Set_date+5,c
  3771  007CDA  0100               	movlb	0	; () banked
  3772  007CDC  0EAA               	movlw	low Get_data@year
  3773  007CDE  6E0D               	movwf	?_Set_date+4,c
  3774  007CE0  EC5C  F03A         	call	_Set_date	;wreg free
  3775                           
  3776                           ;time.c: 217: Write_time(day, date, month, year);
  3777  007CE4  C0A6  F025         	movff	Get_data@day,?_Write_time
  3778  007CE8  C0AB  F026         	movff	Get_data@date,?_Write_time+1
  3779  007CEC  C0AC  F027         	movff	Get_data@month,?_Write_time+2
  3780  007CF0  C0AA  F028         	movff	Get_data@year,?_Write_time+3
  3781  007CF4  ECF9  F037         	call	_Write_time	;wreg free
  3782                           
  3783                           ;time.c: 218: return (mode);
  3784  007CF8  0100               	movlb	0	; () banked
  3785  007CFA  0100               	movlb	0	; () banked
  3786  007CFC  51AD               	movf	Get_data@mode& (0+255),w,b
  3787                           
  3788                           ; BSR set to: 0
  3789                           
  3790                           ; BSR set to: 0
  3791  007CFE  0012               	return	
  3792  007D00                     __end_of_Get_data:
  3793                           	opt stack 0
  3794                           tblptru	equ	0xFF8
  3795                           tblptrh	equ	0xFF7
  3796                           tblptrl	equ	0xFF6
  3797                           tablat	equ	0xFF5
  3798                           postinc0	equ	0xFEE
  3799                           wreg	equ	0xFE8
  3800                           indf1	equ	0xFE7
  3801                           postinc1	equ	0xFE6
  3802                           postdec1	equ	0xFE5
  3803                           fsr1h	equ	0xFE2
  3804                           fsr1l	equ	0xFE1
  3805                           indf2	equ	0xFDF
  3806                           postinc2	equ	0xFDE
  3807                           fsr2h	equ	0xFDA
  3808                           fsr2l	equ	0xFD9
  3809                           status	equ	0xFD8
  3810                           
  3811 ;; *************** function _Write_time *****************
  3812 ;; Defined at:
  3813 ;;		line 80 in file "i2c_1.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  day             1   36[COMRAM] unsigned char 
  3816 ;;  date            1   37[COMRAM] unsigned char 
  3817 ;;  month           1   38[COMRAM] unsigned char 
  3818 ;;  year            1   39[COMRAM] unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;		None               void
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3830 ;;      Params:         4       0       0       0       0       0       0       0       0
  3831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3832 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3833 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3834 ;;Total ram usage:        5 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    3
  3837 ;; This function calls:
  3838 ;;		_delay_ms
  3839 ;;		_ReadBUF
  3840 ;;		_Write_I2C
  3841 ;;		_CloseI2C
  3842 ;; This function is called by:
  3843 ;;		_Get_data
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text16
  3848  006FF2                     __ptext16:
  3849                           	opt stack 0
  3850  006FF2                     _Write_time:
  3851                           	opt stack 25
  3852                           
  3853                           ;i2c_1.c: 81: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;incstack = 0
  3857                           ;incstack = 0
  3858  006FF2  80C5               	bsf	4037,0,c	;volatile
  3859  006FF4                     l335:
  3860  006FF4  B0C5               	btfsc	4037,0,c	;volatile
  3861  006FF6  D7FE               	goto	l335
  3862                           
  3863                           ;i2c_1.c: 82: ReadBUF();
  3864  006FF8  ECF4  F033         	call	_ReadBUF	;wreg free
  3865                           
  3866                           ;i2c_1.c: 83: Write_I2C(0xD0);
  3867  006FFC  6E29               	movwf	??_Write_time& (0+255),c
  3868  006FFE  0ED0               	movlw	208
  3869  007000  6E22               	movwf	?_Write_I2C,c
  3870  007002  5029               	movf	??_Write_time& (0+255),w,c
  3871  007004  EC1B  F034         	call	_Write_I2C	;wreg free
  3872                           
  3873                           ;i2c_1.c: 84: delay_ms(1);
  3874  007008  6E29               	movwf	??_Write_time& (0+255),c
  3875  00700A  0E01               	movlw	1
  3876  00700C  6E22               	movwf	?_delay_ms,c
  3877  00700E  5029               	movf	??_Write_time& (0+255),w,c
  3878  007010  EC8D  F034         	call	_delay_ms	;wreg free
  3879                           
  3880                           ;i2c_1.c: 85: Write_I2C(0x03);
  3881  007014  6E29               	movwf	??_Write_time& (0+255),c
  3882  007016  0E03               	movlw	3
  3883  007018  6E22               	movwf	?_Write_I2C,c
  3884  00701A  5029               	movf	??_Write_time& (0+255),w,c
  3885  00701C  EC1B  F034         	call	_Write_I2C	;wreg free
  3886                           
  3887                           ;i2c_1.c: 86: delay_ms(1);
  3888  007020  6E29               	movwf	??_Write_time& (0+255),c
  3889  007022  0E01               	movlw	1
  3890  007024  6E22               	movwf	?_delay_ms,c
  3891  007026  5029               	movf	??_Write_time& (0+255),w,c
  3892  007028  EC8D  F034         	call	_delay_ms	;wreg free
  3893                           
  3894                           ;i2c_1.c: 87: Write_I2C(day);
  3895  00702C  C025  F022         	movff	Write_time@day,?_Write_I2C
  3896  007030  EC1B  F034         	call	_Write_I2C	;wreg free
  3897                           
  3898                           ;i2c_1.c: 88: delay_ms(1);
  3899  007034  6E29               	movwf	??_Write_time& (0+255),c
  3900  007036  0E01               	movlw	1
  3901  007038  6E22               	movwf	?_delay_ms,c
  3902  00703A  5029               	movf	??_Write_time& (0+255),w,c
  3903  00703C  EC8D  F034         	call	_delay_ms	;wreg free
  3904                           
  3905                           ;i2c_1.c: 89: Write_I2C(date);
  3906  007040  C026  F022         	movff	Write_time@date,?_Write_I2C
  3907  007044  EC1B  F034         	call	_Write_I2C	;wreg free
  3908                           
  3909                           ;i2c_1.c: 90: delay_ms(1);
  3910  007048  6E29               	movwf	??_Write_time& (0+255),c
  3911  00704A  0E01               	movlw	1
  3912  00704C  6E22               	movwf	?_delay_ms,c
  3913  00704E  5029               	movf	??_Write_time& (0+255),w,c
  3914  007050  EC8D  F034         	call	_delay_ms	;wreg free
  3915                           
  3916                           ;i2c_1.c: 91: Write_I2C(month);
  3917  007054  C027  F022         	movff	Write_time@month,?_Write_I2C
  3918  007058  EC1B  F034         	call	_Write_I2C	;wreg free
  3919                           
  3920                           ;i2c_1.c: 92: delay_ms(1);
  3921  00705C  6E29               	movwf	??_Write_time& (0+255),c
  3922  00705E  0E01               	movlw	1
  3923  007060  6E22               	movwf	?_delay_ms,c
  3924  007062  5029               	movf	??_Write_time& (0+255),w,c
  3925  007064  EC8D  F034         	call	_delay_ms	;wreg free
  3926                           
  3927                           ;i2c_1.c: 93: Write_I2C(year);
  3928  007068  C028  F022         	movff	Write_time@year,?_Write_I2C
  3929  00706C  EC1B  F034         	call	_Write_I2C	;wreg free
  3930                           
  3931                           ;i2c_1.c: 94: delay_ms(1);
  3932  007070  6E29               	movwf	??_Write_time& (0+255),c
  3933  007072  0E01               	movlw	1
  3934  007074  6E22               	movwf	?_delay_ms,c
  3935  007076  5029               	movf	??_Write_time& (0+255),w,c
  3936  007078  EC8D  F034         	call	_delay_ms	;wreg free
  3937                           
  3938                           ;i2c_1.c: 95: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3939  00707C  84C5               	bsf	4037,2,c	;volatile
  3940  00707E                     l338:
  3941  00707E  B4C5               	btfsc	4037,2,c	;volatile
  3942  007080  D7FE               	goto	l338
  3943                           
  3944                           ;i2c_1.c: 96: CloseI2C();
  3945  007082  ECF2  F033         	call	_CloseI2C	;wreg free
  3946                           
  3947                           ;i2c_1.c: 97: delay_ms(100);
  3948  007086  6E29               	movwf	??_Write_time& (0+255),c
  3949  007088  0E64               	movlw	100
  3950  00708A  6E22               	movwf	?_delay_ms,c
  3951  00708C  5029               	movf	??_Write_time& (0+255),w,c
  3952  00708E  EC8D  F034         	call	_delay_ms	;wreg free
  3953  007092  0012               	return	
  3954  007094                     __end_of_Write_time:
  3955                           	opt stack 0
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           postinc0	equ	0xFEE
  3961                           wreg	equ	0xFE8
  3962                           indf1	equ	0xFE7
  3963                           postinc1	equ	0xFE6
  3964                           postdec1	equ	0xFE5
  3965                           fsr1h	equ	0xFE2
  3966                           fsr1l	equ	0xFE1
  3967                           indf2	equ	0xFDF
  3968                           postinc2	equ	0xFDE
  3969                           fsr2h	equ	0xFDA
  3970                           fsr2l	equ	0xFD9
  3971                           status	equ	0xFD8
  3972                           
  3973 ;; *************** function _CloseI2C *****************
  3974 ;; Defined at:
  3975 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c_clos.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;		None               void
  3982 ;; Registers used:
  3983 ;;		status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3989 ;;      Params:         0       0       0       0       0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3992 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_Write_time
  3999 ;;		_Read_time
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text17
  4004  0067E4                     __ptext17:
  4005                           	opt stack 0
  4006  0067E4                     _CloseI2C:
  4007                           	opt stack 28
  4008                           
  4009                           ;incstack = 0
  4010                           ;incstack = 0
  4011  0067E4  9AC6               	bcf	4038,5,c	;volatile
  4012  0067E6  0012               	return	
  4013  0067E8                     __end_of_CloseI2C:
  4014                           	opt stack 0
  4015                           tblptru	equ	0xFF8
  4016                           tblptrh	equ	0xFF7
  4017                           tblptrl	equ	0xFF6
  4018                           tablat	equ	0xFF5
  4019                           postinc0	equ	0xFEE
  4020                           wreg	equ	0xFE8
  4021                           indf1	equ	0xFE7
  4022                           postinc1	equ	0xFE6
  4023                           postdec1	equ	0xFE5
  4024                           fsr1h	equ	0xFE2
  4025                           fsr1l	equ	0xFE1
  4026                           indf2	equ	0xFDF
  4027                           postinc2	equ	0xFDE
  4028                           fsr2h	equ	0xFDA
  4029                           fsr2l	equ	0xFD9
  4030                           status	equ	0xFD8
  4031                           
  4032 ;; *************** function _Write_time_ *****************
  4033 ;; Defined at:
  4034 ;;		line 58 in file "i2c_1.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  s               1   36[COMRAM] unsigned char 
  4037 ;;  m               1   37[COMRAM] unsigned char 
  4038 ;;  h               1   38[COMRAM] unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;		None
  4041 ;; Return value:  Size  Location     Type
  4042 ;;		None               void
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0, cstack
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4050 ;;      Params:         3       0       0       0       0       0       0       0       0
  4051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4052 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4053 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4054 ;;Total ram usage:        5 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    3
  4057 ;; This function calls:
  4058 ;;		_delay_ms
  4059 ;;		_ReadBUF
  4060 ;;		_Write_I2C
  4061 ;;		_OpenI2C
  4062 ;; This function is called by:
  4063 ;;		_Get_data
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text18
  4068  006F54                     __ptext18:
  4069                           	opt stack 0
  4070  006F54                     _Write_time_:
  4071                           	opt stack 25
  4072                           
  4073                           ;i2c_1.c: 59: OpenI2C(0b00001000, 0b10000000);
  4074                           
  4075                           ;incstack = 0
  4076                           ;incstack = 0
  4077  006F54  6E28               	movwf	??_Write_time_& (0+255),c
  4078  006F56  0E08               	movlw	8
  4079  006F58  6E01               	movwf	?_OpenI2C,c
  4080  006F5A  5028               	movf	??_Write_time_& (0+255),w,c
  4081  006F5C  6E29               	movwf	(??_Write_time_+1)& (0+255),c
  4082  006F5E  0E80               	movlw	128
  4083  006F60  6E02               	movwf	?_OpenI2C+1,c
  4084  006F62  5029               	movf	(??_Write_time_+1)& (0+255),w,c
  4085  006F64  EC5F  F034         	call	_OpenI2C	;wreg free
  4086                           
  4087                           ;i2c_1.c: 60: delay_ms(1);
  4088  006F68  6E28               	movwf	??_Write_time_& (0+255),c
  4089  006F6A  0E01               	movlw	1
  4090  006F6C  6E22               	movwf	?_delay_ms,c
  4091  006F6E  5028               	movf	??_Write_time_& (0+255),w,c
  4092  006F70  EC8D  F034         	call	_delay_ms	;wreg free
  4093                           
  4094                           ;i2c_1.c: 61: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  4095  006F74  80C5               	bsf	4037,0,c	;volatile
  4096  006F76                     l326:
  4097  006F76  B0C5               	btfsc	4037,0,c	;volatile
  4098  006F78  D7FE               	goto	l326
  4099                           
  4100                           ;i2c_1.c: 62: ReadBUF();
  4101  006F7A  ECF4  F033         	call	_ReadBUF	;wreg free
  4102                           
  4103                           ;i2c_1.c: 63: Write_I2C(0xD0);
  4104  006F7E  6E28               	movwf	??_Write_time_& (0+255),c
  4105  006F80  0ED0               	movlw	208
  4106  006F82  6E22               	movwf	?_Write_I2C,c
  4107  006F84  5028               	movf	??_Write_time_& (0+255),w,c
  4108  006F86  EC1B  F034         	call	_Write_I2C	;wreg free
  4109                           
  4110                           ;i2c_1.c: 64: delay_ms(1);
  4111  006F8A  6E28               	movwf	??_Write_time_& (0+255),c
  4112  006F8C  0E01               	movlw	1
  4113  006F8E  6E22               	movwf	?_delay_ms,c
  4114  006F90  5028               	movf	??_Write_time_& (0+255),w,c
  4115  006F92  EC8D  F034         	call	_delay_ms	;wreg free
  4116                           
  4117                           ;i2c_1.c: 65: Write_I2C(0x00);
  4118  006F96  6E28               	movwf	??_Write_time_& (0+255),c
  4119  006F98  0E00               	movlw	0
  4120  006F9A  6E22               	movwf	?_Write_I2C,c
  4121  006F9C  5028               	movf	??_Write_time_& (0+255),w,c
  4122  006F9E  EC1B  F034         	call	_Write_I2C	;wreg free
  4123                           
  4124                           ;i2c_1.c: 66: delay_ms(1);
  4125  006FA2  6E28               	movwf	??_Write_time_& (0+255),c
  4126  006FA4  0E01               	movlw	1
  4127  006FA6  6E22               	movwf	?_delay_ms,c
  4128  006FA8  5028               	movf	??_Write_time_& (0+255),w,c
  4129  006FAA  EC8D  F034         	call	_delay_ms	;wreg free
  4130                           
  4131                           ;i2c_1.c: 67: Write_I2C(s);
  4132  006FAE  C025  F022         	movff	Write_time_@s,?_Write_I2C
  4133  006FB2  EC1B  F034         	call	_Write_I2C	;wreg free
  4134                           
  4135                           ;i2c_1.c: 68: delay_ms(1);
  4136  006FB6  6E28               	movwf	??_Write_time_& (0+255),c
  4137  006FB8  0E01               	movlw	1
  4138  006FBA  6E22               	movwf	?_delay_ms,c
  4139  006FBC  5028               	movf	??_Write_time_& (0+255),w,c
  4140  006FBE  EC8D  F034         	call	_delay_ms	;wreg free
  4141                           
  4142                           ;i2c_1.c: 69: Write_I2C(m);
  4143  006FC2  C026  F022         	movff	Write_time_@m,?_Write_I2C
  4144  006FC6  EC1B  F034         	call	_Write_I2C	;wreg free
  4145                           
  4146                           ;i2c_1.c: 70: delay_ms(1);
  4147  006FCA  6E28               	movwf	??_Write_time_& (0+255),c
  4148  006FCC  0E01               	movlw	1
  4149  006FCE  6E22               	movwf	?_delay_ms,c
  4150  006FD0  5028               	movf	??_Write_time_& (0+255),w,c
  4151  006FD2  EC8D  F034         	call	_delay_ms	;wreg free
  4152                           
  4153                           ;i2c_1.c: 71: Write_I2C(h);
  4154  006FD6  C027  F022         	movff	Write_time_@h,?_Write_I2C
  4155  006FDA  EC1B  F034         	call	_Write_I2C	;wreg free
  4156                           
  4157                           ;i2c_1.c: 72: delay_ms(1);
  4158  006FDE  6E28               	movwf	??_Write_time_& (0+255),c
  4159  006FE0  0E01               	movlw	1
  4160  006FE2  6E22               	movwf	?_delay_ms,c
  4161  006FE4  5028               	movf	??_Write_time_& (0+255),w,c
  4162  006FE6  EC8D  F034         	call	_delay_ms	;wreg free
  4163                           
  4164                           ;i2c_1.c: 73: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  4165  006FEA  84C5               	bsf	4037,2,c	;volatile
  4166  006FEC                     l329:
  4167  006FEC  A4C5               	btfss	4037,2,c	;volatile
  4168  006FEE  0012               	return	
  4169  006FF0  D7FD               	goto	l329
  4170  006FF2                     __end_of_Write_time_:
  4171                           	opt stack 0
  4172                           tblptru	equ	0xFF8
  4173                           tblptrh	equ	0xFF7
  4174                           tblptrl	equ	0xFF6
  4175                           tablat	equ	0xFF5
  4176                           postinc0	equ	0xFEE
  4177                           wreg	equ	0xFE8
  4178                           indf1	equ	0xFE7
  4179                           postinc1	equ	0xFE6
  4180                           postdec1	equ	0xFE5
  4181                           fsr1h	equ	0xFE2
  4182                           fsr1l	equ	0xFE1
  4183                           indf2	equ	0xFDF
  4184                           postinc2	equ	0xFDE
  4185                           fsr2h	equ	0xFDA
  4186                           fsr2l	equ	0xFD9
  4187                           status	equ	0xFD8
  4188                           
  4189 ;; *************** function _OpenI2C *****************
  4190 ;; Defined at:
  4191 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c_open.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  sync_mode       1    0[COMRAM] unsigned char 
  4194 ;;  slew            1    1[COMRAM] unsigned char 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;		None               void
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4206 ;;      Params:         2       0       0       0       0       0       0       0       0
  4207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4209 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4210 ;;Total ram usage:        2 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_Write_time_
  4216 ;;		_Read_time
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text19
  4221  0068BE                     __ptext19:
  4222                           	opt stack 0
  4223  0068BE                     _OpenI2C:
  4224                           	opt stack 28
  4225                           
  4226                           ;incstack = 0
  4227                           ;incstack = 0
  4228  0068BE  0E3F               	movlw	63
  4229  0068C0  16C7               	andwf	4039,f,c	;volatile
  4230  0068C2  0E00               	movlw	0
  4231  0068C4  6EC6               	movwf	4038,c	;volatile
  4232  0068C6  0E00               	movlw	0
  4233  0068C8  6EC5               	movwf	4037,c	;volatile
  4234  0068CA  5001               	movf	OpenI2C@sync_mode,w,c
  4235  0068CC  12C6               	iorwf	4038,f,c	;volatile
  4236  0068CE  5002               	movf	OpenI2C@slew,w,c
  4237  0068D0  12C7               	iorwf	4039,f,c	;volatile
  4238  0068D2  8293               	bsf	3987,1,c	;volatile
  4239  0068D4  8093               	bsf	3987,0,c	;volatile
  4240  0068D6  8AC6               	bsf	4038,5,c	;volatile
  4241  0068D8  0012               	return	
  4242  0068DA                     __end_of_OpenI2C:
  4243                           	opt stack 0
  4244                           tblptru	equ	0xFF8
  4245                           tblptrh	equ	0xFF7
  4246                           tblptrl	equ	0xFF6
  4247                           tablat	equ	0xFF5
  4248                           postinc0	equ	0xFEE
  4249                           wreg	equ	0xFE8
  4250                           indf1	equ	0xFE7
  4251                           postinc1	equ	0xFE6
  4252                           postdec1	equ	0xFE5
  4253                           fsr1h	equ	0xFE2
  4254                           fsr1l	equ	0xFE1
  4255                           indf2	equ	0xFDF
  4256                           postinc2	equ	0xFDE
  4257                           fsr2h	equ	0xFDA
  4258                           fsr2l	equ	0xFD9
  4259                           status	equ	0xFD8
  4260                           
  4261 ;; *************** function _Write_I2C *****************
  4262 ;; Defined at:
  4263 ;;		line 39 in file "i2c_1.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  c               1   33[COMRAM] unsigned char 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;		None               void
  4270 ;; Registers used:
  4271 ;;		wreg, status,2, status,0, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4277 ;;      Params:         1       0       0       0       0       0       0       0       0
  4278 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4280 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4281 ;;Total ram usage:        1 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    2
  4284 ;; This function calls:
  4285 ;;		_ReadBUF
  4286 ;;		_WriteI2C
  4287 ;; This function is called by:
  4288 ;;		_Read
  4289 ;;		_Write_time_
  4290 ;;		_Write_time
  4291 ;;		_Read_time
  4292 ;;		_Read_From_Addr
  4293 ;;		_Write_to_Addr
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text20
  4298  006836                     __ptext20:
  4299                           	opt stack 0
  4300  006836                     _Write_I2C:
  4301                           	opt stack 26
  4302                           
  4303                           ;i2c_1.c: 40: WriteI2C(c);
  4304                           
  4305                           ;incstack = 0
  4306                           ;incstack = 0
  4307  006836  C022  F001         	movff	Write_I2C@c,?_WriteI2C
  4308  00683A  EC7B  F035         	call	_WriteI2C	;wreg free
  4309                           
  4310                           ;i2c_1.c: 41: ReadBUF();
  4311  00683E  ECF4  F033         	call	_ReadBUF	;wreg free
  4312  006842  0012               	return	
  4313  006844                     __end_of_Write_I2C:
  4314                           	opt stack 0
  4315                           tblptru	equ	0xFF8
  4316                           tblptrh	equ	0xFF7
  4317                           tblptrl	equ	0xFF6
  4318                           tablat	equ	0xFF5
  4319                           postinc0	equ	0xFEE
  4320                           wreg	equ	0xFE8
  4321                           indf1	equ	0xFE7
  4322                           postinc1	equ	0xFE6
  4323                           postdec1	equ	0xFE5
  4324                           fsr1h	equ	0xFE2
  4325                           fsr1l	equ	0xFE1
  4326                           indf2	equ	0xFDF
  4327                           postinc2	equ	0xFDE
  4328                           fsr2h	equ	0xFDA
  4329                           fsr2l	equ	0xFD9
  4330                           status	equ	0xFD8
  4331                           
  4332 ;; *************** function _ReadBUF *****************
  4333 ;; Defined at:
  4334 ;;		line 29 in file "i2c_1.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  c               1    0[COMRAM] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;		None               void
  4341 ;; Registers used:
  4342 ;;		None
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4348 ;;      Params:         0       0       0       0       0       0       0       0       0
  4349 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4351 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4352 ;;Total ram usage:        1 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_Write_I2C
  4358 ;;		_Read
  4359 ;;		_Write_time_
  4360 ;;		_Write_time
  4361 ;;		_Read_From_Addr
  4362 ;;		_Write_to_Addr
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text21
  4367  0067E8                     __ptext21:
  4368                           	opt stack 0
  4369  0067E8                     _ReadBUF:
  4370                           	opt stack 27
  4371                           
  4372                           ;i2c_1.c: 30: unsigned char c;
  4373                           ;i2c_1.c: 31: c = SSPBUF;
  4374                           
  4375                           ;incstack = 0
  4376                           ;incstack = 0
  4377  0067E8  CFC9 F001          	movff	4041,ReadBUF@c	;volatile
  4378                           
  4379                           ;i2c_1.c: 32: c = SSPBUF;
  4380  0067EC  CFC9 F001          	movff	4041,ReadBUF@c	;volatile
  4381  0067F0  0012               	return	
  4382  0067F2                     __end_of_ReadBUF:
  4383                           	opt stack 0
  4384                           tblptru	equ	0xFF8
  4385                           tblptrh	equ	0xFF7
  4386                           tblptrl	equ	0xFF6
  4387                           tablat	equ	0xFF5
  4388                           postinc0	equ	0xFEE
  4389                           wreg	equ	0xFE8
  4390                           indf1	equ	0xFE7
  4391                           postinc1	equ	0xFE6
  4392                           postdec1	equ	0xFE5
  4393                           fsr1h	equ	0xFE2
  4394                           fsr1l	equ	0xFE1
  4395                           indf2	equ	0xFDF
  4396                           postinc2	equ	0xFDE
  4397                           fsr2h	equ	0xFDA
  4398                           fsr2l	equ	0xFD9
  4399                           status	equ	0xFD8
  4400                           
  4401 ;; *************** function _delay_ms *****************
  4402 ;; Defined at:
  4403 ;;		line 18 in file "delay.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  t               1   33[COMRAM] unsigned char 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  i               1   35[COMRAM] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;		None               void
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4417 ;;      Params:         1       0       0       0       0       0       0       0       0
  4418 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4419 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4420 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4421 ;;Total ram usage:        3 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    1
  4424 ;; This function calls:
  4425 ;;		_Delay1KTCYx
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;;		_Read
  4429 ;;		_Write_time_
  4430 ;;		_Write_time
  4431 ;;		_Read_time
  4432 ;;		_Delay_s
  4433 ;;		_Read_From_Addr
  4434 ;;		_Write_to_Addr
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text22
  4439  00691A                     __ptext22:
  4440                           	opt stack 0
  4441  00691A                     _delay_ms:
  4442                           	opt stack 25
  4443                           
  4444                           ;delay.c: 19: unsigned char i;
  4445                           ;delay.c: 20: for (i=0;i<=t;i++)
  4446                           
  4447                           ;incstack = 0
  4448                           ;incstack = 0
  4449  00691A  6E23               	movwf	??_delay_ms& (0+255),c
  4450  00691C  0E00               	movlw	0
  4451  00691E  6E24               	movwf	delay_ms@i,c
  4452  006920  5023               	movf	??_delay_ms& (0+255),w,c
  4453  006922  D007               	goto	l2515
  4454  006924                     l2511:
  4455                           
  4456                           ;delay.c: 21: Delay1KTCYx(5);
  4457  006924  6E23               	movwf	??_delay_ms& (0+255),c
  4458  006926  0E05               	movlw	5
  4459  006928  6E01               	movwf	?_Delay1KTCYx,c
  4460  00692A  5023               	movf	??_delay_ms& (0+255),w,c
  4461  00692C  EC14  F034         	call	_Delay1KTCYx	;wreg free
  4462  006930  2A24               	incf	delay_ms@i,f,c
  4463  006932                     l2515:
  4464  006932  5024               	movf	delay_ms@i,w,c
  4465  006934  6022               	cpfslt	delay_ms@t,c
  4466  006936  D7F6               	goto	l2511
  4467                           
  4468                           ;delay.c: 25: return;
  4469  006938  0012               	return	
  4470  00693A                     __end_of_delay_ms:
  4471                           	opt stack 0
  4472                           tblptru	equ	0xFF8
  4473                           tblptrh	equ	0xFF7
  4474                           tblptrl	equ	0xFF6
  4475                           tablat	equ	0xFF5
  4476                           postinc0	equ	0xFEE
  4477                           wreg	equ	0xFE8
  4478                           indf1	equ	0xFE7
  4479                           postinc1	equ	0xFE6
  4480                           postdec1	equ	0xFE5
  4481                           fsr1h	equ	0xFE2
  4482                           fsr1l	equ	0xFE1
  4483                           indf2	equ	0xFDF
  4484                           postinc2	equ	0xFDE
  4485                           fsr2h	equ	0xFDA
  4486                           fsr2l	equ	0xFD9
  4487                           status	equ	0xFD8
  4488                           
  4489 ;; *************** function _Delay1KTCYx *****************
  4490 ;; Defined at:
  4491 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\d1ktcyx.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  unit            1    0[COMRAM] unsigned char 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;		None               void
  4498 ;; Registers used:
  4499 ;;		wreg
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4505 ;;      Params:         1       0       0       0       0       0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4508 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4509 ;;Total ram usage:        1 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_delay_ms
  4515 ;;		_delay_us
  4516 ;;		_DelayPORXLCD
  4517 ;;		_DelayXLCD
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text23
  4522  006828                     __ptext23:
  4523                           	opt stack 0
  4524  006828                     _Delay1KTCYx:
  4525                           	opt stack 25
  4526  006828                     l847:
  4527  006828  0EFA               	movlw	250
  4528  00682A                     u2857:
  4529  00682A  F000               	nop	
  4530  00682C  2EE8               	decfsz	wreg,f,c
  4531  00682E  D7FD               	goto	u2857
  4532  006830  2E01               	decfsz	Delay1KTCYx@unit,f,c
  4533  006832  D7FA               	goto	l847
  4534  006834  0012               	return	
  4535  006836                     __end_of_Delay1KTCYx:
  4536                           	opt stack 0
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           postinc0	equ	0xFEE
  4542                           wreg	equ	0xFE8
  4543                           indf1	equ	0xFE7
  4544                           postinc1	equ	0xFE6
  4545                           postdec1	equ	0xFE5
  4546                           fsr1h	equ	0xFE2
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           fsr2h	equ	0xFDA
  4551                           fsr2l	equ	0xFD9
  4552                           status	equ	0xFD8
  4553                           
  4554 ;; *************** function _strcmp *****************
  4555 ;; Defined at:
  4556 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strcmp.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  4559 ;;		 -> str(11), 
  4560 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  4561 ;;		 -> Get_data@s_6(3), Get_data@s_5(3), Get_data@s_4(3), Get_data@s_3(3), 
  4562 ;;		 -> Get_data@s_2(3), Get_data@s_1(3), 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  r               1    5[COMRAM] char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  2    0[COMRAM] int 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4574 ;;      Params:         4       0       0       0       0       0       0       0       0
  4575 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4576 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4577 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4578 ;;Total ram usage:        6 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_Get_data
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text24
  4588  006AB2                     __ptext24:
  4589                           	opt stack 0
  4590  006AB2                     _strcmp:
  4591                           	opt stack 28
  4592                           
  4593                           ;incstack = 0
  4594                           ;incstack = 0
  4595  006AB2  D004               	goto	l2317
  4596  006AB4                     l2315:
  4597  006AB4  4A01               	infsnz	strcmp@s1,f,c
  4598  006AB6  2A02               	incf	strcmp@s1+1,f,c
  4599  006AB8  4A03               	infsnz	strcmp@s2,f,c
  4600  006ABA  2A04               	incf	strcmp@s2+1,f,c
  4601  006ABC                     l2317:
  4602  006ABC  C001  FFD9         	movff	strcmp@s1,fsr2l
  4603  006AC0  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  4604  006AC4  50DF               	movf	indf2,w,c
  4605  006AC6  6E05               	movwf	??_strcmp& (0+255),c
  4606  006AC8  C003  FFD9         	movff	strcmp@s2,fsr2l
  4607  006ACC  C004  FFDA         	movff	strcmp@s2+1,fsr2h
  4608  006AD0  50DF               	movf	indf2,w,c
  4609  006AD2  0800               	sublw	0
  4610  006AD4  2405               	addwf	??_strcmp,w,c
  4611  006AD6  6E06               	movwf	strcmp@r,c
  4612  006AD8  6606               	tstfsz	strcmp@r& (0+255),c
  4613  006ADA  D007               	goto	l2321
  4614  006ADC  C001  FFD9         	movff	strcmp@s1,fsr2l
  4615  006AE0  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  4616  006AE4  50DF               	movf	indf2,w,c
  4617  006AE6  A4D8               	btfss	status,2,c
  4618  006AE8  D7E5               	goto	l2315
  4619  006AEA                     l2321:
  4620  006AEA  5006               	movf	strcmp@r,w,c
  4621  006AEC  6E01               	movwf	?_strcmp,c
  4622  006AEE  6A02               	clrf	?_strcmp+1,c
  4623  006AF0  BE01               	btfsc	?_strcmp,7,c
  4624  006AF2  0602               	decf	?_strcmp+1,f,c
  4625  006AF4  0012               	return	
  4626  006AF6                     __end_of_strcmp:
  4627                           	opt stack 0
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           postinc0	equ	0xFEE
  4633                           wreg	equ	0xFE8
  4634                           indf1	equ	0xFE7
  4635                           postinc1	equ	0xFE6
  4636                           postdec1	equ	0xFE5
  4637                           fsr1h	equ	0xFE2
  4638                           fsr1l	equ	0xFE1
  4639                           indf2	equ	0xFDF
  4640                           postinc2	equ	0xFDE
  4641                           fsr2h	equ	0xFDA
  4642                           fsr2l	equ	0xFD9
  4643                           status	equ	0xFD8
  4644                           
  4645 ;; *************** function _Set_date *****************
  4646 ;; Defined at:
  4647 ;;		line 142 in file "time.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  date            2    8[COMRAM] PTR unsigned char 
  4650 ;;		 -> Get_data@date(1), 
  4651 ;;  month           2   10[COMRAM] PTR unsigned char 
  4652 ;;		 -> Get_data@month(1), 
  4653 ;;  year            2   12[COMRAM] PTR unsigned char 
  4654 ;;		 -> Get_data@year(1), 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  str6           30   15[COMRAM] unsigned char [30]
  4657 ;;  error          18   45[COMRAM] unsigned char [18]
  4658 ;;  z               1   65[COMRAM] unsigned char 
  4659 ;;  y               1   64[COMRAM] unsigned char 
  4660 ;;  x               1   63[COMRAM] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;		None               void
  4663 ;; Registers used:
  4664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4670 ;;      Params:         6       0       0       0       0       0       0       0       0
  4671 ;;      Locals:        51       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4673 ;;      Totals:        58       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:       58 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    3
  4677 ;; This function calls:
  4678 ;;		_Write_str
  4679 ;;		_BCD_format
  4680 ;;		_BCD_to_DEC
  4681 ;;		_Read_string
  4682 ;; This function is called by:
  4683 ;;		_Get_data
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text25
  4688  0074B8                     __ptext25:
  4689                           	opt stack 0
  4690  0074B8                     _Set_date:
  4691                           	opt stack 25
  4692                           
  4693                           ;time.c: 143: unsigned char x, y, z;
  4694                           ;time.c: 144: unsigned char str6[30] = "\nEnter DATE/MONTH/YEAR\tDDMMYY", error[] = "\nI
      +                          nvalid Entry..!";
  4695                           
  4696                           ;incstack = 0
  4697                           ;incstack = 0
  4698  0074B8  EE21  F023         	lfsr	2,Set_date@F214
  4699  0074BC  EE10  F010         	lfsr	1,Set_date@str6
  4700  0074C0  0E1E               	movlw	30
  4701  0074C2                     u2261:
  4702  0074C2  CFDE FFE6          	movff	postinc2,postinc1
  4703  0074C6  2EE8               	decfsz	wreg,f,c
  4704  0074C8  D7FC               	goto	u2261
  4705  0074CA  EE21  F083         	lfsr	2,Set_date@F216
  4706  0074CE  EE10  F02E         	lfsr	1,Set_date@error
  4707  0074D2  0E12               	movlw	18
  4708  0074D4                     u2271:
  4709  0074D4  CFDE FFE6          	movff	postinc2,postinc1
  4710  0074D8  2EE8               	decfsz	wreg,f,c
  4711  0074DA  D7FC               	goto	u2271
  4712  0074DC                     l2745:
  4713                           
  4714                           ;time.c: 146: {
  4715                           ;time.c: 147: Write_str(str6);
  4716  0074DC  0E00               	movlw	high Set_date@str6
  4717  0074DE  6E04               	movwf	?_Write_str+1,c
  4718  0074E0  0E10               	movlw	low Set_date@str6
  4719  0074E2  6E03               	movwf	?_Write_str,c
  4720  0074E4  EC22  F035         	call	_Write_str	;wreg free
  4721                           
  4722                           ;time.c: 148: Read_string(str, 6);
  4723  0074E8  0100               	movlb	0	; () banked
  4724  0074EA  0E00               	movlw	high _str
  4725  0074EC  6E04               	movwf	?_Read_string+1,c
  4726  0074EE  0100               	movlb	0	; () banked
  4727  0074F0  0EF3               	movlw	low _str
  4728  0074F2  6E03               	movwf	?_Read_string,c
  4729  0074F4  6E0F               	movwf	??_Set_date& (0+255),c
  4730  0074F6  0E06               	movlw	6
  4731  0074F8  6E05               	movwf	?_Read_string+2,c
  4732  0074FA  500F               	movf	??_Set_date& (0+255),w,c
  4733  0074FC  EC38  F036         	call	_Read_string	;wreg free
  4734                           
  4735                           ;time.c: 149: *date = BCD_format(str);
  4736  007500  0100               	movlb	0	; () banked
  4737  007502  0E00               	movlw	high _str
  4738  007504  6E02               	movwf	?_BCD_format+1,c
  4739  007506  0100               	movlb	0	; () banked
  4740  007508  0EF3               	movlw	low _str
  4741  00750A  6E01               	movwf	?_BCD_format,c
  4742  00750C  ECCF  F034         	call	_BCD_format	;wreg free
  4743  007510  C009  FFD9         	movff	Set_date@date,fsr2l
  4744  007514  C00A  FFDA         	movff	Set_date@date+1,fsr2h
  4745  007518  6EDF               	movwf	indf2,c
  4746                           
  4747                           ;time.c: 150: *month = BCD_format(str+2);
  4748  00751A  0100               	movlb	0	; () banked
  4749  00751C  0E00               	movlw	high (_str+2)
  4750  00751E  6E02               	movwf	?_BCD_format+1,c
  4751  007520  0100               	movlb	0	; () banked
  4752  007522  0EF5               	movlw	low (_str+2)
  4753  007524  6E01               	movwf	?_BCD_format,c
  4754  007526  ECCF  F034         	call	_BCD_format	;wreg free
  4755  00752A  C00B  FFD9         	movff	Set_date@month,fsr2l
  4756  00752E  C00C  FFDA         	movff	Set_date@month+1,fsr2h
  4757  007532  6EDF               	movwf	indf2,c
  4758                           
  4759                           ;time.c: 151: *year = BCD_format(str+4);
  4760  007534  0100               	movlb	0	; () banked
  4761  007536  0E00               	movlw	high (_str+4)
  4762  007538  6E02               	movwf	?_BCD_format+1,c
  4763  00753A  0100               	movlb	0	; () banked
  4764  00753C  0EF7               	movlw	low (_str+4)
  4765  00753E  6E01               	movwf	?_BCD_format,c
  4766  007540  ECCF  F034         	call	_BCD_format	;wreg free
  4767  007544  C00D  FFD9         	movff	Set_date@year,fsr2l
  4768  007548  C00E  FFDA         	movff	Set_date@year+1,fsr2h
  4769  00754C  6EDF               	movwf	indf2,c
  4770                           
  4771                           ;time.c: 152: x = BCD_to_DEC(*date);
  4772  00754E  C009  FFD9         	movff	Set_date@date,fsr2l
  4773  007552  C00A  FFDA         	movff	Set_date@date+1,fsr2h
  4774  007556  50DF               	movf	indf2,w,c
  4775  007558  6E01               	movwf	?_BCD_to_DEC,c
  4776  00755A  EC46  F034         	call	_BCD_to_DEC	;wreg free
  4777  00755E  6E40               	movwf	Set_date@x,c
  4778                           
  4779                           ;time.c: 153: y = BCD_to_DEC(*month);
  4780  007560  C00B  FFD9         	movff	Set_date@month,fsr2l
  4781  007564  C00C  FFDA         	movff	Set_date@month+1,fsr2h
  4782  007568  50DF               	movf	indf2,w,c
  4783  00756A  6E01               	movwf	?_BCD_to_DEC,c
  4784  00756C  EC46  F034         	call	_BCD_to_DEC	;wreg free
  4785  007570  6E41               	movwf	Set_date@y,c
  4786                           
  4787                           ;time.c: 154: z = BCD_to_DEC(*year);
  4788  007572  C00D  FFD9         	movff	Set_date@year,fsr2l
  4789  007576  C00E  FFDA         	movff	Set_date@year+1,fsr2h
  4790  00757A  50DF               	movf	indf2,w,c
  4791  00757C  6E01               	movwf	?_BCD_to_DEC,c
  4792  00757E  EC46  F034         	call	_BCD_to_DEC	;wreg free
  4793  007582  6E42               	movwf	Set_date@z,c
  4794                           
  4795                           ;time.c: 155: if((x>=1&&x<=31) && (y>=1&&y<=12) && (z>=1&&z<=99))
  4796  007584  5040               	movf	Set_date@x,w,c
  4797  007586  B4D8               	btfsc	status,2,c
  4798  007588  D026               	goto	l2775
  4799  00758A  0E20               	movlw	32
  4800  00758C  6040               	cpfslt	Set_date@x,c
  4801  00758E  D023               	goto	l2775
  4802  007590  5041               	movf	Set_date@y,w,c
  4803  007592  B4D8               	btfsc	status,2,c
  4804  007594  D020               	goto	l2775
  4805  007596  0E0D               	movlw	13
  4806  007598  6041               	cpfslt	Set_date@y,c
  4807  00759A  D01D               	goto	l2775
  4808  00759C  5042               	movf	Set_date@z,w,c
  4809  00759E  B4D8               	btfsc	status,2,c
  4810  0075A0  D01A               	goto	l2775
  4811  0075A2  0E64               	movlw	100
  4812  0075A4  6042               	cpfslt	Set_date@z,c
  4813  0075A6  D017               	goto	l2775
  4814                           
  4815                           ;time.c: 156: {
  4816                           ;time.c: 157: *date = *date & 0x3F;
  4817  0075A8  C009  FFD9         	movff	Set_date@date,fsr2l
  4818  0075AC  C00A  FFDA         	movff	Set_date@date+1,fsr2h
  4819  0075B0  50DF               	movf	indf2,w,c
  4820  0075B2  0B3F               	andlw	63
  4821  0075B4  C009  FFD9         	movff	Set_date@date,fsr2l
  4822  0075B8  C00A  FFDA         	movff	Set_date@date+1,fsr2h
  4823  0075BC  6EDF               	movwf	indf2,c
  4824                           
  4825                           ;time.c: 159: *year = *year & 0xFF;
  4826  0075BE  C00B  FFD9         	movff	Set_date@month,fsr2l
  4827  0075C2  C00C  FFDA         	movff	Set_date@month+1,fsr2h
  4828  0075C6  50DF               	movf	indf2,w,c
  4829  0075C8  0B1F               	andlw	31
  4830  0075CA  C00B  FFD9         	movff	Set_date@month,fsr2l
  4831  0075CE  C00C  FFDA         	movff	Set_date@month+1,fsr2h
  4832  0075D2  6EDF               	movwf	indf2,c
  4833                           
  4834                           ;time.c: 160: }
  4835  0075D4  D006               	goto	l2777
  4836  0075D6                     l2775:
  4837                           
  4838                           ;time.c: 161: else
  4839                           ;time.c: 162: Write_str(error);
  4840  0075D6  0E00               	movlw	high Set_date@error
  4841  0075D8  6E04               	movwf	?_Write_str+1,c
  4842  0075DA  0E2E               	movlw	low Set_date@error
  4843  0075DC  6E03               	movwf	?_Write_str,c
  4844  0075DE  EC22  F035         	call	_Write_str	;wreg free
  4845  0075E2                     l2777:
  4846                           
  4847                           ;time.c: 163: }while(!((x>=0&&x<=31) && (y>=0&&y<=12) && (z>=0&&z<=99)));
  4848  0075E2  0E20               	movlw	32
  4849  0075E4  6040               	cpfslt	Set_date@x,c
  4850  0075E6  D77A               	goto	l2745
  4851  0075E8  0E0D               	movlw	13
  4852  0075EA  6041               	cpfslt	Set_date@y,c
  4853  0075EC  D777               	goto	l2745
  4854  0075EE  0E64               	movlw	100
  4855  0075F0  6042               	cpfslt	Set_date@z,c
  4856  0075F2  D774               	goto	l2745
  4857  0075F4  0012               	return	
  4858  0075F6                     __end_of_Set_date:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           postinc0	equ	0xFEE
  4865                           wreg	equ	0xFE8
  4866                           indf1	equ	0xFE7
  4867                           postinc1	equ	0xFE6
  4868                           postdec1	equ	0xFE5
  4869                           fsr1h	equ	0xFE2
  4870                           fsr1l	equ	0xFE1
  4871                           indf2	equ	0xFDF
  4872                           postinc2	equ	0xFDE
  4873                           fsr2h	equ	0xFDA
  4874                           fsr2l	equ	0xFD9
  4875                           status	equ	0xFD8
  4876                           
  4877 ;; *************** function _Set_day *****************
  4878 ;; Defined at:
  4879 ;;		line 116 in file "time.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  str5           67    9[COMRAM] unsigned char [67]
  4884 ;;  error          18   76[COMRAM] unsigned char [18]
  4885 ;;  day             1   94[COMRAM] unsigned char 
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      unsigned char 
  4888 ;; Registers used:
  4889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4895 ;;      Params:         0       0       0       0       0       0       0       0       0
  4896 ;;      Locals:        86       0       0       0       0       0       0       0       0
  4897 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4898 ;;      Totals:        87       0       0       0       0       0       0       0       0
  4899 ;;Total ram usage:       87 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    3
  4902 ;; This function calls:
  4903 ;;		_Write_str
  4904 ;;		_BCD_format
  4905 ;;		_Clear_array
  4906 ;;		_Read_string
  4907 ;; This function is called by:
  4908 ;;		_Get_data
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text26
  4913  007094                     __ptext26:
  4914                           	opt stack 0
  4915  007094                     _Set_day:
  4916                           	opt stack 25
  4917                           
  4918                           ;time.c: 117: unsigned char error[18] = "\nInvalid Entry..!";
  4919                           
  4920                           ;incstack = 0
  4921                           ;incstack = 0
  4922  007094  EE21  F095         	lfsr	2,Set_day@F203
  4923  007098  EE10  F04D         	lfsr	1,Set_day@error
  4924  00709C  0E12               	movlw	18
  4925  00709E                     u2201:
  4926  00709E  CFDE FFE6          	movff	postinc2,postinc1
  4927  0070A2  2EE8               	decfsz	wreg,f,c
  4928  0070A4  D7FC               	goto	u2201
  4929                           
  4930                           ;time.c: 118: unsigned char str5[] = "\nEnter the DAY SUN-01 MON-02 TUE-03 WED-04 THURS-
      +                          05 FRI-06 SAT-07\0";
  4931  0070A6  EE22  F000         	lfsr	2,Set_day@F205
  4932  0070AA  EE10  F00A         	lfsr	1,Set_day@str5
  4933  0070AE  0E43               	movlw	67
  4934  0070B0                     u2211:
  4935  0070B0  CFDE FFE6          	movff	postinc2,postinc1
  4936  0070B4  2EE8               	decfsz	wreg,f,c
  4937  0070B6  D7FC               	goto	u2211
  4938                           
  4939                           ;time.c: 120: unsigned char day;
  4940                           ;time.c: 121: Write_str(str5);
  4941  0070B8  0E00               	movlw	high Set_day@str5
  4942  0070BA  6E04               	movwf	?_Write_str+1,c
  4943  0070BC  0E0A               	movlw	low Set_day@str5
  4944  0070BE  6E03               	movwf	?_Write_str,c
  4945  0070C0  EC22  F035         	call	_Write_str	;wreg free
  4946                           
  4947                           ;time.c: 122: Clear_array(str, 8);
  4948  0070C4  0100               	movlb	0	; () banked
  4949  0070C6  0E00               	movlw	high _str
  4950  0070C8  6E02               	movwf	?_Clear_array+1,c
  4951  0070CA  0100               	movlb	0	; () banked
  4952  0070CC  0EF3               	movlw	low _str
  4953  0070CE  6E01               	movwf	?_Clear_array,c
  4954  0070D0  6E09               	movwf	??_Set_day& (0+255),c
  4955  0070D2  0E08               	movlw	8
  4956  0070D4  6E03               	movwf	?_Clear_array+2,c
  4957  0070D6  5009               	movf	??_Set_day& (0+255),w,c
  4958  0070D8  ECE2  F034         	call	_Clear_array	;wreg free
  4959  0070DC                     l2721:
  4960                           
  4961                           ;time.c: 124: {
  4962                           ;time.c: 125: Read_string(str, 2);
  4963  0070DC  0100               	movlb	0	; () banked
  4964  0070DE  0E00               	movlw	high _str
  4965  0070E0  6E04               	movwf	?_Read_string+1,c
  4966  0070E2  0100               	movlb	0	; () banked
  4967  0070E4  0EF3               	movlw	low _str
  4968  0070E6  6E03               	movwf	?_Read_string,c
  4969  0070E8  6E09               	movwf	??_Set_day& (0+255),c
  4970  0070EA  0E02               	movlw	2
  4971  0070EC  6E05               	movwf	?_Read_string+2,c
  4972  0070EE  5009               	movf	??_Set_day& (0+255),w,c
  4973  0070F0  EC38  F036         	call	_Read_string	;wreg free
  4974                           
  4975                           ;time.c: 126: day = BCD_format(str);
  4976  0070F4  0100               	movlb	0	; () banked
  4977  0070F6  0E00               	movlw	high _str
  4978  0070F8  6E02               	movwf	?_BCD_format+1,c
  4979  0070FA  0100               	movlb	0	; () banked
  4980  0070FC  0EF3               	movlw	low _str
  4981  0070FE  6E01               	movwf	?_BCD_format,c
  4982  007100  ECCF  F034         	call	_BCD_format	;wreg free
  4983  007104  6E5F               	movwf	Set_day@day,c
  4984                           
  4985                           ;time.c: 127: Write_str(str);
  4986  007106  0100               	movlb	0	; () banked
  4987  007108  0E00               	movlw	high _str
  4988  00710A  6E04               	movwf	?_Write_str+1,c
  4989  00710C  0100               	movlb	0	; () banked
  4990  00710E  0EF3               	movlw	low _str
  4991  007110  6E03               	movwf	?_Write_str,c
  4992  007112  EC22  F035         	call	_Write_str	;wreg free
  4993                           
  4994                           ;time.c: 128: if(day>=1 && day<=7)
  4995  007116  505F               	movf	Set_day@day,w,c
  4996  007118  B4D8               	btfsc	status,2,c
  4997  00711A  D005               	goto	l2737
  4998  00711C  0E08               	movlw	8
  4999  00711E  605F               	cpfslt	Set_day@day,c
  5000  007120  D002               	goto	l2737
  5001                           
  5002                           ;time.c: 129: {
  5003                           ;time.c: 130: return (day);
  5004  007122  505F               	movf	Set_day@day,w,c
  5005  007124  D00C               	goto	l154
  5006  007126                     l2737:
  5007                           
  5008                           ;time.c: 132: else{
  5009                           ;time.c: 133: Write_str(error);
  5010  007126  0E00               	movlw	high Set_day@error
  5011  007128  6E04               	movwf	?_Write_str+1,c
  5012  00712A  0E4D               	movlw	low Set_day@error
  5013  00712C  6E03               	movwf	?_Write_str,c
  5014  00712E  EC22  F035         	call	_Write_str	;wreg free
  5015                           
  5016                           ;time.c: 135: }
  5017                           ;time.c: 136: }while(!(day>=1 && day<=7));
  5018  007132  505F               	movf	Set_day@day,w,c
  5019  007134  B4D8               	btfsc	status,2,c
  5020  007136  D7D2               	goto	l2721
  5021  007138  0E08               	movlw	8
  5022  00713A  605F               	cpfslt	Set_day@day,c
  5023  00713C  D7CF               	goto	l2721
  5024  00713E                     l154:
  5025  00713E  0012               	return	
  5026  007140                     __end_of_Set_day:
  5027                           	opt stack 0
  5028                           tblptru	equ	0xFF8
  5029                           tblptrh	equ	0xFF7
  5030                           tblptrl	equ	0xFF6
  5031                           tablat	equ	0xFF5
  5032                           postinc0	equ	0xFEE
  5033                           wreg	equ	0xFE8
  5034                           indf1	equ	0xFE7
  5035                           postinc1	equ	0xFE6
  5036                           postdec1	equ	0xFE5
  5037                           fsr1h	equ	0xFE2
  5038                           fsr1l	equ	0xFE1
  5039                           indf2	equ	0xFDF
  5040                           postinc2	equ	0xFDE
  5041                           fsr2h	equ	0xFDA
  5042                           fsr2l	equ	0xFD9
  5043                           status	equ	0xFD8
  5044                           
  5045 ;; *************** function _Clear_array *****************
  5046 ;; Defined at:
  5047 ;;		line 53 in file "time.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  e               2    0[COMRAM] PTR unsigned char 
  5050 ;;		 -> str(11), time(2), 
  5051 ;;  n               1    2[COMRAM] unsigned char 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;  i               1    4[COMRAM] unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;		None               void
  5056 ;; Registers used:
  5057 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5063 ;;      Params:         3       0       0       0       0       0       0       0       0
  5064 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5065 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5066 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5067 ;;Total ram usage:        5 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_Set_day
  5073 ;;		_Read_time
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text27
  5078  0069C4                     __ptext27:
  5079                           	opt stack 0
  5080  0069C4                     _Clear_array:
  5081                           	opt stack 28
  5082                           
  5083                           ;time.c: 54: unsigned char i;
  5084                           ;time.c: 55: for(i=0;i<n;i++)
  5085                           
  5086                           ;incstack = 0
  5087                           ;incstack = 0
  5088  0069C4  6E04               	movwf	??_Clear_array& (0+255),c
  5089  0069C6  0E00               	movlw	0
  5090  0069C8  6E05               	movwf	Clear_array@i,c
  5091  0069CA  5004               	movf	??_Clear_array& (0+255),w,c
  5092  0069CC  D009               	goto	l2311
  5093  0069CE                     l2305:
  5094                           
  5095                           ;time.c: 56: {
  5096                           ;time.c: 57: *e = ' ';
  5097  0069CE  C001  FFD9         	movff	Clear_array@e,fsr2l
  5098  0069D2  C002  FFDA         	movff	Clear_array@e+1,fsr2h
  5099  0069D6  0E20               	movlw	32
  5100  0069D8  6EDF               	movwf	indf2,c
  5101                           
  5102                           ;time.c: 58: e++;
  5103  0069DA  4A01               	infsnz	Clear_array@e,f,c
  5104  0069DC  2A02               	incf	Clear_array@e+1,f,c
  5105  0069DE  2A05               	incf	Clear_array@i,f,c
  5106  0069E0                     l2311:
  5107  0069E0  5003               	movf	Clear_array@n,w,c
  5108  0069E2  5C05               	subwf	Clear_array@i,w,c
  5109  0069E4  B0D8               	btfsc	status,0,c
  5110  0069E6  0012               	return	
  5111  0069E8  D7F2               	goto	l2305
  5112  0069EA                     __end_of_Clear_array:
  5113                           	opt stack 0
  5114                           tblptru	equ	0xFF8
  5115                           tblptrh	equ	0xFF7
  5116                           tblptrl	equ	0xFF6
  5117                           tablat	equ	0xFF5
  5118                           postinc0	equ	0xFEE
  5119                           wreg	equ	0xFE8
  5120                           indf1	equ	0xFE7
  5121                           postinc1	equ	0xFE6
  5122                           postdec1	equ	0xFE5
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           indf2	equ	0xFDF
  5126                           postinc2	equ	0xFDE
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function _Set_time *****************
  5132 ;; Defined at:
  5133 ;;		line 70 in file "time.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  sec             2    8[COMRAM] PTR unsigned char 
  5136 ;;		 -> Get_data@s(1), 
  5137 ;;  min             2   10[COMRAM] PTR unsigned char 
  5138 ;;		 -> Get_data@m(1), 
  5139 ;;  hour            2   12[COMRAM] PTR unsigned char 
  5140 ;;		 -> Get_data@h(1), 
  5141 ;;  mode            1   14[COMRAM] unsigned char 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  str3           37   16[COMRAM] unsigned char [37]
  5144 ;;  error          18   53[COMRAM] unsigned char [18]
  5145 ;;  h               1   76[COMRAM] unsigned char 
  5146 ;;  z               1   75[COMRAM] unsigned char 
  5147 ;;  y               1   74[COMRAM] unsigned char 
  5148 ;;  x               1   73[COMRAM] unsigned char 
  5149 ;;  m               1   72[COMRAM] unsigned char 
  5150 ;;  s               1   71[COMRAM] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;		None               void
  5153 ;; Registers used:
  5154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5160 ;;      Params:         7       0       0       0       0       0       0       0       0
  5161 ;;      Locals:        61       0       0       0       0       0       0       0       0
  5162 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5163 ;;      Totals:        69       0       0       0       0       0       0       0       0
  5164 ;;Total ram usage:       69 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    3
  5167 ;; This function calls:
  5168 ;;		_Write_str
  5169 ;;		_BCD_format
  5170 ;;		_BCD_to_DEC
  5171 ;;		_Read_string
  5172 ;; This function is called by:
  5173 ;;		_Get_data
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text28
  5178  0078B8                     __ptext28:
  5179                           	opt stack 0
  5180  0078B8                     _Set_time:
  5181                           	opt stack 25
  5182                           
  5183                           ;time.c: 71: unsigned char s, m, h, x, y, z;
  5184                           ;time.c: 72: unsigned char str3[37] = "\nEnter the time in the format HHMMSS";
  5185                           
  5186                           ;incstack = 0
  5187                           ;incstack = 0
  5188  0078B8  EE22  F043         	lfsr	2,Set_time@F198
  5189  0078BC  EE10  F011         	lfsr	1,Set_time@str3
  5190  0078C0  0E25               	movlw	37
  5191  0078C2                     u1981:
  5192  0078C2  CFDE FFE6          	movff	postinc2,postinc1
  5193  0078C6  2EE8               	decfsz	wreg,f,c
  5194  0078C8  D7FC               	goto	u1981
  5195                           
  5196                           ;time.c: 73: unsigned char error[] = "\nInvalid Entry..!";
  5197  0078CA  EE21  F0A7         	lfsr	2,Set_time@F200
  5198  0078CE  EE10  F036         	lfsr	1,Set_time@error
  5199  0078D2  0E12               	movlw	18
  5200  0078D4                     u1991:
  5201  0078D4  CFDE FFE6          	movff	postinc2,postinc1
  5202  0078D8  2EE8               	decfsz	wreg,f,c
  5203  0078DA  D7FC               	goto	u1991
  5204  0078DC                     l2645:
  5205                           
  5206                           ;time.c: 75: {
  5207                           ;time.c: 76: Write_str(str3);
  5208  0078DC  0E00               	movlw	high Set_time@str3
  5209  0078DE  6E04               	movwf	?_Write_str+1,c
  5210  0078E0  0E11               	movlw	low Set_time@str3
  5211  0078E2  6E03               	movwf	?_Write_str,c
  5212  0078E4  EC22  F035         	call	_Write_str	;wreg free
  5213                           
  5214                           ;time.c: 77: Read_string(str, 6);
  5215  0078E8  0100               	movlb	0	; () banked
  5216  0078EA  0E00               	movlw	high _str
  5217  0078EC  6E04               	movwf	?_Read_string+1,c
  5218  0078EE  0100               	movlb	0	; () banked
  5219  0078F0  0EF3               	movlw	low _str
  5220  0078F2  6E03               	movwf	?_Read_string,c
  5221  0078F4  6E10               	movwf	??_Set_time& (0+255),c
  5222  0078F6  0E06               	movlw	6
  5223  0078F8  6E05               	movwf	?_Read_string+2,c
  5224  0078FA  5010               	movf	??_Set_time& (0+255),w,c
  5225  0078FC  EC38  F036         	call	_Read_string	;wreg free
  5226                           
  5227                           ;time.c: 78: h = BCD_format(str);
  5228  007900  0100               	movlb	0	; () banked
  5229  007902  0E00               	movlw	high _str
  5230  007904  6E02               	movwf	?_BCD_format+1,c
  5231  007906  0100               	movlb	0	; () banked
  5232  007908  0EF3               	movlw	low _str
  5233  00790A  6E01               	movwf	?_BCD_format,c
  5234  00790C  ECCF  F034         	call	_BCD_format	;wreg free
  5235  007910  6E4D               	movwf	Set_time@h,c
  5236                           
  5237                           ;time.c: 79: m = BCD_format(str+2);
  5238  007912  0100               	movlb	0	; () banked
  5239  007914  0E00               	movlw	high (_str+2)
  5240  007916  6E02               	movwf	?_BCD_format+1,c
  5241  007918  0100               	movlb	0	; () banked
  5242  00791A  0EF5               	movlw	low (_str+2)
  5243  00791C  6E01               	movwf	?_BCD_format,c
  5244  00791E  ECCF  F034         	call	_BCD_format	;wreg free
  5245  007922  6E49               	movwf	Set_time@m,c
  5246                           
  5247                           ;time.c: 80: s = BCD_format(str+4);
  5248  007924  0100               	movlb	0	; () banked
  5249  007926  0E00               	movlw	high (_str+4)
  5250  007928  6E02               	movwf	?_BCD_format+1,c
  5251  00792A  0100               	movlb	0	; () banked
  5252  00792C  0EF7               	movlw	low (_str+4)
  5253  00792E  6E01               	movwf	?_BCD_format,c
  5254  007930  ECCF  F034         	call	_BCD_format	;wreg free
  5255  007934  6E48               	movwf	Set_time@s,c
  5256                           
  5257                           ;time.c: 81: x = BCD_to_DEC(s);
  5258  007936  C048  F001         	movff	Set_time@s,?_BCD_to_DEC
  5259  00793A  EC46  F034         	call	_BCD_to_DEC	;wreg free
  5260  00793E  6E4A               	movwf	Set_time@x,c
  5261                           
  5262                           ;time.c: 82: y = BCD_to_DEC(m);
  5263  007940  C049  F001         	movff	Set_time@m,?_BCD_to_DEC
  5264  007944  EC46  F034         	call	_BCD_to_DEC	;wreg free
  5265  007948  6E4B               	movwf	Set_time@y,c
  5266                           
  5267                           ;time.c: 83: z = BCD_to_DEC(h);
  5268  00794A  C04D  F001         	movff	Set_time@h,?_BCD_to_DEC
  5269  00794E  EC46  F034         	call	_BCD_to_DEC	;wreg free
  5270  007952  6E4C               	movwf	Set_time@z,c
  5271                           
  5272                           ;time.c: 84: if((mode==0)||(mode==1))
  5273  007954  500F               	movf	Set_time@mode,w,c
  5274  007956  B4D8               	btfsc	status,2,c
  5275  007958  D003               	goto	l2665
  5276  00795A  040F               	decf	Set_time@mode,w,c
  5277  00795C  A4D8               	btfss	status,2,c
  5278  00795E  D028               	goto	l2685
  5279  007960                     l2665:
  5280                           
  5281                           ;time.c: 85: {
  5282                           ;time.c: 86: if(((x>=0&&x<=59) && (y>=0&&y<=59) && (z>=1&&z<=12) ))
  5283  007960  0E3C               	movlw	60
  5284  007962  604A               	cpfslt	Set_time@x,c
  5285  007964  D01E               	goto	l2683
  5286  007966  0E3C               	movlw	60
  5287  007968  604B               	cpfslt	Set_time@y,c
  5288  00796A  D01B               	goto	l2683
  5289  00796C  504C               	movf	Set_time@z,w,c
  5290  00796E  B4D8               	btfsc	status,2,c
  5291  007970  D018               	goto	l2683
  5292  007972  0E0D               	movlw	13
  5293  007974  604C               	cpfslt	Set_time@z,c
  5294  007976  D015               	goto	l2683
  5295                           
  5296                           ;time.c: 87: {
  5297                           ;time.c: 88: s = s&0x7F;
  5298  007978  5048               	movf	Set_time@s,w,c
  5299  00797A  0B7F               	andlw	127
  5300  00797C  6E48               	movwf	Set_time@s,c
  5301                           
  5302                           ;time.c: 89: m = m&0x7F;
  5303  00797E  5049               	movf	Set_time@m,w,c
  5304  007980  0B7F               	andlw	127
  5305  007982  6E49               	movwf	Set_time@m,c
  5306                           
  5307                           ;time.c: 90: h = h&0x1F;
  5308  007984  504D               	movf	Set_time@h,w,c
  5309  007986  0B1F               	andlw	31
  5310  007988  6E4D               	movwf	Set_time@h,c
  5311                           
  5312                           ;time.c: 91: if(mode==0)
  5313  00798A  660F               	tstfsz	Set_time@mode,c
  5314  00798C  D003               	goto	l2679
  5315                           
  5316                           ;time.c: 92: h = h|0x40;
  5317  00798E  504D               	movf	Set_time@h,w,c
  5318  007990  0940               	iorlw	64
  5319  007992  D005               	goto	L4
  5320  007994                     l2679:
  5321                           
  5322                           ;time.c: 93: else if(mode == 1)
  5323  007994  040F               	decf	Set_time@mode,w,c
  5324  007996  A4D8               	btfss	status,2,c
  5325  007998  D018               	goto	u2110
  5326                           
  5327                           ;time.c: 94: h = h|0x60;
  5328  00799A  504D               	movf	Set_time@h,w,c
  5329  00799C  0960               	iorlw	96
  5330  00799E                     L4:
  5331  00799E  6E4D               	movwf	Set_time@h,c
  5332  0079A0  D014               	goto	u2110
  5333  0079A2                     l2683:
  5334                           
  5335                           ;time.c: 97: else
  5336                           ;time.c: 98: Write_str(error);
  5337  0079A2  0E00               	movlw	high Set_time@error
  5338  0079A4  6E04               	movwf	?_Write_str+1,c
  5339  0079A6  0E36               	movlw	low Set_time@error
  5340  0079A8  6E03               	movwf	?_Write_str,c
  5341  0079AA  EC22  F035         	call	_Write_str	;wreg free
  5342  0079AE  D017               	goto	l2697
  5343  0079B0                     l2685:
  5344                           
  5345                           ;time.c: 100: else if(((x>=0&&x<=59) && (y>=0&&y<=59) && (z>=0&&z<=24) ) && (mode==2))
  5346  0079B0  0E3C               	movlw	60
  5347  0079B2  604A               	cpfslt	Set_time@x,c
  5348  0079B4  D00E               	goto	l2695
  5349  0079B6  0E3C               	movlw	60
  5350  0079B8  604B               	cpfslt	Set_time@y,c
  5351  0079BA  D00B               	goto	l2695
  5352  0079BC  0E19               	movlw	25
  5353  0079BE  604C               	cpfslt	Set_time@z,c
  5354  0079C0  D008               	goto	l2695
  5355                           
  5356                           ;time.c: 101: {
  5357                           ;time.c: 102: h = h|0x00;
  5358  0079C2  500F               	movf	Set_time@mode,w,c
  5359  0079C4  0A02               	xorlw	2
  5360  0079C6  A4D8               	btfss	status,2,c
  5361  0079C8  D004               	goto	l2695
  5362  0079CA                     u2110:
  5363                           
  5364                           ;time.c: 103: h = h&0x7F;
  5365  0079CA  504D               	movf	Set_time@h,w,c
  5366  0079CC  0B7F               	andlw	127
  5367  0079CE  6E4D               	movwf	Set_time@h,c
  5368                           
  5369                           ;time.c: 104: }
  5370  0079D0  D006               	goto	l2697
  5371  0079D2                     l2695:
  5372                           
  5373                           ;time.c: 105: else
  5374                           ;time.c: 106: Write_str(error);
  5375  0079D2  0E00               	movlw	high Set_time@error
  5376  0079D4  6E04               	movwf	?_Write_str+1,c
  5377  0079D6  0E36               	movlw	low Set_time@error
  5378  0079D8  6E03               	movwf	?_Write_str,c
  5379  0079DA  EC22  F035         	call	_Write_str	;wreg free
  5380  0079DE                     l2697:
  5381                           
  5382                           ;time.c: 107: }while(!(((x>=0&&x<=59) && (y>=0&&y<=59) && (z>=1&&z<=12)) || ((x>=0&&x<=5
      +                          9) && (y>=0&&y<=59) && (z>=0&&z<=24) && (mode==2)) ));
  5383  0079DE  0E3C               	movlw	60
  5384  0079E0  604A               	cpfslt	Set_time@x,c
  5385  0079E2  D009               	goto	l2705
  5386  0079E4  0E3C               	movlw	60
  5387  0079E6  604B               	cpfslt	Set_time@y,c
  5388  0079E8  D006               	goto	l2705
  5389  0079EA  504C               	movf	Set_time@z,w,c
  5390  0079EC  B4D8               	btfsc	status,2,c
  5391  0079EE  D003               	goto	l2705
  5392  0079F0  0E0C               	movlw	12
  5393  0079F2  644C               	cpfsgt	Set_time@z,c
  5394  0079F4  D00D               	goto	l2713
  5395  0079F6                     l2705:
  5396  0079F6  0E3C               	movlw	60
  5397  0079F8  604A               	cpfslt	Set_time@x,c
  5398  0079FA  D770               	goto	l2645
  5399  0079FC  0E3C               	movlw	60
  5400  0079FE  604B               	cpfslt	Set_time@y,c
  5401  007A00  D76D               	goto	l2645
  5402  007A02  0E19               	movlw	25
  5403  007A04  604C               	cpfslt	Set_time@z,c
  5404  007A06  D76A               	goto	l2645
  5405  007A08  500F               	movf	Set_time@mode,w,c
  5406  007A0A  0A02               	xorlw	2
  5407  007A0C  A4D8               	btfss	status,2,c
  5408  007A0E  D766               	goto	l2645
  5409  007A10                     l2713:
  5410                           
  5411                           ;time.c: 109: *sec = s;
  5412  007A10  C009  FFD9         	movff	Set_time@sec,fsr2l
  5413  007A14  C00A  FFDA         	movff	Set_time@sec+1,fsr2h
  5414  007A18  C048  FFDF         	movff	Set_time@s,indf2
  5415                           
  5416                           ;time.c: 110: *min = m;
  5417  007A1C  C00B  FFD9         	movff	Set_time@min,fsr2l
  5418  007A20  C00C  FFDA         	movff	Set_time@min+1,fsr2h
  5419  007A24  C049  FFDF         	movff	Set_time@m,indf2
  5420                           
  5421                           ;time.c: 111: *hour = h;
  5422  007A28  C00D  FFD9         	movff	Set_time@hour,fsr2l
  5423  007A2C  C00E  FFDA         	movff	Set_time@hour+1,fsr2h
  5424  007A30  C04D  FFDF         	movff	Set_time@h,indf2
  5425  007A34  0012               	return	
  5426  007A36                     __end_of_Set_time:
  5427                           	opt stack 0
  5428                           tblptru	equ	0xFF8
  5429                           tblptrh	equ	0xFF7
  5430                           tblptrl	equ	0xFF6
  5431                           tablat	equ	0xFF5
  5432                           postinc0	equ	0xFEE
  5433                           wreg	equ	0xFE8
  5434                           indf1	equ	0xFE7
  5435                           postinc1	equ	0xFE6
  5436                           postdec1	equ	0xFE5
  5437                           fsr1h	equ	0xFE2
  5438                           fsr1l	equ	0xFE1
  5439                           indf2	equ	0xFDF
  5440                           postinc2	equ	0xFDE
  5441                           fsr2h	equ	0xFDA
  5442                           fsr2l	equ	0xFD9
  5443                           status	equ	0xFD8
  5444                           
  5445 ;; *************** function _Read_string *****************
  5446 ;; Defined at:
  5447 ;;		line 56 in file "uart.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  5450 ;;		 -> str(11), 
  5451 ;;  len             1    4[COMRAM] unsigned char 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  data            1    7[COMRAM] unsigned char 
  5454 ;;  i               1    6[COMRAM] unsigned char 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;		None               void
  5457 ;; Registers used:
  5458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5464 ;;      Params:         3       0       0       0       0       0       0       0       0
  5465 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5466 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5467 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5468 ;;Total ram usage:        6 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    2
  5471 ;; This function calls:
  5472 ;;		_Write
  5473 ;;		_WriteUSART
  5474 ;;		_ReadUSART
  5475 ;; This function is called by:
  5476 ;;		_Set_time
  5477 ;;		_Set_day
  5478 ;;		_Set_date
  5479 ;;		_Get_data
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text29
  5484  006C70                     __ptext29:
  5485                           	opt stack 0
  5486  006C70                     _Read_string:
  5487                           	opt stack 25
  5488                           
  5489                           ;uart.c: 57: char i;
  5490                           ;uart.c: 58: unsigned char data;
  5491                           ;uart.c: 59: Write(0x0D);
  5492                           
  5493                           ;incstack = 0
  5494                           ;incstack = 0
  5495  006C70  6E06               	movwf	??_Read_string& (0+255),c
  5496  006C72  0E0D               	movlw	13
  5497  006C74  6E02               	movwf	?_Write,c
  5498  006C76  5006               	movf	??_Read_string& (0+255),w,c
  5499  006C78  EC0D  F034         	call	_Write	;wreg free
  5500                           
  5501                           ;uart.c: 60: Write('\n');
  5502  006C7C  6E06               	movwf	??_Read_string& (0+255),c
  5503  006C7E  0E0A               	movlw	10
  5504  006C80  6E02               	movwf	?_Write,c
  5505  006C82  5006               	movf	??_Read_string& (0+255),w,c
  5506  006C84  EC0D  F034         	call	_Write	;wreg free
  5507                           
  5508                           ;uart.c: 61: for(i=0;i<len;i++)
  5509  006C88  6E06               	movwf	??_Read_string& (0+255),c
  5510  006C8A  0E00               	movlw	0
  5511  006C8C  6E07               	movwf	Read_string@i,c
  5512  006C8E  5006               	movf	??_Read_string& (0+255),w,c
  5513  006C90  D014               	goto	l2571
  5514  006C92                     l470:
  5515  006C92  AA9E               	btfss	3998,5,c	;volatile
  5516  006C94  D7FE               	goto	l470
  5517                           
  5518                           ;uart.c: 64: data = ReadUSART();
  5519  006C96  EC3D  F035         	call	_ReadUSART	;wreg free
  5520  006C9A  6E08               	movwf	Read_string@data,c
  5521                           
  5522                           ;uart.c: 65: *buffer = data;
  5523  006C9C  C003  FFD9         	movff	Read_string@buffer,fsr2l
  5524  006CA0  C004  FFDA         	movff	Read_string@buffer+1,fsr2h
  5525  006CA4  C008  FFDF         	movff	Read_string@data,indf2
  5526                           
  5527                           ;uart.c: 66: WriteUSART(data);
  5528  006CA8  C008  F001         	movff	Read_string@data,?_WriteUSART
  5529  006CAC  EC31  F034         	call	_WriteUSART	;wreg free
  5530  006CB0                     l473:
  5531  006CB0  A2AC               	btfss	4012,1,c	;volatile
  5532  006CB2  D7FE               	goto	l473
  5533                           
  5534                           ;uart.c: 68: buffer++;
  5535  006CB4  4A03               	infsnz	Read_string@buffer,f,c
  5536  006CB6  2A04               	incf	Read_string@buffer+1,f,c
  5537  006CB8  2A07               	incf	Read_string@i,f,c
  5538  006CBA                     l2571:
  5539  006CBA  5005               	movf	Read_string@len,w,c
  5540  006CBC  5C07               	subwf	Read_string@i,w,c
  5541  006CBE  B0D8               	btfsc	status,0,c
  5542  006CC0  0012               	return	
  5543  006CC2  D7E7               	goto	l470
  5544  006CC4                     __end_of_Read_string:
  5545                           	opt stack 0
  5546                           tblptru	equ	0xFF8
  5547                           tblptrh	equ	0xFF7
  5548                           tblptrl	equ	0xFF6
  5549                           tablat	equ	0xFF5
  5550                           postinc0	equ	0xFEE
  5551                           wreg	equ	0xFE8
  5552                           indf1	equ	0xFE7
  5553                           postinc1	equ	0xFE6
  5554                           postdec1	equ	0xFE5
  5555                           fsr1h	equ	0xFE2
  5556                           fsr1l	equ	0xFE1
  5557                           indf2	equ	0xFDF
  5558                           postinc2	equ	0xFDE
  5559                           fsr2h	equ	0xFDA
  5560                           fsr2l	equ	0xFD9
  5561                           status	equ	0xFD8
  5562                           
  5563 ;; *************** function _BCD_to_DEC *****************
  5564 ;; Defined at:
  5565 ;;		line 45 in file "time.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  c               1    0[COMRAM] unsigned char 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      unsigned char 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0, prodl, prodh
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5579 ;;      Params:         1       0       0       0       0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5581 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5582 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5583 ;;Total ram usage:        2 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_Set_time
  5589 ;;		_Set_date
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text30
  5594  00688C                     __ptext30:
  5595                           	opt stack 0
  5596  00688C                     _BCD_to_DEC:
  5597                           	opt stack 27
  5598                           
  5599                           ;time.c: 46: return ((c>>4)*10+(c&0x0F)*1);
  5600                           
  5601                           ;incstack = 0
  5602                           ;incstack = 0
  5603  00688C  5001               	movf	BCD_to_DEC@c,w,c
  5604  00688E  0B0F               	andlw	15
  5605  006890  0D01               	mullw	1
  5606  006892  CFF3 F002          	movff	prodl,??_BCD_to_DEC
  5607  006896  3801               	swapf	BCD_to_DEC@c,w,c
  5608  006898  0B0F               	andlw	15
  5609  00689A  0D0A               	mullw	10
  5610  00689C  50F3               	movf	prodl,w,c
  5611  00689E  2402               	addwf	??_BCD_to_DEC,w,c
  5612  0068A0  0012               	return	
  5613  0068A2                     __end_of_BCD_to_DEC:
  5614                           	opt stack 0
  5615                           tblptru	equ	0xFF8
  5616                           tblptrh	equ	0xFF7
  5617                           tblptrl	equ	0xFF6
  5618                           tablat	equ	0xFF5
  5619                           prodl	equ	0xFF3
  5620                           postinc0	equ	0xFEE
  5621                           wreg	equ	0xFE8
  5622                           indf1	equ	0xFE7
  5623                           postinc1	equ	0xFE6
  5624                           postdec1	equ	0xFE5
  5625                           fsr1h	equ	0xFE2
  5626                           fsr1l	equ	0xFE1
  5627                           indf2	equ	0xFDF
  5628                           postinc2	equ	0xFDE
  5629                           fsr2h	equ	0xFDA
  5630                           fsr2l	equ	0xFD9
  5631                           status	equ	0xFD8
  5632                           
  5633 ;; *************** function _BCD_format *****************
  5634 ;; Defined at:
  5635 ;;		line 34 in file "time.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  str             2    0[COMRAM] PTR unsigned char 
  5638 ;;		 -> str(11), 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  a               1    3[COMRAM] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      unsigned char 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5650 ;;      Params:         2       0       0       0       0       0       0       0       0
  5651 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5652 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5653 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5654 ;;Total ram usage:        4 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_Set_time
  5660 ;;		_Set_day
  5661 ;;		_Set_date
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text31
  5666  00699E                     __ptext31:
  5667                           	opt stack 0
  5668  00699E                     _BCD_format:
  5669                           	opt stack 27
  5670                           
  5671                           ;time.c: 35: unsigned char a;
  5672                           ;time.c: 36: a = (*str-'0')<<4;
  5673                           
  5674                           ;incstack = 0
  5675                           ;incstack = 0
  5676  00699E  C001  FFD9         	movff	BCD_format@str,fsr2l
  5677  0069A2  C002  FFDA         	movff	BCD_format@str+1,fsr2h
  5678  0069A6  50DF               	movf	indf2,w,c
  5679  0069A8  6E03               	movwf	??_BCD_format& (0+255),c
  5680  0069AA  3803               	swapf	??_BCD_format,w,c
  5681  0069AC  0BF0               	andlw	240
  5682  0069AE  6E04               	movwf	BCD_format@a,c
  5683                           
  5684                           ;time.c: 37: str++;
  5685  0069B0  4A01               	infsnz	BCD_format@str,f,c
  5686  0069B2  2A02               	incf	BCD_format@str+1,f,c
  5687                           
  5688                           ;time.c: 38: return (a|(*str-'0'));
  5689  0069B4  C001  FFD9         	movff	BCD_format@str,fsr2l
  5690  0069B8  C002  FFDA         	movff	BCD_format@str+1,fsr2h
  5691  0069BC  50DF               	movf	indf2,w,c
  5692  0069BE  0FD0               	addlw	208
  5693  0069C0  1004               	iorwf	BCD_format@a,w,c
  5694  0069C2  0012               	return	
  5695  0069C4                     __end_of_BCD_format:
  5696                           	opt stack 0
  5697                           tblptru	equ	0xFF8
  5698                           tblptrh	equ	0xFF7
  5699                           tblptrl	equ	0xFF6
  5700                           tablat	equ	0xFF5
  5701                           prodl	equ	0xFF3
  5702                           postinc0	equ	0xFEE
  5703                           wreg	equ	0xFE8
  5704                           indf1	equ	0xFE7
  5705                           postinc1	equ	0xFE6
  5706                           postdec1	equ	0xFE5
  5707                           fsr1h	equ	0xFE2
  5708                           fsr1l	equ	0xFE1
  5709                           indf2	equ	0xFDF
  5710                           postinc2	equ	0xFDE
  5711                           fsr2h	equ	0xFDA
  5712                           fsr2l	equ	0xFD9
  5713                           status	equ	0xFD8
  5714                           
  5715 ;; *************** function _Write_str *****************
  5716 ;; Defined at:
  5717 ;;		line 33 in file "uart.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  c               2    2[COMRAM] PTR unsigned char 
  5720 ;;		 -> Get_data@error(18), Get_data@str8(14), Get_data@str2(19), Set_date@error(18), 
  5721 ;;		 -> Set_date@str6(30), Set_day@str5(67), Set_day@error(18), str(11), 
  5722 ;;		 -> Set_time@error(18), Set_time@str3(37), time(2), main@str8(29), 
  5723 ;;		 -> main@str7(35), 
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;		None               void
  5728 ;; Registers used:
  5729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5735 ;;      Params:         2       0       0       0       0       0       0       0       0
  5736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5737 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5738 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5739 ;;Total ram usage:        3 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    2
  5742 ;; This function calls:
  5743 ;;		_Write
  5744 ;;		_WriteUSART
  5745 ;; This function is called by:
  5746 ;;		_main
  5747 ;;		_Set_time
  5748 ;;		_Set_day
  5749 ;;		_Set_date
  5750 ;;		_Get_data
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text32
  5755  006A44                     __ptext32:
  5756                           	opt stack 0
  5757  006A44                     _Write_str:
  5758                           	opt stack 25
  5759                           
  5760                           ;uart.c: 34: Write(0x0D);
  5761                           
  5762                           ;incstack = 0
  5763                           ;incstack = 0
  5764  006A44  6E05               	movwf	??_Write_str& (0+255),c
  5765  006A46  0E0D               	movlw	13
  5766  006A48  6E02               	movwf	?_Write,c
  5767  006A4A  5005               	movf	??_Write_str& (0+255),w,c
  5768  006A4C  EC0D  F034         	call	_Write	;wreg free
  5769                           
  5770                           ;uart.c: 35: while(*c != '\0')
  5771  006A50  D00C               	goto	l2543
  5772  006A52                     l2539:
  5773                           
  5774                           ;uart.c: 36: {
  5775                           ;uart.c: 37: WriteUSART(*c);
  5776  006A52  C003  FFD9         	movff	Write_str@c,fsr2l
  5777  006A56  C004  FFDA         	movff	Write_str@c+1,fsr2h
  5778  006A5A  50DF               	movf	indf2,w,c
  5779  006A5C  6E01               	movwf	?_WriteUSART,c
  5780  006A5E  EC31  F034         	call	_WriteUSART	;wreg free
  5781  006A62                     l455:
  5782  006A62  A2AC               	btfss	4012,1,c	;volatile
  5783  006A64  D7FE               	goto	l455
  5784                           
  5785                           ;uart.c: 39: c++;
  5786  006A66  4A03               	infsnz	Write_str@c,f,c
  5787  006A68  2A04               	incf	Write_str@c+1,f,c
  5788  006A6A                     l2543:
  5789  006A6A  C003  FFD9         	movff	Write_str@c,fsr2l
  5790  006A6E  C004  FFDA         	movff	Write_str@c+1,fsr2h
  5791  006A72  50DF               	movf	indf2,w,c
  5792  006A74  B4D8               	btfsc	status,2,c
  5793  006A76  0012               	return	
  5794  006A78  D7EC               	goto	l2539
  5795  006A7A                     __end_of_Write_str:
  5796                           	opt stack 0
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodl	equ	0xFF3
  5802                           postinc0	equ	0xFEE
  5803                           wreg	equ	0xFE8
  5804                           indf1	equ	0xFE7
  5805                           postinc1	equ	0xFE6
  5806                           postdec1	equ	0xFE5
  5807                           fsr1h	equ	0xFE2
  5808                           fsr1l	equ	0xFE1
  5809                           indf2	equ	0xFDF
  5810                           postinc2	equ	0xFDE
  5811                           fsr2h	equ	0xFDA
  5812                           fsr2l	equ	0xFD9
  5813                           status	equ	0xFD8
  5814                           
  5815 ;; *************** function _Read_char *****************
  5816 ;; Defined at:
  5817 ;;		line 45 in file "uart.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  c               1    3[COMRAM] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      unsigned char 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5831 ;;      Params:         0       0       0       0       0       0       0       0       0
  5832 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5833 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5834 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5835 ;;Total ram usage:        2 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    2
  5838 ;; This function calls:
  5839 ;;		_Write
  5840 ;;		_ReadUSART
  5841 ;; This function is called by:
  5842 ;;		_main
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text33
  5847  006A16                     __ptext33:
  5848                           	opt stack 0
  5849  006A16                     _Read_char:
  5850                           	opt stack 27
  5851  006A16                     l462:
  5852  006A16  AA9E               	btfss	3998,5,c	;volatile
  5853  006A18  D7FE               	goto	l462
  5854                           
  5855                           ;uart.c: 48: c = ReadUSART();
  5856  006A1A  EC3D  F035         	call	_ReadUSART	;wreg free
  5857  006A1E  6E04               	movwf	Read_char@c,c
  5858                           
  5859                           ;uart.c: 49: Write('\n');
  5860  006A20  6E03               	movwf	??_Read_char& (0+255),c
  5861  006A22  0E0A               	movlw	10
  5862  006A24  6E02               	movwf	?_Write,c
  5863  006A26  5003               	movf	??_Read_char& (0+255),w,c
  5864  006A28  EC0D  F034         	call	_Write	;wreg free
  5865                           
  5866                           ;uart.c: 50: Write('\r');
  5867  006A2C  6E03               	movwf	??_Read_char& (0+255),c
  5868  006A2E  0E0D               	movlw	13
  5869  006A30  6E02               	movwf	?_Write,c
  5870  006A32  5003               	movf	??_Read_char& (0+255),w,c
  5871  006A34  EC0D  F034         	call	_Write	;wreg free
  5872                           
  5873                           ;uart.c: 51: Write(c);
  5874  006A38  C004  F002         	movff	Read_char@c,?_Write
  5875  006A3C  EC0D  F034         	call	_Write	;wreg free
  5876                           
  5877                           ;uart.c: 52: return (c);
  5878  006A40  5004               	movf	Read_char@c,w,c
  5879  006A42  0012               	return	
  5880  006A44                     __end_of_Read_char:
  5881                           	opt stack 0
  5882                           tblptru	equ	0xFF8
  5883                           tblptrh	equ	0xFF7
  5884                           tblptrl	equ	0xFF6
  5885                           tablat	equ	0xFF5
  5886                           prodl	equ	0xFF3
  5887                           postinc0	equ	0xFEE
  5888                           wreg	equ	0xFE8
  5889                           indf1	equ	0xFE7
  5890                           postinc1	equ	0xFE6
  5891                           postdec1	equ	0xFE5
  5892                           fsr1h	equ	0xFE2
  5893                           fsr1l	equ	0xFE1
  5894                           indf2	equ	0xFDF
  5895                           postinc2	equ	0xFDE
  5896                           fsr2h	equ	0xFDA
  5897                           fsr2l	equ	0xFD9
  5898                           status	equ	0xFD8
  5899                           
  5900 ;; *************** function _ReadUSART *****************
  5901 ;; Defined at:
  5902 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uread.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  data            1    0[COMRAM] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      unsigned char 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0
  5917 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5919 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5920 ;;Total ram usage:        1 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_Read_char
  5926 ;;		_Read_string
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text34
  5931  006A7A                     __ptext34:
  5932                           	opt stack 0
  5933  006A7A                     _ReadUSART:
  5934                           	opt stack 26
  5935                           
  5936                           ;incstack = 0
  5937                           ;incstack = 0
  5938  006A7A  0EF2               	movlw	242
  5939  006A7C  0100               	movlb	0	; () banked
  5940  006A7E  0100               	movlb	0	; () banked
  5941  006A80  17F2               	andwf	_USART_Status& (0+255),f,b
  5942                           
  5943                           ; BSR set to: 0
  5944  006A82  ACAB               	btfss	4011,6,c	;volatile
  5945  006A84  D008               	goto	l519
  5946                           
  5947                           ; BSR set to: 0
  5948  006A86  0100               	movlb	0	; () banked
  5949  006A88  0100               	movlb	0	; () banked
  5950  006A8A  91F2               	bcf	_USART_Status& (0+255),0,b
  5951  006A8C  A0AB               	btfss	4011,0,c	;volatile
  5952  006A8E  D003               	goto	l519
  5953                           
  5954                           ; BSR set to: 0
  5955  006A90  0100               	movlb	0	; () banked
  5956  006A92  0100               	movlb	0	; () banked
  5957  006A94  81F2               	bsf	_USART_Status& (0+255),0,b
  5958  006A96                     l519:
  5959                           
  5960                           ; BSR set to: 0
  5961  006A96  A4AB               	btfss	4011,2,c	;volatile
  5962  006A98  D003               	goto	l521
  5963                           
  5964                           ; BSR set to: 0
  5965  006A9A  0100               	movlb	0	; () banked
  5966  006A9C  0100               	movlb	0	; () banked
  5967  006A9E  85F2               	bsf	_USART_Status& (0+255),2,b
  5968  006AA0                     l521:
  5969                           
  5970                           ; BSR set to: 0
  5971  006AA0  A2AB               	btfss	4011,1,c	;volatile
  5972  006AA2  D003               	goto	l522
  5973                           
  5974                           ; BSR set to: 0
  5975  006AA4  0100               	movlb	0	; () banked
  5976  006AA6  0100               	movlb	0	; () banked
  5977  006AA8  87F2               	bsf	_USART_Status& (0+255),3,b
  5978  006AAA                     l522:
  5979                           
  5980                           ; BSR set to: 0
  5981  006AAA  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5982                           
  5983                           ; BSR set to: 0
  5984  006AAE  5001               	movf	ReadUSART@data,w,c
  5985                           
  5986                           ; BSR set to: 0
  5987                           
  5988                           ; BSR set to: 0
  5989  006AB0  0012               	return	
  5990  006AB2                     __end_of_ReadUSART:
  5991                           	opt stack 0
  5992                           tblptru	equ	0xFF8
  5993                           tblptrh	equ	0xFF7
  5994                           tblptrl	equ	0xFF6
  5995                           tablat	equ	0xFF5
  5996                           prodl	equ	0xFF3
  5997                           postinc0	equ	0xFEE
  5998                           wreg	equ	0xFE8
  5999                           indf1	equ	0xFE7
  6000                           postinc1	equ	0xFE6
  6001                           postdec1	equ	0xFE5
  6002                           fsr1h	equ	0xFE2
  6003                           fsr1l	equ	0xFE1
  6004                           indf2	equ	0xFDF
  6005                           postinc2	equ	0xFDE
  6006                           fsr2h	equ	0xFDA
  6007                           fsr2l	equ	0xFD9
  6008                           status	equ	0xFD8
  6009                           
  6010 ;; *************** function _Write *****************
  6011 ;; Defined at:
  6012 ;;		line 27 in file "uart.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  data            1    1[COMRAM] unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;		None               void
  6019 ;; Registers used:
  6020 ;;		cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6026 ;;      Params:         1       0       0       0       0       0       0       0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6029 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6030 ;;Total ram usage:        1 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    1
  6033 ;; This function calls:
  6034 ;;		_WriteUSART
  6035 ;; This function is called by:
  6036 ;;		_Write_str
  6037 ;;		_Read_char
  6038 ;;		_Read_string
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           	psect	text35
  6043  00681A                     __ptext35:
  6044                           	opt stack 0
  6045  00681A                     _Write:
  6046                           	opt stack 25
  6047                           
  6048                           ;uart.c: 28: WriteUSART(data);
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;incstack = 0
  6052                           ;incstack = 0
  6053  00681A  C002  F001         	movff	Write@data,?_WriteUSART
  6054  00681E  EC31  F034         	call	_WriteUSART	;wreg free
  6055  006822                     l447:
  6056  006822  B2AC               	btfsc	4012,1,c	;volatile
  6057  006824  0012               	return	
  6058  006826  D7FD               	goto	l447
  6059  006828                     __end_of_Write:
  6060                           	opt stack 0
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodl	equ	0xFF3
  6066                           postinc0	equ	0xFEE
  6067                           wreg	equ	0xFE8
  6068                           indf1	equ	0xFE7
  6069                           postinc1	equ	0xFE6
  6070                           postdec1	equ	0xFE5
  6071                           fsr1h	equ	0xFE2
  6072                           fsr1l	equ	0xFE1
  6073                           indf2	equ	0xFDF
  6074                           postinc2	equ	0xFDE
  6075                           fsr2h	equ	0xFDA
  6076                           fsr2l	equ	0xFD9
  6077                           status	equ	0xFD8
  6078                           
  6079 ;; *************** function _WriteUSART *****************
  6080 ;; Defined at:
  6081 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uwrite.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  data            1    0[COMRAM] unsigned char 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;		None               void
  6088 ;; Registers used:
  6089 ;;		None
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6095 ;;      Params:         1       0       0       0       0       0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6098 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6099 ;;Total ram usage:        1 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_Write
  6105 ;;		_Write_str
  6106 ;;		_Read_string
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text36
  6111  006862                     __ptext36:
  6112                           	opt stack 0
  6113  006862                     _WriteUSART:
  6114                           	opt stack 26
  6115                           
  6116                           ;incstack = 0
  6117                           ;incstack = 0
  6118  006862  ACAC               	btfss	4012,6,c	;volatile
  6119  006864  D005               	goto	l532
  6120  006866  90AC               	bcf	4012,0,c	;volatile
  6121  006868  0100               	movlb	0	; () banked
  6122  00686A  0100               	movlb	0	; () banked
  6123  00686C  B3F2               	btfsc	_USART_Status& (0+255),1,b
  6124                           
  6125                           ; BSR set to: 0
  6126  00686E  80AC               	bsf	4012,0,c	;volatile
  6127  006870                     l532:
  6128  006870  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  6129  006874  0012               	return	
  6130  006876                     __end_of_WriteUSART:
  6131                           	opt stack 0
  6132                           tblptru	equ	0xFF8
  6133                           tblptrh	equ	0xFF7
  6134                           tblptrl	equ	0xFF6
  6135                           tablat	equ	0xFF5
  6136                           prodl	equ	0xFF3
  6137                           postinc0	equ	0xFEE
  6138                           wreg	equ	0xFE8
  6139                           indf1	equ	0xFE7
  6140                           postinc1	equ	0xFE6
  6141                           postdec1	equ	0xFE5
  6142                           fsr1h	equ	0xFE2
  6143                           fsr1l	equ	0xFE1
  6144                           indf2	equ	0xFDF
  6145                           postinc2	equ	0xFDE
  6146                           fsr2h	equ	0xFDA
  6147                           fsr2l	equ	0xFD9
  6148                           status	equ	0xFD8
  6149                           
  6150 ;; *************** function _OpenXLCD *****************
  6151 ;; Defined at:
  6152 ;;		line 81 in file "xlcd.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  lcdtype         1    7[COMRAM] unsigned char 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;		None               void
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6166 ;;      Params:         1       0       0       0       0       0       0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6168 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6169 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6170 ;;Total ram usage:        2 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    3
  6173 ;; This function calls:
  6174 ;;		_DelayPORXLCD
  6175 ;;		_Delay10KTCYx
  6176 ;;		_WriteCmdXLCD
  6177 ;;		_SetDDRamAddr
  6178 ;;		_BusyXLCD
  6179 ;; This function is called by:
  6180 ;;		_main
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text37
  6185  0071FA                     __ptext37:
  6186                           	opt stack 0
  6187  0071FA                     _OpenXLCD:
  6188                           	opt stack 26
  6189                           
  6190                           ;xlcd.c: 83: PORTD = 0;
  6191                           
  6192                           ;incstack = 0
  6193                           ;incstack = 0
  6194  0071FA  0E00               	movlw	0
  6195  0071FC  6E83               	movwf	3971,c	;volatile
  6196                           
  6197                           ;xlcd.c: 84: TRISD = 0x00;
  6198  0071FE  0E00               	movlw	0
  6199  007200  6E95               	movwf	3989,c	;volatile
  6200                           
  6201                           ;xlcd.c: 86: TRISAbits.TRISA1 = 0;
  6202  007202  9292               	bcf	3986,1,c	;volatile
  6203                           
  6204                           ;xlcd.c: 87: TRISAbits.TRISA2 = 0;
  6205  007204  9492               	bcf	3986,2,c	;volatile
  6206                           
  6207                           ;xlcd.c: 88: TRISAbits.TRISA0 = 0;
  6208  007206  9092               	bcf	3986,0,c	;volatile
  6209                           
  6210                           ;xlcd.c: 89: LATAbits.LATA1 = 0;
  6211  007208  9289               	bcf	3977,1,c	;volatile
  6212                           
  6213                           ;xlcd.c: 90: LATAbits.LATA2 = 0;
  6214  00720A  9489               	bcf	3977,2,c	;volatile
  6215                           
  6216                           ;xlcd.c: 91: LATAbits.LATA0 = 0;
  6217  00720C  9089               	bcf	3977,0,c	;volatile
  6218                           
  6219                           ;xlcd.c: 94: DelayPORXLCD();
  6220  00720E  ECFF  F033         	call	_DelayPORXLCD	;wreg free
  6221                           
  6222                           ;xlcd.c: 96: WriteCmdXLCD(0x30);
  6223  007212  6E09               	movwf	??_OpenXLCD& (0+255),c
  6224  007214  0E30               	movlw	48
  6225  007216  6E04               	movwf	?_WriteCmdXLCD,c
  6226  007218  5009               	movf	??_OpenXLCD& (0+255),w,c
  6227  00721A  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  6228                           
  6229                           ;xlcd.c: 97: Delay10KTCYx(0x05);
  6230  00721E  6E09               	movwf	??_OpenXLCD& (0+255),c
  6231  007220  0E05               	movlw	5
  6232  007222  6E01               	movwf	?_Delay10KTCYx,c
  6233  007224  5009               	movf	??_OpenXLCD& (0+255),w,c
  6234  007226  EC3B  F034         	call	_Delay10KTCYx	;wreg free
  6235                           
  6236                           ;xlcd.c: 98: WriteCmdXLCD(0x30);
  6237  00722A  6E09               	movwf	??_OpenXLCD& (0+255),c
  6238  00722C  0E30               	movlw	48
  6239  00722E  6E04               	movwf	?_WriteCmdXLCD,c
  6240  007230  5009               	movf	??_OpenXLCD& (0+255),w,c
  6241  007232  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  6242                           
  6243                           ;xlcd.c: 99: Delay10KTCYx(0x01);
  6244  007236  6E09               	movwf	??_OpenXLCD& (0+255),c
  6245  007238  0E01               	movlw	1
  6246  00723A  6E01               	movwf	?_Delay10KTCYx,c
  6247  00723C  5009               	movf	??_OpenXLCD& (0+255),w,c
  6248  00723E  EC3B  F034         	call	_Delay10KTCYx	;wreg free
  6249                           
  6250                           ;xlcd.c: 100: WriteCmdXLCD(0x32);
  6251  007242  6E09               	movwf	??_OpenXLCD& (0+255),c
  6252  007244  0E32               	movlw	50
  6253  007246  6E04               	movwf	?_WriteCmdXLCD,c
  6254  007248  5009               	movf	??_OpenXLCD& (0+255),w,c
  6255  00724A  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  6256  00724E                     l2925:
  6257  00724E  ECAD  F034         	call	_BusyXLCD	;wreg free
  6258  007252  0900               	iorlw	0
  6259  007254  A4D8               	btfss	status,2,c
  6260  007256  D7FB               	goto	l2925
  6261  007258                     l2927:
  6262  007258  ECAD  F034         	call	_BusyXLCD	;wreg free
  6263  00725C  0900               	iorlw	0
  6264  00725E  A4D8               	btfss	status,2,c
  6265  007260  D7FB               	goto	l2927
  6266                           
  6267                           ;xlcd.c: 106: WriteCmdXLCD(lcdtype);
  6268  007262  C008  F004         	movff	OpenXLCD@lcdtype,?_WriteCmdXLCD
  6269  007266  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  6270  00726A                     l2931:
  6271  00726A  ECAD  F034         	call	_BusyXLCD	;wreg free
  6272  00726E  0900               	iorlw	0
  6273  007270  A4D8               	btfss	status,2,c
  6274  007272  D7FB               	goto	l2931
  6275                           
  6276                           ;xlcd.c: 110: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  6277  007274  6E09               	movwf	??_OpenXLCD& (0+255),c
  6278  007276  0E08               	movlw	8
  6279  007278  6E04               	movwf	?_WriteCmdXLCD,c
  6280  00727A  5009               	movf	??_OpenXLCD& (0+255),w,c
  6281  00727C  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  6282  007280                     l2935:
  6283  007280  ECAD  F034         	call	_BusyXLCD	;wreg free
  6284  007284  0900               	iorlw	0
  6285  007286  A4D8               	btfss	status,2,c
  6286  007288  D7FB               	goto	l2935
  6287                           
  6288                           ;xlcd.c: 112: WriteCmdXLCD(0b00001111);
  6289  00728A  6E09               	movwf	??_OpenXLCD& (0+255),c
  6290  00728C  0E0F               	movlw	15
  6291  00728E  6E04               	movwf	?_WriteCmdXLCD,c
  6292  007290  5009               	movf	??_OpenXLCD& (0+255),w,c
  6293  007292  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  6294  007296                     l2939:
  6295  007296  ECAD  F034         	call	_BusyXLCD	;wreg free
  6296  00729A  0900               	iorlw	0
  6297  00729C  A4D8               	btfss	status,2,c
  6298  00729E  D7FB               	goto	l2939
  6299                           
  6300                           ;xlcd.c: 116: WriteCmdXLCD(0x01);
  6301  0072A0  6E09               	movwf	??_OpenXLCD& (0+255),c
  6302  0072A2  0E01               	movlw	1
  6303  0072A4  6E04               	movwf	?_WriteCmdXLCD,c
  6304  0072A6  5009               	movf	??_OpenXLCD& (0+255),w,c
  6305  0072A8  EC7D  F034         	call	_WriteCmdXLCD	;wreg free
  6306  0072AC                     l2943:
  6307  0072AC  ECAD  F034         	call	_BusyXLCD	;wreg free
  6308  0072B0  0900               	iorlw	0
  6309  0072B2  A4D8               	btfss	status,2,c
  6310  0072B4  D7FB               	goto	l2943
  6311                           
  6312                           ;xlcd.c: 119: SetDDRamAddr(0x80);
  6313  0072B6  6E09               	movwf	??_OpenXLCD& (0+255),c
  6314  0072B8  0E80               	movlw	128
  6315  0072BA  6E04               	movwf	?_SetDDRamAddr,c
  6316  0072BC  5009               	movf	??_OpenXLCD& (0+255),w,c
  6317  0072BE  EC62  F036         	call	_SetDDRamAddr	;wreg free
  6318                           
  6319                           ;xlcd.c: 120: return;
  6320  0072C2  0012               	return	
  6321  0072C4                     __end_of_OpenXLCD:
  6322                           	opt stack 0
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           prodl	equ	0xFF3
  6328                           postinc0	equ	0xFEE
  6329                           wreg	equ	0xFE8
  6330                           indf1	equ	0xFE7
  6331                           postinc1	equ	0xFE6
  6332                           postdec1	equ	0xFE5
  6333                           fsr1h	equ	0xFE2
  6334                           fsr1l	equ	0xFE1
  6335                           indf2	equ	0xFDF
  6336                           postinc2	equ	0xFDE
  6337                           fsr2h	equ	0xFDA
  6338                           fsr2l	equ	0xFD9
  6339                           status	equ	0xFD8
  6340                           
  6341 ;; *************** function _BusyXLCD *****************
  6342 ;; Defined at:
  6343 ;;		line 23 in file "xlcd.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;		None
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;		None
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      unsigned char 
  6350 ;; Registers used:
  6351 ;;		wreg, status,2, status,0, cstack
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6357 ;;      Params:         0       0       0       0       0       0       0       0       0
  6358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6361 ;;Total ram usage:        0 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    2
  6364 ;; This function calls:
  6365 ;;		_DelayFor18TCY
  6366 ;; This function is called by:
  6367 ;;		_OpenXLCD
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text38
  6372  00695A                     __ptext38:
  6373                           	opt stack 0
  6374  00695A                     _BusyXLCD:
  6375                           	opt stack 26
  6376                           
  6377                           ;xlcd.c: 24: LATAbits.LATA1 = 1;
  6378                           
  6379                           ;incstack = 0
  6380                           ;incstack = 0
  6381  00695A  8289               	bsf	3977,1,c	;volatile
  6382                           
  6383                           ;xlcd.c: 25: LATAbits.LATA2 = 0;
  6384  00695C  9489               	bcf	3977,2,c	;volatile
  6385                           
  6386                           ;xlcd.c: 26: DelayFor18TCY();
  6387  00695E  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  6388                           
  6389                           ;xlcd.c: 27: LATAbits.LATA0 = 1;
  6390  006962  8089               	bsf	3977,0,c	;volatile
  6391                           
  6392                           ;xlcd.c: 28: DelayFor18TCY();
  6393  006964  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  6394                           
  6395                           ;xlcd.c: 30: if(PORTD&0x80)
  6396  006968  AE83               	btfss	3971,7,c	;volatile
  6397  00696A  D004               	goto	l393
  6398                           
  6399                           ;xlcd.c: 31: {
  6400                           ;xlcd.c: 32: LATAbits.LATA0 = 0;
  6401  00696C  9089               	bcf	3977,0,c	;volatile
  6402                           
  6403                           ;xlcd.c: 33: LATAbits.LATA1 = 0;
  6404  00696E  9289               	bcf	3977,1,c	;volatile
  6405                           
  6406                           ;xlcd.c: 34: return 1;
  6407  006970  0E01               	movlw	1
  6408  006972  D003               	goto	l394
  6409  006974                     l393:
  6410                           
  6411                           ;xlcd.c: 36: else
  6412                           ;xlcd.c: 37: {
  6413                           ;xlcd.c: 38: LATAbits.LATA0 = 0;
  6414  006974  9089               	bcf	3977,0,c	;volatile
  6415                           
  6416                           ;xlcd.c: 39: LATAbits.LATA1 = 0;
  6417  006976  9289               	bcf	3977,1,c	;volatile
  6418                           
  6419                           ;xlcd.c: 40: return 0;
  6420  006978  0E00               	movlw	0
  6421  00697A                     l394:
  6422  00697A  0012               	return	
  6423  00697C                     __end_of_BusyXLCD:
  6424                           	opt stack 0
  6425                           tblptru	equ	0xFF8
  6426                           tblptrh	equ	0xFF7
  6427                           tblptrl	equ	0xFF6
  6428                           tablat	equ	0xFF5
  6429                           prodl	equ	0xFF3
  6430                           postinc0	equ	0xFEE
  6431                           wreg	equ	0xFE8
  6432                           indf1	equ	0xFE7
  6433                           postinc1	equ	0xFE6
  6434                           postdec1	equ	0xFE5
  6435                           fsr1h	equ	0xFE2
  6436                           fsr1l	equ	0xFE1
  6437                           indf2	equ	0xFDF
  6438                           postinc2	equ	0xFDE
  6439                           fsr2h	equ	0xFDA
  6440                           fsr2l	equ	0xFD9
  6441                           status	equ	0xFD8
  6442                           
  6443 ;; *************** function _SetDDRamAddr *****************
  6444 ;; Defined at:
  6445 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\XLCD\setddram.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  DDaddr          1    3[COMRAM] unsigned char 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;		None               void
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0, cstack
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6459 ;;      Params:         1       0       0       0       0       0       0       0       0
  6460 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6461 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6462 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6463 ;;Total ram usage:        4 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    2
  6466 ;; This function calls:
  6467 ;;		_DelayFor18TCY
  6468 ;; This function is called by:
  6469 ;;		_main
  6470 ;;		_OpenXLCD
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text39
  6475  006CC4                     __ptext39:
  6476                           	opt stack 0
  6477  006CC4                     _SetDDRamAddr:
  6478                           	opt stack 27
  6479                           
  6480                           ;incstack = 0
  6481                           ;incstack = 0
  6482  006CC4  0EF0               	movlw	240
  6483  006CC6  1693               	andwf	3987,f,c	;volatile
  6484  006CC8  0EF0               	movlw	240
  6485  006CCA  1681               	andwf	3969,f,c	;volatile
  6486  006CCC  5004               	movf	SetDDRamAddr@DDaddr,w,c
  6487  006CCE  6E05               	movwf	??_SetDDRamAddr& (0+255),c
  6488  006CD0  6A06               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  6489  006CD2  0E80               	movlw	128
  6490  006CD4  1205               	iorwf	??_SetDDRamAddr,f,c
  6491  006CD6  0E00               	movlw	0
  6492  006CD8  1206               	iorwf	??_SetDDRamAddr+1,f,c
  6493  006CDA  0E04               	movlw	4
  6494  006CDC  6E07               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  6495  006CDE                     u1975:
  6496  006CDE  3406               	rlcf	??_SetDDRamAddr+1,w,c
  6497  006CE0  3206               	rrcf	??_SetDDRamAddr+1,f,c
  6498  006CE2  3205               	rrcf	??_SetDDRamAddr,f,c
  6499  006CE4  2E07               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  6500  006CE6  D7FB               	goto	u1975
  6501  006CE8  5005               	movf	??_SetDDRamAddr,w,c
  6502  006CEA  0B0F               	andlw	15
  6503  006CEC  1281               	iorwf	3969,f,c	;volatile
  6504  006CEE  9C8A               	bcf	3978,6,c	;volatile
  6505  006CF0  9A8A               	bcf	3978,5,c	;volatile
  6506  006CF2  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  6507  006CF6  888A               	bsf	3978,4,c	;volatile
  6508  006CF8  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  6509  006CFC  988A               	bcf	3978,4,c	;volatile
  6510  006CFE  0EF0               	movlw	240
  6511  006D00  1681               	andwf	3969,f,c	;volatile
  6512  006D02  5004               	movf	SetDDRamAddr@DDaddr,w,c
  6513  006D04  0B0F               	andlw	15
  6514  006D06  1281               	iorwf	3969,f,c	;volatile
  6515  006D08  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  6516  006D0C  888A               	bsf	3978,4,c	;volatile
  6517  006D0E  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  6518  006D12  988A               	bcf	3978,4,c	;volatile
  6519  006D14  0E0F               	movlw	15
  6520  006D16  1293               	iorwf	3987,f,c	;volatile
  6521  006D18  0012               	return	
  6522  006D1A                     __end_of_SetDDRamAddr:
  6523                           	opt stack 0
  6524                           tblptru	equ	0xFF8
  6525                           tblptrh	equ	0xFF7
  6526                           tblptrl	equ	0xFF6
  6527                           tablat	equ	0xFF5
  6528                           prodl	equ	0xFF3
  6529                           postinc0	equ	0xFEE
  6530                           wreg	equ	0xFE8
  6531                           indf1	equ	0xFE7
  6532                           postinc1	equ	0xFE6
  6533                           postdec1	equ	0xFE5
  6534                           fsr1h	equ	0xFE2
  6535                           fsr1l	equ	0xFE1
  6536                           indf2	equ	0xFDF
  6537                           postinc2	equ	0xFDE
  6538                           fsr2h	equ	0xFDA
  6539                           fsr2l	equ	0xFD9
  6540                           status	equ	0xFD8
  6541                           
  6542 ;; *************** function _WriteCmdXLCD *****************
  6543 ;; Defined at:
  6544 ;;		line 45 in file "xlcd.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  cmd             1    3[COMRAM] unsigned char 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;		None               void
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6558 ;;      Params:         1       0       0       0       0       0       0       0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6561 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6562 ;;Total ram usage:        1 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; Hardware stack levels required when called:    2
  6565 ;; This function calls:
  6566 ;;		_DelayFor18TCY
  6567 ;; This function is called by:
  6568 ;;		_main
  6569 ;;		_OpenXLCD
  6570 ;;		_Write_time_XLCD
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text40
  6575  0068FA                     __ptext40:
  6576                           	opt stack 0
  6577  0068FA                     _WriteCmdXLCD:
  6578                           	opt stack 26
  6579                           
  6580                           ;xlcd.c: 47: TRISD = 0;
  6581                           
  6582                           ;incstack = 0
  6583                           ;incstack = 0
  6584  0068FA  0E00               	movlw	0
  6585  0068FC  6E95               	movwf	3989,c	;volatile
  6586                           
  6587                           ;xlcd.c: 48: PORTD = cmd;
  6588  0068FE  C004  FF83         	movff	WriteCmdXLCD@cmd,3971	;volatile
  6589                           
  6590                           ;xlcd.c: 49: LATAbits.LATA1 = 0;
  6591  006902  9289               	bcf	3977,1,c	;volatile
  6592                           
  6593                           ;xlcd.c: 50: LATAbits.LATA2 = 0;
  6594  006904  9489               	bcf	3977,2,c	;volatile
  6595                           
  6596                           ;xlcd.c: 51: DelayFor18TCY();
  6597  006906  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  6598                           
  6599                           ;xlcd.c: 52: LATAbits.LATA0 = 1;
  6600  00690A  8089               	bsf	3977,0,c	;volatile
  6601                           
  6602                           ;xlcd.c: 53: DelayFor18TCY();
  6603  00690C  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  6604                           
  6605                           ;xlcd.c: 54: LATAbits.LATA0 = 0;
  6606  006910  9089               	bcf	3977,0,c	;volatile
  6607                           
  6608                           ;xlcd.c: 55: DelayFor18TCY();
  6609  006912  EC6D  F034         	call	_DelayFor18TCY	;wreg free
  6610                           
  6611                           ;xlcd.c: 56: TRISD = 0xff;
  6612  006916  6895               	setf	3989,c	;volatile
  6613                           
  6614                           ;xlcd.c: 59: return;
  6615  006918  0012               	return	
  6616  00691A                     __end_of_WriteCmdXLCD:
  6617                           	opt stack 0
  6618                           tblptru	equ	0xFF8
  6619                           tblptrh	equ	0xFF7
  6620                           tblptrl	equ	0xFF6
  6621                           tablat	equ	0xFF5
  6622                           prodl	equ	0xFF3
  6623                           postinc0	equ	0xFEE
  6624                           wreg	equ	0xFE8
  6625                           indf1	equ	0xFE7
  6626                           postinc1	equ	0xFE6
  6627                           postdec1	equ	0xFE5
  6628                           fsr1h	equ	0xFE2
  6629                           fsr1l	equ	0xFE1
  6630                           indf2	equ	0xFDF
  6631                           postinc2	equ	0xFDE
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636 ;; *************** function _DelayFor18TCY *****************
  6637 ;; Defined at:
  6638 ;;		line 46 in file "delay.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  i               1    2[COMRAM] unsigned char 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;		None               void
  6645 ;; Registers used:
  6646 ;;		wreg, status,2, status,0, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6652 ;;      Params:         0       0       0       0       0       0       0       0       0
  6653 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6654 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6655 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6656 ;;Total ram usage:        2 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    1
  6659 ;; This function calls:
  6660 ;;		_Delay10TCYx
  6661 ;; This function is called by:
  6662 ;;		_BusyXLCD
  6663 ;;		_WriteCmdXLCD
  6664 ;;		_WriteDataXLCD
  6665 ;;		_SetDDRamAddr
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text41
  6670  0068DA                     __ptext41:
  6671                           	opt stack 0
  6672  0068DA                     _DelayFor18TCY:
  6673                           	opt stack 26
  6674                           
  6675                           ;delay.c: 47: unsigned char i;
  6676                           ;delay.c: 48: for(i=0;i<10;i++)
  6677                           
  6678                           ;incstack = 0
  6679                           ;incstack = 0
  6680  0068DA  6E02               	movwf	??_DelayFor18TCY& (0+255),c
  6681  0068DC  0E00               	movlw	0
  6682  0068DE  6E03               	movwf	DelayFor18TCY@i,c
  6683  0068E0  5002               	movf	??_DelayFor18TCY& (0+255),w,c
  6684  0068E2  D007               	goto	L5
  6685  0068E4                     l2531:
  6686                           
  6687                           ;delay.c: 49: {
  6688                           ;delay.c: 50: Delay10TCYx(50);
  6689  0068E4  6E02               	movwf	??_DelayFor18TCY& (0+255),c
  6690  0068E6  0E32               	movlw	50
  6691  0068E8  6E01               	movwf	?_Delay10TCYx,c
  6692  0068EA  5002               	movf	??_DelayFor18TCY& (0+255),w,c
  6693  0068EC  EC06  F034         	call	_Delay10TCYx	;wreg free
  6694  0068F0  2A03               	incf	DelayFor18TCY@i,f,c
  6695  0068F2                     L5:
  6696  0068F2  0E09               	movlw	9
  6697  0068F4  6403               	cpfsgt	DelayFor18TCY@i,c
  6698  0068F6  D7F6               	goto	l2531
  6699  0068F8  0012               	return	
  6700  0068FA                     __end_of_DelayFor18TCY:
  6701                           	opt stack 0
  6702                           tblptru	equ	0xFF8
  6703                           tblptrh	equ	0xFF7
  6704                           tblptrl	equ	0xFF6
  6705                           tablat	equ	0xFF5
  6706                           prodl	equ	0xFF3
  6707                           postinc0	equ	0xFEE
  6708                           wreg	equ	0xFE8
  6709                           indf1	equ	0xFE7
  6710                           postinc1	equ	0xFE6
  6711                           postdec1	equ	0xFE5
  6712                           fsr1h	equ	0xFE2
  6713                           fsr1l	equ	0xFE1
  6714                           indf2	equ	0xFDF
  6715                           postinc2	equ	0xFDE
  6716                           fsr2h	equ	0xFDA
  6717                           fsr2l	equ	0xFD9
  6718                           status	equ	0xFD8
  6719                           
  6720 ;; *************** function _Delay10TCYx *****************
  6721 ;; Defined at:
  6722 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\d10tcyx.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  unit            1    0[COMRAM] unsigned char 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;		None               void
  6729 ;; Registers used:
  6730 ;;		wreg
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6736 ;;      Params:         1       0       0       0       0       0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6739 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6740 ;;Total ram usage:        1 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_DelayFor18TCY
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           	psect	text42
  6750  00680C                     __ptext42:
  6751                           	opt stack 0
  6752  00680C                     _Delay10TCYx:
  6753                           	opt stack 26
  6754  00680C                     l840:
  6755  00680C  0E03               	movlw	3
  6756  00680E                     u2867:
  6757  00680E  2EE8               	decfsz	wreg,f,c
  6758  006810  D7FE               	goto	u2867
  6759  006812  F000               	nop	
  6760  006814  2E01               	decfsz	Delay10TCYx@unit,f,c
  6761  006816  D7FA               	goto	l840
  6762  006818  0012               	return	
  6763  00681A                     __end_of_Delay10TCYx:
  6764                           	opt stack 0
  6765                           tblptru	equ	0xFF8
  6766                           tblptrh	equ	0xFF7
  6767                           tblptrl	equ	0xFF6
  6768                           tablat	equ	0xFF5
  6769                           prodl	equ	0xFF3
  6770                           postinc0	equ	0xFEE
  6771                           wreg	equ	0xFE8
  6772                           indf1	equ	0xFE7
  6773                           postinc1	equ	0xFE6
  6774                           postdec1	equ	0xFE5
  6775                           fsr1h	equ	0xFE2
  6776                           fsr1l	equ	0xFE1
  6777                           indf2	equ	0xFDF
  6778                           postinc2	equ	0xFDE
  6779                           fsr2h	equ	0xFDA
  6780                           fsr2l	equ	0xFD9
  6781                           status	equ	0xFD8
  6782                           
  6783 ;; *************** function _Delay10KTCYx *****************
  6784 ;; Defined at:
  6785 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\d10ktcyx.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  unit            1    0[COMRAM] unsigned char 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;		None
  6790 ;; Return value:  Size  Location     Type
  6791 ;;		None               void
  6792 ;; Registers used:
  6793 ;;		wreg
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6799 ;;      Params:         1       0       0       0       0       0       0       0       0
  6800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6801 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6802 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6803 ;;Total ram usage:        2 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; This function calls:
  6806 ;;		Nothing
  6807 ;; This function is called by:
  6808 ;;		_OpenXLCD
  6809 ;;		_Delay_s_
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text43
  6814  006876                     __ptext43:
  6815                           	opt stack 0
  6816  006876                     _Delay10KTCYx:
  6817                           	opt stack 28
  6818  006876                     l833:
  6819  006876  0E0D               	movlw	13
  6820  006878  6E02               	movwf	??_Delay10KTCYx& (0+255),c
  6821  00687A  0EFB               	movlw	251
  6822  00687C                     u2877:
  6823  00687C  2EE8               	decfsz	wreg,f,c
  6824  00687E  D7FE               	goto	u2877
  6825  006880  2E02               	decfsz	??_Delay10KTCYx& (0+255),f,c
  6826  006882  D7FC               	goto	u2877
  6827  006884  D000               	nop2	
  6828  006886  2E01               	decfsz	Delay10KTCYx@unit,f,c
  6829  006888  D7F6               	goto	l833
  6830  00688A  0012               	return	
  6831  00688C                     __end_of_Delay10KTCYx:
  6832                           	opt stack 0
  6833                           tblptru	equ	0xFF8
  6834                           tblptrh	equ	0xFF7
  6835                           tblptrl	equ	0xFF6
  6836                           tablat	equ	0xFF5
  6837                           prodl	equ	0xFF3
  6838                           postinc0	equ	0xFEE
  6839                           wreg	equ	0xFE8
  6840                           indf1	equ	0xFE7
  6841                           postinc1	equ	0xFE6
  6842                           postdec1	equ	0xFE5
  6843                           fsr1h	equ	0xFE2
  6844                           fsr1l	equ	0xFE1
  6845                           indf2	equ	0xFDF
  6846                           postinc2	equ	0xFDE
  6847                           fsr2h	equ	0xFDA
  6848                           fsr2l	equ	0xFD9
  6849                           status	equ	0xFD8
  6850                           
  6851 ;; *************** function _DelayPORXLCD *****************
  6852 ;; Defined at:
  6853 ;;		line 54 in file "delay.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;		None               void
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6867 ;;      Params:         0       0       0       0       0       0       0       0       0
  6868 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6869 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6870 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6871 ;;Total ram usage:        1 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    1
  6874 ;; This function calls:
  6875 ;;		_Delay1KTCYx
  6876 ;; This function is called by:
  6877 ;;		_OpenXLCD
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text44
  6882  0067FE                     __ptext44:
  6883                           	opt stack 0
  6884  0067FE                     _DelayPORXLCD:
  6885                           	opt stack 27
  6886                           
  6887                           ;delay.c: 55: Delay1KTCYx(75);
  6888                           
  6889                           ;incstack = 0
  6890                           ;incstack = 0
  6891  0067FE  6E02               	movwf	??_DelayPORXLCD& (0+255),c
  6892  006800  0E4B               	movlw	75
  6893  006802  6E01               	movwf	?_Delay1KTCYx,c
  6894  006804  5002               	movf	??_DelayPORXLCD& (0+255),w,c
  6895  006806  EC14  F034         	call	_Delay1KTCYx	;wreg free
  6896                           
  6897                           ;delay.c: 58: return;
  6898  00680A  0012               	return	
  6899  00680C                     __end_of_DelayPORXLCD:
  6900                           	opt stack 0
  6901                           tblptru	equ	0xFF8
  6902                           tblptrh	equ	0xFF7
  6903                           tblptrl	equ	0xFF6
  6904                           tablat	equ	0xFF5
  6905                           prodl	equ	0xFF3
  6906                           postinc0	equ	0xFEE
  6907                           wreg	equ	0xFE8
  6908                           indf1	equ	0xFE7
  6909                           postinc1	equ	0xFE6
  6910                           postdec1	equ	0xFE5
  6911                           fsr1h	equ	0xFE2
  6912                           fsr1l	equ	0xFE1
  6913                           indf2	equ	0xFDF
  6914                           postinc2	equ	0xFDE
  6915                           fsr2h	equ	0xFDA
  6916                           fsr2l	equ	0xFD9
  6917                           status	equ	0xFD8
  6918                           
  6919 ;; *************** function _UsartConfig *****************
  6920 ;; Defined at:
  6921 ;;		line 22 in file "uart.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  config1         1    3[COMRAM] unsigned char 
  6924 ;;  config2         1    4[COMRAM] unsigned char 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;		None               void
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6936 ;;      Params:         2       0       0       0       0       0       0       0       0
  6937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6939 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6940 ;;Total ram usage:        2 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    1
  6943 ;; This function calls:
  6944 ;;		_OpenUSART
  6945 ;; This function is called by:
  6946 ;;		_main
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           	psect	text45
  6951  006852                     __ptext45:
  6952                           	opt stack 0
  6953  006852                     _UsartConfig:
  6954                           	opt stack 28
  6955                           
  6956                           ;uart.c: 23: OpenUSART( config1, config2);
  6957                           
  6958                           ;incstack = 0
  6959                           ;incstack = 0
  6960  006852  C004  F001         	movff	UsartConfig@config1,?_OpenUSART
  6961  006856  C005  F002         	movff	UsartConfig@config2,?_OpenUSART+1
  6962  00685A  6A03               	clrf	?_OpenUSART+2,c
  6963  00685C  EC11  F037         	call	_OpenUSART	;wreg free
  6964  006860  0012               	return	
  6965  006862                     __end_of_UsartConfig:
  6966                           	opt stack 0
  6967                           tblptru	equ	0xFF8
  6968                           tblptrh	equ	0xFF7
  6969                           tblptrl	equ	0xFF6
  6970                           tablat	equ	0xFF5
  6971                           prodl	equ	0xFF3
  6972                           postinc0	equ	0xFEE
  6973                           wreg	equ	0xFE8
  6974                           indf1	equ	0xFE7
  6975                           postinc1	equ	0xFE6
  6976                           postdec1	equ	0xFE5
  6977                           fsr1h	equ	0xFE2
  6978                           fsr1l	equ	0xFE1
  6979                           indf2	equ	0xFDF
  6980                           postinc2	equ	0xFDE
  6981                           fsr2h	equ	0xFDA
  6982                           fsr2l	equ	0xFD9
  6983                           status	equ	0xFD8
  6984                           
  6985 ;; *************** function _OpenUSART *****************
  6986 ;; Defined at:
  6987 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  config          1    0[COMRAM] unsigned char 
  6990 ;;  spbrg           2    1[COMRAM] unsigned int 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;		None               void
  6995 ;; Registers used:
  6996 ;;		wreg, status,2
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7002 ;;      Params:         3       0       0       0       0       0       0       0       0
  7003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7005 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7006 ;;Total ram usage:        3 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; This function calls:
  7009 ;;		Nothing
  7010 ;; This function is called by:
  7011 ;;		_UsartConfig
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text46
  7016  006E22                     __ptext46:
  7017                           	opt stack 0
  7018  006E22                     _OpenUSART:
  7019                           	opt stack 28
  7020                           
  7021                           ;incstack = 0
  7022                           ;incstack = 0
  7023  006E22  0E00               	movlw	0
  7024  006E24  6EAC               	movwf	4012,c	;volatile
  7025  006E26  0E00               	movlw	0
  7026  006E28  6EAB               	movwf	4011,c	;volatile
  7027  006E2A  B001               	btfsc	OpenUSART@config,0,c
  7028  006E2C  88AC               	bsf	4012,4,c	;volatile
  7029  006E2E  A201               	btfss	OpenUSART@config,1,c
  7030  006E30  D002               	goto	l499
  7031  006E32  8CAC               	bsf	4012,6,c	;volatile
  7032  006E34  8CAB               	bsf	4011,6,c	;volatile
  7033  006E36                     l499:
  7034  006E36  B401               	btfsc	OpenUSART@config,2,c
  7035  006E38  8EAC               	bsf	4012,7,c	;volatile
  7036  006E3A  A601               	btfss	OpenUSART@config,3,c
  7037  006E3C  D002               	goto	l501
  7038  006E3E  88AB               	bsf	4011,4,c	;volatile
  7039  006E40  D001               	goto	l502
  7040  006E42                     l501:
  7041  006E42  8AAB               	bsf	4011,5,c	;volatile
  7042  006E44                     l502:
  7043  006E44  B801               	btfsc	OpenUSART@config,4,c
  7044  006E46  84AC               	bsf	4012,2,c	;volatile
  7045  006E48  989E               	bcf	3998,4,c	;volatile
  7046  006E4A  BA01               	btfsc	OpenUSART@config,5,c
  7047  006E4C  86AB               	bsf	4011,3,c	;volatile
  7048  006E4E  AC01               	btfss	OpenUSART@config,6,c
  7049  006E50  D002               	goto	l505
  7050  006E52  8A9D               	bsf	3997,5,c	;volatile
  7051  006E54  D001               	goto	l506
  7052  006E56                     l505:
  7053  006E56  9A9D               	bcf	3997,5,c	;volatile
  7054  006E58                     l506:
  7055  006E58  9A9E               	bcf	3998,5,c	;volatile
  7056  006E5A  AE01               	btfss	OpenUSART@config,7,c
  7057  006E5C  D002               	goto	l507
  7058  006E5E  889D               	bsf	3997,4,c	;volatile
  7059  006E60  D001               	goto	l508
  7060  006E62                     l507:
  7061  006E62  989D               	bcf	3997,4,c	;volatile
  7062  006E64                     l508:
  7063  006E64  C002  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  7064  006E68  5003               	movf	OpenUSART@spbrg+1,w,c
  7065  006E6A  6EB0               	movwf	4016,c	;volatile
  7066  006E6C  8AAC               	bsf	4012,5,c	;volatile
  7067  006E6E  8EAB               	bsf	4011,7,c	;volatile
  7068  006E70  9C94               	bcf	3988,6,c	;volatile
  7069  006E72  8E94               	bsf	3988,7,c	;volatile
  7070  006E74  B8AC               	btfsc	4012,4,c	;volatile
  7071  006E76  BEAC               	btfsc	4012,7,c	;volatile
  7072  006E78  D001               	goto	l510
  7073  006E7A  8C94               	bsf	3988,6,c	;volatile
  7074  006E7C                     l510:
  7075  006E7C  0012               	return	
  7076  006E7E                     __end_of_OpenUSART:
  7077                           	opt stack 0
  7078                           tblptru	equ	0xFF8
  7079                           tblptrh	equ	0xFF7
  7080                           tblptrl	equ	0xFF6
  7081                           tablat	equ	0xFF5
  7082                           prodl	equ	0xFF3
  7083                           postinc0	equ	0xFEE
  7084                           wreg	equ	0xFE8
  7085                           indf1	equ	0xFE7
  7086                           postinc1	equ	0xFE6
  7087                           postdec1	equ	0xFE5
  7088                           fsr1h	equ	0xFE2
  7089                           fsr1l	equ	0xFE1
  7090                           indf2	equ	0xFDF
  7091                           postinc2	equ	0xFDE
  7092                           fsr2h	equ	0xFDA
  7093                           fsr2l	equ	0xFD9
  7094                           status	equ	0xFD8
  7095                           
  7096 ;; *************** function _IdleI2C *****************
  7097 ;; Defined at:
  7098 ;;		line 25 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c_idle.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;		None
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;		None
  7103 ;; Return value:  Size  Location     Type
  7104 ;;		None               void
  7105 ;; Registers used:
  7106 ;;		wreg, status,2, status,0
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7112 ;;      Params:         0       0       0       0       0       0       0       0       0
  7113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7115 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7116 ;;Total ram usage:        0 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_Read_time
  7122 ;;		_WriteI2C
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           	psect	text47
  7127  0067F2                     __ptext47:
  7128                           	opt stack 0
  7129  0067F2                     _IdleI2C:
  7130                           	opt stack 28
  7131  0067F2                     l2365:
  7132  0067F2  50C5               	movf	4037,w,c	;volatile
  7133  0067F4  0B1F               	andlw	31
  7134  0067F6  B4D8               	btfsc	status,2,c
  7135  0067F8  B4C7               	btfsc	4039,2,c	;volatile
  7136  0067FA  D7FB               	goto	l2365
  7137  0067FC  0012               	return	
  7138  0067FE                     __end_of_IdleI2C:
  7139                           	opt stack 0
  7140                           tblptru	equ	0xFF8
  7141                           tblptrh	equ	0xFF7
  7142                           tblptrl	equ	0xFF6
  7143                           tablat	equ	0xFF5
  7144                           prodl	equ	0xFF3
  7145                           postinc0	equ	0xFEE
  7146                           wreg	equ	0xFE8
  7147                           indf1	equ	0xFE7
  7148                           postinc1	equ	0xFE6
  7149                           postdec1	equ	0xFE5
  7150                           fsr1h	equ	0xFE2
  7151                           fsr1l	equ	0xFE1
  7152                           indf2	equ	0xFDF
  7153                           postinc2	equ	0xFDE
  7154                           fsr2h	equ	0xFDA
  7155                           fsr2l	equ	0xFD9
  7156                           status	equ	0xFD8
  7157                           
  7158 ;; *************** function _ReadI2C *****************
  7159 ;; Defined at:
  7160 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c_read.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      unsigned char 
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7174 ;;      Params:         0       0       0       0       0       0       0       0       0
  7175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7178 ;;Total ram usage:        0 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; This function calls:
  7181 ;;		Nothing
  7182 ;; This function is called by:
  7183 ;;		_Read
  7184 ;;		_Read_From_Addr
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text48
  7189  0068A2                     __ptext48:
  7190                           	opt stack 0
  7191  0068A2                     _ReadI2C:
  7192                           	opt stack 26
  7193                           
  7194                           ;incstack = 0
  7195                           ;incstack = 0
  7196  0068A2  50C6               	movf	4038,w,c	;volatile
  7197  0068A4  0B0F               	andlw	15
  7198  0068A6  0A08               	xorlw	8
  7199  0068A8  B4D8               	btfsc	status,2,c
  7200  0068AA  D004               	goto	l584
  7201  0068AC  50C6               	movf	4038,w,c	;volatile
  7202  0068AE  0B0F               	andlw	15
  7203  0068B0  0A0B               	xorlw	11
  7204  0068B2  B4D8               	btfsc	status,2,c
  7205  0068B4                     l584:
  7206  0068B4  86C5               	bsf	4037,3,c	;volatile
  7207  0068B6                     l585:
  7208  0068B6  A0C7               	btfss	4039,0,c	;volatile
  7209  0068B8  D7FE               	goto	l585
  7210  0068BA  50C9               	movf	4041,w,c	;volatile
  7211  0068BC  0012               	return	
  7212  0068BE                     __end_of_ReadI2C:
  7213                           	opt stack 0
  7214                           tblptru	equ	0xFF8
  7215                           tblptrh	equ	0xFF7
  7216                           tblptrl	equ	0xFF6
  7217                           tablat	equ	0xFF5
  7218                           prodl	equ	0xFF3
  7219                           postinc0	equ	0xFEE
  7220                           wreg	equ	0xFE8
  7221                           indf1	equ	0xFE7
  7222                           postinc1	equ	0xFE6
  7223                           postdec1	equ	0xFE5
  7224                           fsr1h	equ	0xFE2
  7225                           fsr1l	equ	0xFE1
  7226                           indf2	equ	0xFDF
  7227                           postinc2	equ	0xFDE
  7228                           fsr2h	equ	0xFDA
  7229                           fsr2l	equ	0xFD9
  7230                           status	equ	0xFD8
  7231                           
  7232 ;; *************** function _WriteI2C *****************
  7233 ;; Defined at:
  7234 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\i2c\i2c_writ.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  data_out        1    0[COMRAM] unsigned char 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;		None
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  1    wreg      char 
  7241 ;; Registers used:
  7242 ;;		wreg, status,2, status,0, cstack
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7248 ;;      Params:         1       0       0       0       0       0       0       0       0
  7249 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7251 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7252 ;;Total ram usage:        1 bytes
  7253 ;; Hardware stack levels used:    1
  7254 ;; Hardware stack levels required when called:    1
  7255 ;; This function calls:
  7256 ;;		_IdleI2C
  7257 ;; This function is called by:
  7258 ;;		_Write_I2C
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text49
  7263  006AF6                     __ptext49:
  7264                           	opt stack 0
  7265  006AF6                     _WriteI2C:
  7266                           	opt stack 26
  7267                           
  7268                           ;incstack = 0
  7269                           ;incstack = 0
  7270  006AF6  C001  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  7271  006AFA  BEC6               	btfsc	4038,7,c	;volatile
  7272  006AFC  D020               	goto	l606
  7273                           
  7274                           ;	Return value of _WriteI2C is never used
  7275  006AFE  50C6               	movf	4038,w,c	;volatile
  7276  006B00  0B0F               	andlw	15
  7277  006B02  0A08               	xorlw	8
  7278  006B04  B4D8               	btfsc	status,2,c
  7279  006B06  D00C               	goto	l2495
  7280  006B08  50C6               	movf	4038,w,c	;volatile
  7281  006B0A  0B0F               	andlw	15
  7282  006B0C  0A0B               	xorlw	11
  7283  006B0E  B4D8               	btfsc	status,2,c
  7284  006B10  D007               	goto	l2495
  7285  006B12  88C6               	bsf	4038,4,c	;volatile
  7286  006B14                     l609:
  7287  006B14  A69E               	btfss	3998,3,c	;volatile
  7288  006B16  D7FE               	goto	l609
  7289  006B18  B4C7               	btfsc	4039,2,c	;volatile
  7290  006B1A  D011               	goto	l606
  7291  006B1C  50C7               	movf	4039,w,c	;volatile
  7292  006B1E  D00F               	goto	l606
  7293  006B20                     l2495:
  7294  006B20  50C6               	movf	4038,w,c	;volatile
  7295  006B22  0B0F               	andlw	15
  7296  006B24  0A08               	xorlw	8
  7297  006B26  B4D8               	btfsc	status,2,c
  7298  006B28  D005               	goto	l618
  7299  006B2A  50C6               	movf	4038,w,c	;volatile
  7300  006B2C  0B0F               	andlw	15
  7301  006B2E  0A0B               	xorlw	11
  7302  006B30  A4D8               	btfss	status,2,c
  7303  006B32  D005               	goto	l606
  7304  006B34                     l618:
  7305  006B34  B0C7               	btfsc	4039,0,c	;volatile
  7306  006B36  D7FE               	goto	l618
  7307  006B38  ECF9  F033         	call	_IdleI2C	;wreg free
  7308  006B3C  50C5               	movf	4037,w,c	;volatile
  7309  006B3E                     l606:
  7310  006B3E  0012               	return	
  7311  006B40                     __end_of_WriteI2C:
  7312                           	opt stack 0
  7313  0000                     tblptru	equ	0xFF8
  7314                           tblptrh	equ	0xFF7
  7315                           tblptrl	equ	0xFF6
  7316                           tablat	equ	0xFF5
  7317                           prodl	equ	0xFF3
  7318                           postinc0	equ	0xFEE
  7319                           wreg	equ	0xFE8
  7320                           indf1	equ	0xFE7
  7321                           postinc1	equ	0xFE6
  7322                           postdec1	equ	0xFE5
  7323                           fsr1h	equ	0xFE2
  7324                           fsr1l	equ	0xFE1
  7325                           indf2	equ	0xFDF
  7326                           postinc2	equ	0xFDE
  7327                           fsr2h	equ	0xFDA
  7328                           fsr2l	equ	0xFD9
  7329                           status	equ	0xFD8
  7330                           tblptru	equ	0xFF8
  7331                           tblptrh	equ	0xFF7
  7332                           tblptrl	equ	0xFF6
  7333                           tablat	equ	0xFF5
  7334                           prodl	equ	0xFF3
  7335                           postinc0	equ	0xFEE
  7336                           wreg	equ	0xFE8
  7337                           indf1	equ	0xFE7
  7338                           postinc1	equ	0xFE6
  7339                           postdec1	equ	0xFE5
  7340                           fsr1h	equ	0xFE2
  7341                           fsr1l	equ	0xFE1
  7342                           indf2	equ	0xFDF
  7343                           postinc2	equ	0xFDE
  7344                           fsr2h	equ	0xFDA
  7345                           fsr2l	equ	0xFD9
  7346                           status	equ	0xFD8
  7347                           
  7348                           	psect	rparam
  7349  0000                     tblptru	equ	0xFF8
  7350                           tblptrh	equ	0xFF7
  7351                           tblptrl	equ	0xFF6
  7352                           tablat	equ	0xFF5
  7353                           prodl	equ	0xFF3
  7354                           postinc0	equ	0xFEE
  7355                           wreg	equ	0xFE8
  7356                           indf1	equ	0xFE7
  7357                           postinc1	equ	0xFE6
  7358                           postdec1	equ	0xFE5
  7359                           fsr1h	equ	0xFE2
  7360                           fsr1l	equ	0xFE1
  7361                           indf2	equ	0xFDF
  7362                           postinc2	equ	0xFDE
  7363                           fsr2h	equ	0xFDA
  7364                           fsr2l	equ	0xFD9
  7365                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        349
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    146     160
    BANK1           256      0     245
    BANK2           256      0     104
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?_strcmp	int  size(2) Largest target is 0

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> Get_data@s_6(BANK0[3]), Get_data@s_5(BANK0[3]), Get_data@s_4(BANK0[3]), Get_data@s_3(BANK0[3]), 
		 -> Get_data@s_2(BANK0[3]), Get_data@s_1(BANK0[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 11
		 -> str(BANK0[11]), 

    Read_string@buffer	PTR unsigned char  size(2) Largest target is 11
		 -> str(BANK0[11]), 

    Write_str@c	PTR unsigned char  size(2) Largest target is 67
		 -> Get_data@error(BANK0[18]), Get_data@str8(BANK0[14]), Get_data@str2(BANK0[19]), Set_date@error(COMRAM[18]), 
		 -> Set_date@str6(COMRAM[30]), Set_day@str5(COMRAM[67]), Set_day@error(COMRAM[18]), str(BANK0[11]), 
		 -> Set_time@error(COMRAM[18]), Set_time@str3(COMRAM[37]), time(BANK0[2]), main@str8(BANK0[29]), 
		 -> main@str7(BANK0[35]), 

    Write_time_XLCD@str	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_year@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_month@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_date@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Write_ARR@c	PTR unsigned char  size(2) Largest target is 4
		 -> write_DAY@day_7(COMRAM[4]), write_DAY@day_6(COMRAM[4]), write_DAY@day_5(COMRAM[4]), write_DAY@day_4(COMRAM[4]), 
		 -> write_DAY@day_3(COMRAM[4]), write_DAY@day_2(COMRAM[4]), write_DAY@day_1(COMRAM[4]), 

    Write_ARR@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_hour@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_min@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_sec@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Set_date@year	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@year(BANK0[1]), 

    Set_date@month	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@month(BANK0[1]), 

    Set_date@date	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@date(BANK0[1]), 

    Set_time@hour	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@h(BANK0[1]), 

    Set_time@min	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@m(BANK0[1]), 

    Set_time@sec	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@s(BANK0[1]), 

    Clear_array@e	PTR unsigned char  size(2) Largest target is 11
		 -> str(BANK0[11]), time(BANK0[2]), 

    BCD_format@str	PTR unsigned char  size(2) Largest target is 11
		 -> str(BANK0[11]), 


Critical Paths under _main in COMRAM

    _Write_time_XLCD->_WriteCmdXLCD
    _Write_time_XLCD->_WriteDataXLCD
    _WriteDataXLCD->_DelayFor18TCY
    _Read_time->_Read_hour
    _Read_year->_Read
    _Read_month->_Read
    _Read_date->_Read
    _Read_day->_Read
    _write_DAY->_Write_ARR
    _Read_hour->_Read
    _Read_min->_Read
    _Read_sec->_Read
    _Read->_delay_ms
    _delay_us->_Delay1KTCYx
    _Get_data->_Set_day
    _Write_time->_delay_ms
    _Write_time_->_delay_ms
    _Write_I2C->_write_DAY
    _delay_ms->_write_DAY
    _Set_date->_Read_string
    _Set_day->_Read_string
    _Set_time->_Read_string
    _Read_string->_Write
    _Write_str->_Write
    _Read_char->_Write
    _Write->_WriteUSART
    _OpenXLCD->_SetDDRamAddr
    _BusyXLCD->_DelayFor18TCY
    _SetDDRamAddr->_DelayFor18TCY
    _WriteCmdXLCD->_DelayFor18TCY
    _DelayFor18TCY->_Delay10TCYx
    _DelayPORXLCD->_Delay1KTCYx
    _UsartConfig->_OpenUSART

Critical Paths under _main in BANK0

    _main->_Get_data

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0    8682
                                             78 BANK0     68    68      0
                           _delay_ms
                        _UsartConfig
                           _OpenXLCD
                       _WriteCmdXLCD
                          _Write_str
                          _Read_char
                           _Get_data
                       _SetDDRamAddr
                          _Read_time
                    _Write_time_XLCD
 ---------------------------------------------------------------------------------
 (1) _Write_time_XLCD                                      4     2      2     275
                                              4 COMRAM     4     2      2
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     0      1      90
                                              3 COMRAM     1     0      1
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _Read_time                                            3     2      1    2686
                                             45 COMRAM     3     2      1
                           _delay_ms
                           _delay_us
                        _Clear_array
                           _Read_sec
                           _Read_min
                          _Read_hour
                           _Read_day
                          _Read_date
                         _Read_month
                          _Read_year
                          _Write_I2C
                            _OpenI2C
                           _CloseI2C
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (2) _Read_year                                            3     1      2     298
                                             38 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_month                                           3     1      2     275
                                             38 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_date                                            3     1      2     298
                                             38 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_day                                             0     0      0     472
                               _Read
                          _write_DAY
 ---------------------------------------------------------------------------------
 (3) _write_DAY                                           29    28      1     333
                                              4 COMRAM    29    28      1
                        _Delay1KTCYx (ARG)
                          _Write_ARR
                            _ReadBUF (ARG)
                           _WriteI2C (ARG)
                            _ReadI2C (ARG)
 ---------------------------------------------------------------------------------
 (4) _Write_ARR                                            4     0      4     136
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _Read_hour                                            7     4      3     476
                                             38 COMRAM     7     4      3
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_min                                             3     1      2     275
                                             38 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_sec                                             3     1      2     275
                                             38 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (3) _Read                                                 2     2      0     139
                                             36 COMRAM     2     2      0
                           _delay_ms
                          _write_DAY (ARG)
                            _ReadBUF
                          _Write_I2C
                            _ReadI2C
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             3     2      1      68
                                              1 COMRAM     3     2      1
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (1) _Get_data                                            78    78      0    4354
                                              0 BANK0     78    78      0
                          _Write_str
                           _Set_time
                        _Read_string
                            _Set_day
                           _Set_date
                             _strcmp
                        _Write_time_
                         _Write_time
 ---------------------------------------------------------------------------------
 (2) _Write_time                                           5     1      4     204
                                             36 COMRAM     5     1      4
                           _delay_ms
                            _ReadBUF
                          _Write_I2C
                           _CloseI2C
 ---------------------------------------------------------------------------------
 (2) _CloseI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Write_time_                                          5     2      3     226
                                             36 COMRAM     5     2      3
                           _delay_ms
                            _ReadBUF
                          _Write_I2C
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     0      2      44
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Write_I2C                                            1     0      1      46
                                             33 COMRAM     1     0      1
                          _write_DAY (ARG)
                            _ReadBUF
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _ReadBUF                                              1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             3     2      1      68
                                             33 COMRAM     3     2      1
                        _Delay1KTCYx
                          _write_DAY (ARG)
 ---------------------------------------------------------------------------------
 (5) _Delay1KTCYx                                          1     0      1      22
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     2      4      91
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Set_date                                            58    52      6     897
                                              8 COMRAM    58    52      6
                          _Write_str
                         _BCD_format
                         _BCD_to_DEC
                        _Read_string
 ---------------------------------------------------------------------------------
 (2) _Set_day                                             87    87      0     612
                                              8 COMRAM    87    87      0
                          _Write_str
                         _BCD_format
                        _Clear_array
                        _Read_string
 ---------------------------------------------------------------------------------
 (2) _Clear_array                                          5     2      3      69
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _Set_time                                            69    62      7    1303
                                              8 COMRAM    69    62      7
                          _Write_str
                         _BCD_format
                         _BCD_to_DEC
                        _Read_string
 ---------------------------------------------------------------------------------
 (3) _Read_string                                          6     3      3     203
                                              2 COMRAM     6     3      3
                              _Write
                         _WriteUSART
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (3) _BCD_to_DEC                                           2     1      1      44
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _BCD_format                                           4     2      2      68
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _Write_str                                            3     1      2     111
                                              2 COMRAM     3     1      2
                              _Write
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (1) _Read_char                                            2     2      0     112
                                              2 COMRAM     2     2      0
                              _Write
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (4) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Write                                                1     0      1      44
                                              1 COMRAM     1     0      1
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (4) _WriteUSART                                           1     0      1      22
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             2     1      1     336
                                              7 COMRAM     2     1      1
                       _DelayPORXLCD
                       _Delay10KTCYx
                       _WriteCmdXLCD
                       _SetDDRamAddr
                           _BusyXLCD
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0      68
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _SetDDRamAddr                                         4     3      1     112
                                              3 COMRAM     4     3      1
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     0      1      90
                                              3 COMRAM     1     0      1
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        2     2      0      68
                                              1 COMRAM     2     2      0
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     0      1      22
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     1      1      22
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0      22
                                              1 COMRAM     1     1      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (1) _UsartConfig                                          2     0      2     264
                                              3 COMRAM     2     0      2
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     0      3     220
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     0      1      22
                                              0 COMRAM     1     0      1
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
     _Delay1KTCYx
     _write_DAY (ARG)
       _Delay1KTCYx (ARG)
       _Write_ARR (ARG)
       _ReadBUF (ARG)
       _WriteI2C (ARG)
         _IdleI2C
       _ReadI2C (ARG)
   _UsartConfig
     _OpenUSART
   _OpenXLCD
     _DelayPORXLCD
       _Delay1KTCYx
     _Delay10KTCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _WriteCmdXLCD
     _DelayFor18TCY
       _Delay10TCYx
   _Write_str
     _Write
       _WriteUSART
     _WriteUSART
   _Read_char
     _Write
       _WriteUSART
     _ReadUSART
   _Get_data
     _Write_str
       _Write
         _WriteUSART
       _WriteUSART
     _Set_time
       _Write_str
         _Write
           _WriteUSART
         _WriteUSART
       _BCD_format
       _BCD_to_DEC
       _Read_string
         _Write
           _WriteUSART
         _WriteUSART
         _ReadUSART
     _Read_string
       _Write
         _WriteUSART
       _WriteUSART
       _ReadUSART
     _Set_day
       _Write_str
         _Write
           _WriteUSART
         _WriteUSART
       _BCD_format
       _Clear_array
       _Read_string
         _Write
           _WriteUSART
         _WriteUSART
         _ReadUSART
     _Set_date
       _Write_str
         _Write
           _WriteUSART
         _WriteUSART
       _BCD_format
       _BCD_to_DEC
       _Read_string
         _Write
           _WriteUSART
         _WriteUSART
         _ReadUSART
     _strcmp
     _Write_time_
       _delay_ms
         _Delay1KTCYx
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
       _ReadBUF
       _Write_I2C
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
         _ReadBUF (ARG)
         _WriteI2C (ARG)
           _IdleI2C
       _OpenI2C
     _Write_time
       _delay_ms
         _Delay1KTCYx
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
       _ReadBUF
       _Write_I2C
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
         _ReadBUF (ARG)
         _WriteI2C (ARG)
           _IdleI2C
       _CloseI2C
   _SetDDRamAddr
     _DelayFor18TCY
       _Delay10TCYx
   _Read_time
     _delay_ms
       _Delay1KTCYx
       _write_DAY (ARG)
         _Delay1KTCYx (ARG)
         _Write_ARR (ARG)
         _ReadBUF (ARG)
         _WriteI2C (ARG)
           _IdleI2C
         _ReadI2C (ARG)
     _delay_us
       _Delay1KTCYx
     _Clear_array
     _Read_sec
       _Read
         _delay_ms
           _Delay1KTCYx
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
         _ReadBUF (ARG)
         _Write_I2C (ARG)
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
         _ReadI2C (ARG)
     _Read_min
       _Read
         _delay_ms
           _Delay1KTCYx
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
         _ReadBUF (ARG)
         _Write_I2C (ARG)
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
         _ReadI2C (ARG)
     _Read_hour
       _Read
         _delay_ms
           _Delay1KTCYx
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
         _ReadBUF (ARG)
         _Write_I2C (ARG)
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
         _ReadI2C (ARG)
     _Read_day
       _Read
         _delay_ms
           _Delay1KTCYx
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
         _ReadBUF (ARG)
         _Write_I2C (ARG)
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
         _ReadI2C (ARG)
       _write_DAY
         _Delay1KTCYx (ARG)
         _Write_ARR (ARG)
         _ReadBUF (ARG)
         _WriteI2C (ARG)
           _IdleI2C
         _ReadI2C (ARG)
     _Read_date
       _Read
         _delay_ms
           _Delay1KTCYx
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
         _ReadBUF (ARG)
         _Write_I2C (ARG)
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
         _ReadI2C (ARG)
     _Read_month
       _Read
         _delay_ms
           _Delay1KTCYx
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
         _ReadBUF (ARG)
         _Write_I2C (ARG)
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
         _ReadI2C (ARG)
     _Read_year
       _Read
         _delay_ms
           _Delay1KTCYx
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
         _write_DAY (ARG)
           _Delay1KTCYx (ARG)
           _Write_ARR (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
           _ReadI2C (ARG)
         _ReadBUF (ARG)
         _Write_I2C (ARG)
           _write_DAY (ARG)
             _Delay1KTCYx (ARG)
             _Write_ARR (ARG)
             _ReadBUF (ARG)
             _WriteI2C (ARG)
               _IdleI2C
             _ReadI2C (ARG)
           _ReadBUF (ARG)
           _WriteI2C (ARG)
             _IdleI2C
         _ReadI2C (ARG)
     _Write_I2C
       _write_DAY (ARG)
         _Delay1KTCYx (ARG)
         _Write_ARR (ARG)
         _ReadBUF (ARG)
         _WriteI2C (ARG)
           _IdleI2C
         _ReadI2C (ARG)
       _ReadBUF (ARG)
       _WriteI2C (ARG)
         _IdleI2C
     _OpenI2C
     _CloseI2C
     _IdleI2C
   _Write_time_XLCD
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _WriteDataXLCD
       _DelayFor18TCY
         _Delay10TCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      68       9       40.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F5       7       95.7%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     92      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     25C      11        0.0%
DATA                 0      0     262       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Jun 05 11:35:01 2014

     __end_of_Clear_array 69EA               _SSPSTATbits 000FC7               __CFG_BOR$ON 000000  
             __CFG_BORV$3 000000                       l320 69EC                       l154 713E  
                     l227 71F8                       l501 6E42                       l510 6E7C  
                     l502 6E44                       l326 6F76                       l350 74AE  
                     l335 6FF4                       l344 73DC                       l505 6E56  
                     l521 6AA0                       l329 6FEC                       l506 6E58  
                     l522 6AAA                       l338 707E                       l507 6E62  
                     l259 774A                       l347 74A4                       l508 6E64  
                     l532 6870                       l606 6B3E                       l462 6A16  
                     l470 6C92                       l447 6822                       l519 6A96  
                     l455 6A62                       l609 6B14                       l393 6974  
                     l473 6CB0                       l618 6B34                       l394 697A  
                     l584 68B4                       l840 680C                       l585 68B6  
                     l833 6876                       l499 6E36                       l847 6828  
                     _str 00F3     __size_of_WriteCmdXLCD 0020                       wreg 000FE8  
            __CFG_FOSC$HS 000000      __size_of_Write_time_ 009E              __CFG_LVP$OFF 000000  
             main@config1 00F0              __CFG_WDT$OFF 000000                      l3005 7C76  
                    l3101 71DC                      l2311 69E0                      l3023 6EFC  
                    l2305 69CE                      l2321 6AEA                      l2315 6AB4  
                    l3043 6F4A                      l2317 6ABC                      l2333 6C48  
                    l3037 6F34                      l3029 6F12                      l2511 6924  
                    l2327 6C2C                      l3215 77FA                      l3207 77C8  
                    l3081 715A                      l3233 785E                      l3225 782E  
                    l3217 7806                      l2531 68E4                      l2515 6932  
                    l2523 6952                      l3091 719A                      l3083 7162  
                    l3235 787E                      l2365 67F2                      l3093 71A0  
                    l2543 6A6A                      l2519 6944                      l2713 7A10  
                    l2705 79F6                      l2721 70DC                      l2539 6A52  
                    l2571 6CBA                      l2645 78DC                      l2581 76B6  
                    l2495 6B20                      l2583 76D0                      l2575 7668  
                    l2591 771E                      l2665 7960                      l2737 7126  
                    l2745 74DC                      l2585 76EA                      l2577 7682  
                    l2931 726A                      l2683 79A2                      l2587 7704  
                    l2579 769C                      l2925 724E                      l2685 79B0  
                    l2943 72AC                      l2935 7280                      l2927 7258  
                    l2695 79D2                      l2679 7994                      l2775 75D6  
                    l2697 79DE                      l2777 75E2                      l2939 7296  
                    l2981 7B90                      l2975 7B14                      l2985 7BD8  
                    l2993 7C10                      l2969 7AC4                      l2987 7BEA  
                    l2979 7B88                      l2997 7C46                      l2989 7BFA  
                    l2999 7C56       __size_of_BCD_format 0026                      u2110 79CA  
                    u2201 709E                      u2211 70B0                      u2261 74C2  
                    u2501 7A62       __size_of_BCD_to_DEC 0016                      u2271 74D4  
                    u2511 7A74                      u2705 71C4                      u2491 7A50  
                    u2751 7756                      u2761 7768                      u1981 78C2  
                    u2685 71B0                      u1975 6CDE                      u1991 78D4  
                    u2857 682A                      u2867 680E                      u2877 687C  
                    _Read 69EA                      _main 774C                      _time 00FE  
                    fsr1h 000FE2                      fsr2h 000FDA                      indf1 000FE7  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
 __end_of_Write_time_XLCD 6F54    __size_of_WriteDataXLCD 0022                      prodl 000FF3  
                    start 0002             __CFG_IESO$OFF 000000           __end_of_IdleI2C 67FE  
           __CFG_MCLRE$ON 000000           __end_of_ReadI2C 68BE           __end_of_ReadBUF 67F2  
              Read_char@c 0004                Read_date@c 0029                Read_date@e 0027  
             _Delay10TCYx 680C           __end_of_OpenI2C 68DA              _WriteCmdXLCD 68FA  
              Read_hour@c 002D                Read_hour@e 0027                Read_hour@i 002C  
         __end_of_Set_day 7140               _Delay1KTCYx 6828             __CFG_PLLDIV$5 000000  
              Read_year@c 0029                Read_year@e 0027                     ?_Read 0001  
           ?_SetDDRamAddr 0004                     ?_main 0001                     _RCREG 000FAE  
                   _RCSTA 000FAB                     _SPBRG 000FAF                     _PORTB 000F81  
                   _PORTD 000F83             __CFG_USBDIV$1 000000                     _TRISB 000F93  
                   _TRISD 000F95                     _TXREG 000FAD     __size_of_Delay10KTCYx 0016  
                   Read@c 0026                     _TXSTA 000FAC             __CFG_PWRT$OFF 000000  
          __CFG_FCMEN$OFF 000000             ??_Read_string 0006                     _Write 681A  
                   main@c 00F1                     tablat 000FF5                     status 000FD8  
             _Clear_array 69C4          __end_of_CloseI2C 67E8            WriteUSART@data 0001  
        __end_of_Get_data 7D00           __initialization 6D1A              __end_of_Read 6A16  
            __end_of_main 78B8          __end_of_BusyXLCD 697C              _Delay10KTCYx 6876  
   __size_of_DelayPORXLCD 000E          __end_of_Read_day 6852          __end_of_Read_min 6BD4  
        __end_of_Read_sec 6B8A                _Read_month 6BD4            ??_SetDDRamAddr 0005  
                  ??_Read 0025          __end_of_OpenXLCD 72C4                    ??_main 00AE  
           __activetblptr 000002             _WriteDataXLCD 697C          __end_of_Set_date 75F6  
        __end_of_Set_time 7A36               Read_month@c 0029               Read_month@e 0027  
              Set_day@day 005F           __CFG_CCP2MX$OFF 000000            DelayFor18TCY@i 0003  
                  ?_Write 0002          __end_of_WriteI2C 6B40             BCD_format@str 0001  
             OpenI2C@slew 0002                 ??_IdleI2C 0001        __size_of_ReadUSART 0038  
     __end_of_Read_string 6CC4                    _SPBRGH 000FB0                    _SSPADD 000FC8  
                  _SSPBUF 000FC9                 ??_ReadI2C 0001                 ??_ReadBUF 0001  
      __size_of_Read_char 002E        __size_of_Read_date 005A          ?_Write_time_XLCD 0005  
      __size_of_Read_hour 00BA          __end_of_delay_ms 693A          __end_of_delay_us 695A  
      __size_of_Read_time 00FE        __size_of_Read_year 0058                 ??_OpenI2C 0003  
            _DelayPORXLCD 67FE                 ??_Set_day 0009        __size_of_OpenUSART 005C  
            ??_BCD_format 0003              ??_BCD_to_DEC 0002            __CFG_STVREN$ON 000000  
                  clear_0 6D20            ?_WriteDataXLCD 0004                    _strcmp 6AB2  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
      __end_of_BCD_format 69C4        __end_of_BCD_to_DEC 68A2                __accesstop 0060  
 __end_of__initialization 6D66           __CFG_PBADEN$OFF 000000        __size_of_Write_I2C 000E  
      __size_of_Write_ARR 0052        __size_of_Write_str 0036                _WriteUSART 6862  
          __pcstackCOMRAM 0001              __pidataBANK1 72C5              __pidataBANK2 6E7E  
           __end_of_Write 6828                _Write_time 6FF2               ?_Read_month 0027  
       __end_of_ReadUSART 6AB2         __end_of_Read_char 6A44         __end_of_Read_date 6E22  
           ??_UsartConfig 0006         __end_of_Read_hour 71FA         __end_of_Read_time 74B8  
       __end_of_Read_year 6DC8               _Read_string 6C70                   ??_Write 0003  
           ReadUSART@data 0001                 ?_CloseI2C 0001         __end_of_OpenUSART 6E7E  
               ?_Get_data 0001    __size_of_DelayFor18TCY 0020                __pbssBANK0 00F2  
               ?_BusyXLCD 0001             Set_date@error 002E             Set_date@month 000B  
             Set_day@F203 0195               Set_day@F205 0200           WriteCmdXLCD@cmd 0004  
    __end_of_SetDDRamAddr 6D1A                 ?_Read_day 0001                 ?_Read_min 0027  
               ?_Read_sec 0027                Write_I2C@c 0022                Write_ARR@c 0001  
              Write_ARR@e 0003                 ?_OpenXLCD 0008               Set_day@str5 000A  
               ?_Set_date 0009                 ?_Set_time 0009         WriteDataXLCD@data 0004  
            ?_Delay10TCYx 0001              Read_string@i 0007                Write_str@c 0003  
         ??_WriteDataXLCD 0005              ?_Delay1KTCYx 0001                 ?_WriteI2C 0001  
                 ?_strcmp 0001         __end_of_Write_I2C 6844         __end_of_Write_ARR 6C70  
           ??_Write_time_ 0028         __end_of_Write_str 6A7A                 ?_delay_ms 0022  
               ?_delay_us 0002               Set_time@min 000B               Set_time@sec 0009  
              ??_CloseI2C 0001              Write_time_@h 0027              Write_time_@m 0026  
            Write_time_@s 0025                ??_Get_data 0060            Read_string@len 0005  
                 _SSPCON1 000FC6                   _SSPCON2 000FC5                   _SSPSTAT 000FC7  
     __end_of_UsartConfig 6862                ??_BusyXLCD 0004                   _IdleI2C 67F2  
         __CFG_VREGEN$OFF 000000                ??_Read_day 0027       __size_of_Read_month 004A  
              ??_Read_min 0029                ??_Read_sec 0029              ?_Clear_array 0001  
      __size_of_write_DAY 0156                   _ReadI2C 68A2                   _ReadBUF 67E8  
              ??_OpenXLCD 0009                   _OpenI2C 68BE                   __Hparam 0000  
              ??_Set_date 000F                   __Lparam 0000                   _Set_day 7094  
              ??_Set_time 0010               ?_WriteUSART 0001             _DelayFor18TCY 68DA  
             ?_Write_time 0025                   __pcinit 6D1A                ??_WriteI2C 0002  
         Delay10TCYx@unit 0001                   __ramtop 0800                   __ptext0 774C  
                 __ptext1 6EE6                   __ptext2 697C                   __ptext3 73BA  
                 __ptext4 6D70                   __ptext5 6BD4                   __ptext6 6DC8  
                 __ptext7 6844                   __ptext8 75F6                   __ptext9 6C1E  
         __size_of_strcmp 0044                ??_delay_ms 0023                ??_delay_us 0003  
     __end_of_Write_time_ 6FF2      end_of_initialization 6D66             __Lmediumconst 0000  
            write_DAY@day 0005             Set_time@error 0036                 _RCSTAbits 000FAB  
          ?_DelayFor18TCY 0001                   postdec1 000FE5                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE            Write_time@date 0026  
          Write_time@year 0028                   strcmp@r 0006                 Get_data@h 00A9  
               Get_data@m 00A8                 Get_data@s 00A7         __end_of_write_DAY 774C  
      UsartConfig@config1 0004        UsartConfig@config2 0005               _UsartConfig 6852  
               _TRISAbits 000F92                 _TRISBbits 000F93                 _TRISCbits 000F94  
   __size_of_SetDDRamAddr 0056       __size_of_WriteUSART 0014       __size_of_Write_time 00A2  
               _TXSTAbits 000FAC                 Read_min@c 0029                 Read_min@e 0027  
               Read_sec@c 0029                 Read_sec@e 0027  __size_of_Write_time_XLCD 006E  
            ??_Read_month 0029      __size_of_Delay10TCYx 000E              _SetDDRamAddr 6CC4  
    __size_of_Delay1KTCYx 000E               _Write_time_ 6F54        SetDDRamAddr@DDaddr 0004  
          __end_of_strcmp 6AF6       start_initialization 6D1A                 _ReadUSART 6A7A  
            ?_Read_string 0003                 _Read_char 6A16                 _Read_date 6DC8  
               _Read_hour 7140                 _Read_time 73BA          WriteI2C@data_out 0001  
               _Read_year 6D70         __size_of_CloseI2C 0004         __size_of_Get_data 02CA  
               Set_date@x 0040                 Set_date@y 0041                 Set_date@z 0042  
               _OpenUSART 6E22         __size_of_BusyXLCD 0022        __end_of_Read_month 6C1E  
               Set_time@h 004D                 Set_time@m 0049                 Set_time@s 0048  
               Set_time@x 004A                 Set_time@y 004B                 Set_time@z 004C  
       __size_of_Read_day 000E           ??_DelayFor18TCY 0002         __size_of_Read_min 004A  
       __size_of_Read_sec 004A      __size_of_Clear_array 0026         __size_of_OpenXLCD 00CA  
       __size_of_Set_date 013E             ?_WriteCmdXLCD 0004         __size_of_Set_time 017E  
             __pdataBANK1 0100               __pdataBANK2 0200          __CFG_LPT1OSC$OFF 000000  
                ??_strcmp 0005         __size_of_WriteI2C 004A              Clear_array@e 0001  
            Clear_array@i 0005              Clear_array@n 0003             Read_hour@mode 0029  
              ?_ReadUSART 0001             __pcstackBANK0 0060                 _Write_I2C 6836  
               _Write_ARR 6C1E                ?_Read_char 0001                ?_Read_date 0027  
               _Write_str 6A44                ?_Read_hour 0027                ?_Read_time 002E  
              ?_Read_year 0027         __size_of_delay_ms 0020         __size_of_delay_us 0020  
         Delay1KTCYx@unit 0001              Set_date@F214 0123              Set_date@F216 0183  
                ?_IdleI2C 0001                ?_OpenUSART 0001             Read_time@mode 002E  
            Set_day@error 004D              Set_date@date 0009                  ?_ReadI2C 0001  
                ?_ReadBUF 0001              Set_date@str6 0010              Set_date@year 000D  
               Write@data 0002                  ?_OpenI2C 0001                  ?_Set_day 0001  
            ??_WriteUSART 0002            ??_WriteCmdXLCD 0005             ?_Delay10KTCYx 0001  
            ??_Write_time 0029        Write_time_XLCD@str 0005             Get_data@error 0082  
           Get_data@month 00AC     __end_of_WriteDataXLCD 699E         ??_Write_time_XLCD 0007  
              ?_Write_I2C 0022                ?_Write_ARR 0001            __size_of_Write 000E  
              ?_Write_str 0003        __end_of_WriteUSART 6876                  _LATAbits 000F89  
      __end_of_Write_time 7094                  _LATBbits 000F8A                 delay_ms@i 0024  
               delay_ms@t 0022              Set_time@F200 01A7                 delay_us@i 0004  
            Set_time@F198 0243                 delay_us@t 0002                  _PIE1bits 000F9D  
           ?_DelayPORXLCD 0001                  _PIR1bits 000F9E           OpenXLCD@lcdtype 0008  
            Set_time@mode 000F              Set_time@hour 000D              Set_time@str3 0011  
          ??_Delay10KTCYx 0002             Write_time@day 0025                 main@F4692 0100  
               main@F4694 0141           Read_string@data 0008                  ReadBUF@c 0001  
            ?_UsartConfig 0004               ??_ReadUSART 0001          Delay10KTCYx@unit 0001  
                _CloseI2C 67E4                 _write_DAY 75F6               ??_Read_char 0003  
             ??_Read_date 0029                  _Get_data 7A36               ??_Read_hour 002A  
             ??_Read_time 002F               ??_Read_year 0029                 copy_data0 6D3A  
               copy_data1 6D5A      __size_of_Read_string 0054                  _BusyXLCD 695A  
        OpenI2C@sync_mode 0001               ??_OpenUSART 0004                  _Read_day 6844  
                _Read_min 6B8A                  _Read_sec 6B40          __size_of_IdleI2C 000C  
         OpenUSART@config 0001            ??_DelayPORXLCD 0002                  _OpenXLCD 71FA  
        __size_of_ReadI2C 001C               BCD_format@a 0004          __size_of_ReadBUF 000A  
                __Hrparam 0000               BCD_to_DEC@c 0001                  _Set_date 74B8  
        __size_of_OpenI2C 001C                  _Set_time 78B8                  __Lrparam 0000  
        __size_of_Set_day 00AC                _BCD_format 699E                _BCD_to_DEC 688C  
                _WriteI2C 6AF6            write_DAY@day_1 0006              ?_Write_time_ 0025  
          write_DAY@day_2 000A            write_DAY@day_3 000E            write_DAY@day_4 0012  
          write_DAY@day_5 0016            write_DAY@day_6 001A            write_DAY@day_7 001E  
            Get_data@F231 0171              Get_data@F241 01EF              Get_data@F233 01E3  
            Get_data@F243 01F2              Get_data@F235 01E6              Get_data@F227 015E  
            Get_data@F237 01E9              Get_data@F229 01B9              Get_data@F239 01EC  
                _delay_ms 691A                  _delay_us 693A               ??_Write_I2C 0023  
             ??_Write_ARR 0005                ?_write_DAY 0005                  __ptext10 7140  
                __ptext11 6B8A                  __ptext20 6836                  __ptext12 6B40  
                __ptext21 67E8                  __ptext13 69EA                  __ptext30 688C  
                __ptext22 691A                  __ptext14 693A                  __ptext31 699E  
                __ptext23 6828                  __ptext15 7A36                  __ptext40 68FA  
                __ptext32 6A44                  __ptext24 6AB2                  __ptext16 6FF2  
                __ptext41 68DA                  __ptext33 6A16                  __ptext25 74B8  
                __ptext17 67E4                  __ptext42 680C                  __ptext34 6A7A  
                __ptext26 7094                  __ptext18 6F54                  __ptext43 6876  
                __ptext35 681A                  __ptext27 69C4                  __ptext19 68BE  
                __ptext44 67FE                  __ptext36 6862                  __ptext28 78B8  
                __ptext45 6852                  __ptext37 71FA                  __ptext29 6C70  
                __ptext46 6E22                  __ptext38 695A                  __ptext47 67F2  
                __ptext39 6CC4                  __ptext48 68A2                  __ptext49 6AF6  
             ??_Write_str 0005              Get_data@date 00AB      __end_of_WriteCmdXLCD 691A  
            Get_data@mode 00AD              Get_data@str2 0061              Get_data@str8 0074  
            Get_data@year 00AA             __size_of_Read 002C             __size_of_main 016C  
           ??_Delay10TCYx 0002             ??_Delay1KTCYx 0002                  main@mode 00EF  
                main@str7 00AF                  main@str8 00D2     __CFG_CPUDIV$OSC1_PLL2 000000  
          OpenUSART@spbrg 0002             write_DAY@F260 01CF             write_DAY@F262 01D3  
           write_DAY@F264 01D7             write_DAY@F256 01C7             write_DAY@F266 01DB  
           write_DAY@F258 01CB             write_DAY@F268 01DF      __end_of_Delay10KTCYx 688C  
        Write_time_XLCD@i 0008               Get_data@s_1 0094               Get_data@s_2 0097  
             Get_data@s_3 009A               Get_data@s_4 009D               Get_data@s_5 00A0  
             Get_data@s_6 00A3             ??_Clear_array 0004               Get_data@day 00A6  
   __end_of_DelayFor18TCY 68FA               ?_BCD_format 0001           _Write_time_XLCD 6EE6  
             ?_BCD_to_DEC 0001       __end_of_Delay10TCYx 681A           Write_time@month 0027  
                strcmp@s1 0001                  strcmp@s2 0003      __end_of_DelayPORXLCD 680C  
     __end_of_Delay1KTCYx 6836               _SSPCON1bits 000FC6               _SSPCON2bits 000FC5  
             ??_write_DAY 0006      __size_of_UsartConfig 0010         Read_string@buffer 0003  
            _USART_Status 00F2  
