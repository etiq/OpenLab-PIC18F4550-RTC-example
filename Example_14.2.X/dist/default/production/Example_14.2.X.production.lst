

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Sep 20 11:32:17 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataBANK0
    70  006C8B                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for Get_data@F233
    74  006C8B  31                 	db	49
    75  006C8C  32                 	db	50
    76  006C8D  00                 	db	0
    77                           
    78                           	psect	idataBANK1
    79  007758                     __pidataBANK1:
    80                           	opt stack 0
    81                           
    82                           ;initializer for main@F4700
    83  007758  0A                 	db	10
    84  007759  44                 	db	68
    85  00775A  6F                 	db	111
    86  00775B  20                 	db	32
    87  00775C  79                 	db	121
    88  00775D  6F                 	db	111
    89  00775E  75                 	db	117
    90  00775F  20                 	db	32
    91  007760  77                 	db	119
    92  007761  61                 	db	97
    93  007762  6E                 	db	110
    94  007763  74                 	db	116
    95  007764  20                 	db	32
    96  007765  74                 	db	116
    97  007766  6F                 	db	111
    98  007767  20                 	db	32
    99  007768  73                 	db	115
   100  007769  65                 	db	101
   101  00776A  74                 	db	116
   102  00776B  20                 	db	32
   103  00776C  74                 	db	116
   104  00776D  68                 	db	104
   105  00776E  65                 	db	101
   106  00776F  20                 	db	32
   107  007770  74                 	db	116
   108  007771  69                 	db	105
   109  007772  6D                 	db	109
   110  007773  65                 	db	101
   111  007774  3F                 	db	63
   112  007775  20                 	db	32
   113  007776  79                 	db	121
   114  007777  2F                 	db	47
   115  007778  6E                 	db	110
   116  007779  00                 	db	0
   117  00777A  00                 	db	0
   118                           
   119                           ;initializer for Set_date@F214
   120  00777B  0A                 	db	10
   121  00777C  45                 	db	69
   122  00777D  6E                 	db	110
   123  00777E  74                 	db	116
   124  00777F  65                 	db	101
   125  007780  72                 	db	114
   126  007781  20                 	db	32
   127  007782  44                 	db	68
   128  007783  41                 	db	65
   129  007784  54                 	db	84
   130  007785  45                 	db	69
   131  007786  2F                 	db	47
   132  007787  4D                 	db	77
   133  007788  4F                 	db	79
   134  007789  4E                 	db	78
   135  00778A  54                 	db	84
   136  00778B  48                 	db	72
   137  00778C  2F                 	db	47
   138  00778D  59                 	db	89
   139  00778E  45                 	db	69
   140  00778F  41                 	db	65
   141  007790  52                 	db	82
   142  007791  09                 	db	9
   143  007792  44                 	db	68
   144  007793  44                 	db	68
   145  007794  4D                 	db	77
   146  007795  4D                 	db	77
   147  007796  59                 	db	89
   148  007797  59                 	db	89
   149  007798  00                 	db	0
   150                           
   151                           ;initializer for main@F4702
   152  007799  50                 	db	80
   153  00779A  6C                 	db	108
   154  00779B  65                 	db	101
   155  00779C  61                 	db	97
   156  00779D  73                 	db	115
   157  00779E  65                 	db	101
   158  00779F  20                 	db	32
   159  0077A0  65                 	db	101
   160  0077A1  6E                 	db	110
   161  0077A2  74                 	db	116
   162  0077A3  65                 	db	101
   163  0077A4  72                 	db	114
   164  0077A5  20                 	db	32
   165  0077A6  61                 	db	97
   166  0077A7  20                 	db	32
   167  0077A8  76                 	db	118
   168  0077A9  61                 	db	97
   169  0077AA  6C                 	db	108
   170  0077AB  69                 	db	105
   171  0077AC  64                 	db	100
   172  0077AD  20                 	db	32
   173  0077AE  64                 	db	100
   174  0077AF  61                 	db	97
   175  0077B0  74                 	db	116
   176  0077B1  61                 	db	97
   177  0077B2  2E                 	db	46
   178  0077B3  2E                 	db	46
   179  0077B4  21                 	db	33
   180  0077B5  00                 	db	0
   181                           
   182                           ;initializer for Get_data@F227
   183  0077B6  0A                 	db	10
   184  0077B7  53                 	db	83
   185  0077B8  45                 	db	69
   186  0077B9  4C                 	db	76
   187  0077BA  45                 	db	69
   188  0077BB  43                 	db	67
   189  0077BC  54                 	db	84
   190  0077BD  20                 	db	32
   191  0077BE  4D                 	db	77
   192  0077BF  4F                 	db	79
   193  0077C0  44                 	db	68
   194  0077C1  45                 	db	69
   195  0077C2  20                 	db	32
   196  0077C3  31                 	db	49
   197  0077C4  32                 	db	50
   198  0077C5  2F                 	db	47
   199  0077C6  32                 	db	50
   200  0077C7  34                 	db	52
   201  0077C8  00                 	db	0
   202                           
   203                           ;initializer for Get_data@F231
   204  0077C9  0A                 	db	10
   205  0077CA  49                 	db	73
   206  0077CB  6E                 	db	110
   207  0077CC  76                 	db	118
   208  0077CD  61                 	db	97
   209  0077CE  6C                 	db	108
   210  0077CF  69                 	db	105
   211  0077D0  64                 	db	100
   212  0077D1  20                 	db	32
   213  0077D2  45                 	db	69
   214  0077D3  6E                 	db	110
   215  0077D4  74                 	db	116
   216  0077D5  72                 	db	114
   217  0077D6  79                 	db	121
   218  0077D7  2E                 	db	46
   219  0077D8  2E                 	db	46
   220  0077D9  21                 	db	33
   221  0077DA  00                 	db	0
   222                           
   223                           ;initializer for Set_date@F216
   224  0077DB  0A                 	db	10
   225  0077DC  49                 	db	73
   226  0077DD  6E                 	db	110
   227  0077DE  76                 	db	118
   228  0077DF  61                 	db	97
   229  0077E0  6C                 	db	108
   230  0077E1  69                 	db	105
   231  0077E2  64                 	db	100
   232  0077E3  20                 	db	32
   233  0077E4  45                 	db	69
   234  0077E5  6E                 	db	110
   235  0077E6  74                 	db	116
   236  0077E7  72                 	db	114
   237  0077E8  79                 	db	121
   238  0077E9  2E                 	db	46
   239  0077EA  2E                 	db	46
   240  0077EB  21                 	db	33
   241  0077EC  00                 	db	0
   242                           
   243                           ;initializer for Set_day@F203
   244  0077ED  0A                 	db	10
   245  0077EE  49                 	db	73
   246  0077EF  6E                 	db	110
   247  0077F0  76                 	db	118
   248  0077F1  61                 	db	97
   249  0077F2  6C                 	db	108
   250  0077F3  69                 	db	105
   251  0077F4  64                 	db	100
   252  0077F5  20                 	db	32
   253  0077F6  45                 	db	69
   254  0077F7  6E                 	db	110
   255  0077F8  74                 	db	116
   256  0077F9  72                 	db	114
   257  0077FA  79                 	db	121
   258  0077FB  2E                 	db	46
   259  0077FC  2E                 	db	46
   260  0077FD  21                 	db	33
   261  0077FE  00                 	db	0
   262                           
   263                           ;initializer for Set_time@F200
   264  0077FF  0A                 	db	10
   265  007800  49                 	db	73
   266  007801  6E                 	db	110
   267  007802  76                 	db	118
   268  007803  61                 	db	97
   269  007804  6C                 	db	108
   270  007805  69                 	db	105
   271  007806  64                 	db	100
   272  007807  20                 	db	32
   273  007808  45                 	db	69
   274  007809  6E                 	db	110
   275  00780A  74                 	db	116
   276  00780B  72                 	db	114
   277  00780C  79                 	db	121
   278  00780D  2E                 	db	46
   279  00780E  2E                 	db	46
   280  00780F  21                 	db	33
   281  007810  00                 	db	0
   282                           
   283                           ;initializer for Get_data@F229
   284  007811  0A                 	db	10
   285  007812  45                 	db	69
   286  007813  6E                 	db	110
   287  007814  74                 	db	116
   288  007815  65                 	db	101
   289  007816  72                 	db	114
   290  007817  20                 	db	32
   291  007818  41                 	db	65
   292  007819  4D                 	db	77
   293  00781A  2F                 	db	47
   294  00781B  50                 	db	80
   295  00781C  4D                 	db	77
   296  00781D  3F                 	db	63
   297  00781E  00                 	db	0
   298                           
   299                           ;initializer for write_DAY@F256
   300  00781F  53                 	db	83
   301  007820  55                 	db	85
   302  007821  4E                 	db	78
   303  007822  00                 	db	0
   304                           
   305                           ;initializer for write_DAY@F258
   306  007823  4D                 	db	77
   307  007824  4F                 	db	79
   308  007825  4E                 	db	78
   309  007826  00                 	db	0
   310                           
   311                           ;initializer for write_DAY@F260
   312  007827  54                 	db	84
   313  007828  55                 	db	85
   314  007829  45                 	db	69
   315  00782A  00                 	db	0
   316                           
   317                           ;initializer for write_DAY@F262
   318  00782B  57                 	db	87
   319  00782C  45                 	db	69
   320  00782D  44                 	db	68
   321  00782E  00                 	db	0
   322                           
   323                           ;initializer for write_DAY@F264
   324  00782F  54                 	db	84
   325  007830  48                 	db	72
   326  007831  55                 	db	85
   327  007832  00                 	db	0
   328                           
   329                           ;initializer for write_DAY@F266
   330  007833  46                 	db	70
   331  007834  52                 	db	82
   332  007835  49                 	db	73
   333  007836  00                 	db	0
   334                           
   335                           ;initializer for write_DAY@F268
   336  007837  53                 	db	83
   337  007838  41                 	db	65
   338  007839  54                 	db	84
   339  00783A  00                 	db	0
   340                           
   341                           ;initializer for Get_data@F235
   342  00783B  32                 	db	50
   343  00783C  34                 	db	52
   344  00783D  00                 	db	0
   345                           
   346                           ;initializer for Get_data@F237
   347  00783E  61                 	db	97
   348  00783F  6D                 	db	109
   349  007840  00                 	db	0
   350                           
   351                           ;initializer for Get_data@F239
   352  007841  41                 	db	65
   353  007842  4D                 	db	77
   354  007843  00                 	db	0
   355                           
   356                           ;initializer for Get_data@F241
   357  007844  70                 	db	112
   358  007845  6D                 	db	109
   359  007846  00                 	db	0
   360                           
   361                           ;initializer for Get_data@F243
   362  007847  50                 	db	80
   363  007848  4D                 	db	77
   364  007849  00                 	db	0
   365                           
   366                           	psect	idataBANK2
   367  0073BA                     __pidataBANK2:
   368                           	opt stack 0
   369                           
   370                           ;initializer for Set_day@F205
   371  0073BA  0A                 	db	10
   372  0073BB  45                 	db	69
   373  0073BC  6E                 	db	110
   374  0073BD  74                 	db	116
   375  0073BE  65                 	db	101
   376  0073BF  72                 	db	114
   377  0073C0  20                 	db	32
   378  0073C1  74                 	db	116
   379  0073C2  68                 	db	104
   380  0073C3  65                 	db	101
   381  0073C4  20                 	db	32
   382  0073C5  44                 	db	68
   383  0073C6  41                 	db	65
   384  0073C7  59                 	db	89
   385  0073C8  20                 	db	32
   386  0073C9  53                 	db	83
   387  0073CA  55                 	db	85
   388  0073CB  4E                 	db	78
   389  0073CC  2D                 	db	45
   390  0073CD  30                 	db	48
   391  0073CE  31                 	db	49
   392  0073CF  20                 	db	32
   393  0073D0  4D                 	db	77
   394  0073D1  4F                 	db	79
   395  0073D2  4E                 	db	78
   396  0073D3  2D                 	db	45
   397  0073D4  30                 	db	48
   398  0073D5  32                 	db	50
   399  0073D6  20                 	db	32
   400  0073D7  54                 	db	84
   401  0073D8  55                 	db	85
   402  0073D9  45                 	db	69
   403  0073DA  2D                 	db	45
   404  0073DB  30                 	db	48
   405  0073DC  33                 	db	51
   406  0073DD  20                 	db	32
   407  0073DE  57                 	db	87
   408  0073DF  45                 	db	69
   409  0073E0  44                 	db	68
   410  0073E1  2D                 	db	45
   411  0073E2  30                 	db	48
   412  0073E3  34                 	db	52
   413  0073E4  20                 	db	32
   414  0073E5  54                 	db	84
   415  0073E6  48                 	db	72
   416  0073E7  55                 	db	85
   417  0073E8  52                 	db	82
   418  0073E9  53                 	db	83
   419  0073EA  2D                 	db	45
   420  0073EB  30                 	db	48
   421  0073EC  35                 	db	53
   422  0073ED  20                 	db	32
   423  0073EE  46                 	db	70
   424  0073EF  52                 	db	82
   425  0073F0  49                 	db	73
   426  0073F1  2D                 	db	45
   427  0073F2  30                 	db	48
   428  0073F3  36                 	db	54
   429  0073F4  20                 	db	32
   430  0073F5  53                 	db	83
   431  0073F6  41                 	db	65
   432  0073F7  54                 	db	84
   433  0073F8  2D                 	db	45
   434  0073F9  30                 	db	48
   435  0073FA  37                 	db	55
   436  0073FB  00                 	db	0
   437  0073FC  00                 	db	0
   438                           
   439                           ;initializer for Set_time@F198
   440  0073FD  0A                 	db	10
   441  0073FE  45                 	db	69
   442  0073FF  6E                 	db	110
   443  007400  74                 	db	116
   444  007401  65                 	db	101
   445  007402  72                 	db	114
   446  007403  20                 	db	32
   447  007404  74                 	db	116
   448  007405  68                 	db	104
   449  007406  65                 	db	101
   450  007407  20                 	db	32
   451  007408  74                 	db	116
   452  007409  69                 	db	105
   453  00740A  6D                 	db	109
   454  00740B  65                 	db	101
   455  00740C  20                 	db	32
   456  00740D  69                 	db	105
   457  00740E  6E                 	db	110
   458  00740F  20                 	db	32
   459  007410  74                 	db	116
   460  007411  68                 	db	104
   461  007412  65                 	db	101
   462  007413  20                 	db	32
   463  007414  66                 	db	102
   464  007415  6F                 	db	111
   465  007416  72                 	db	114
   466  007417  6D                 	db	109
   467  007418  61                 	db	97
   468  007419  74                 	db	116
   469  00741A  20                 	db	32
   470  00741B  48                 	db	72
   471  00741C  48                 	db	72
   472  00741D  4D                 	db	77
   473  00741E  4D                 	db	77
   474  00741F  53                 	db	83
   475  007420  53                 	db	83
   476  007421  00                 	db	0
   477  0000                     _LATAbits	set	3977
   478  0000                     _LATBbits	set	3978
   479  0000                     _PIE1bits	set	3997
   480  0000                     _PIR1bits	set	3998
   481  0000                     _PORTB	set	3969
   482  0000                     _PORTD	set	3971
   483  0000                     _RCREG	set	4014
   484  0000                     _RCSTA	set	4011
   485  0000                     _RCSTAbits	set	4011
   486  0000                     _SPBRG	set	4015
   487  0000                     _SPBRGH	set	4016
   488  0000                     _SSPADD	set	4040
   489  0000                     _SSPBUF	set	4041
   490  0000                     _SSPCON1	set	4038
   491  0000                     _SSPCON1bits	set	4038
   492  0000                     _SSPCON2	set	4037
   493  0000                     _SSPCON2bits	set	4037
   494  0000                     _SSPSTAT	set	4039
   495  0000                     _SSPSTATbits	set	4039
   496  0000                     _TRISAbits	set	3986
   497  0000                     _TRISB	set	3987
   498  0000                     _TRISBbits	set	3987
   499  0000                     _TRISCbits	set	3988
   500  0000                     _TRISD	set	3989
   501  0000                     _TXREG	set	4013
   502  0000                     _TXSTA	set	4012
   503  0000                     _TXSTAbits	set	4012
   504                           
   505                           ; #config settings
   506  0000                     
   507                           	psect	cinit
   508  007422                     __pcinit:
   509                           	opt stack 0
   510  007422                     start_initialization:
   511                           	opt stack 0
   512  007422                     __initialization:
   513                           	opt stack 0
   514                           
   515                           ; Clear objects allocated to BANK0 (13 bytes)
   516  007422  EE00  F0F0         	lfsr	0,__pbssBANK0
   517  007426  0E0D               	movlw	13
   518  007428                     clear_0:
   519  007428  6AEE               	clrf	postinc0,c
   520  00742A  06E8               	decf	wreg,f,c
   521  00742C  E1FD               	bnz	clear_0
   522                           
   523                           ; Clear objects allocated to COMRAM (1 bytes)
   524  00742E  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   525                           
   526                           ; Initialize objects allocated to BANK2 (104 bytes)
   527                           ; load TBLPTR registers with __pidataBANK2
   528  007430  0EBA               	movlw	low __pidataBANK2
   529  007432  6EF6               	movwf	tblptrl,c
   530  007434  0E73               	movlw	high __pidataBANK2
   531  007436  6EF7               	movwf	tblptrh,c
   532  007438  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   533  00743A  6EF8               	movwf	tblptru,c
   534  00743C  EE02  F000         	lfsr	0,__pdataBANK2
   535  007440  EE10 F068          	lfsr	1,104
   536  007444                     copy_data0:
   537  007444  0009               	tblrd		*+
   538  007446  CFF5 FFEE          	movff	tablat,postinc0
   539  00744A  50E5               	movf	postdec1,w,c
   540  00744C  50E1               	movf	fsr1l,w,c
   541  00744E  E1FA               	bnz	copy_data0
   542                           
   543                           ; Initialize objects allocated to BANK1 (242 bytes)
   544                           ; load TBLPTR registers with __pidataBANK1
   545  007450  0E58               	movlw	low __pidataBANK1
   546  007452  6EF6               	movwf	tblptrl,c
   547  007454  0E77               	movlw	high __pidataBANK1
   548  007456  6EF7               	movwf	tblptrh,c
   549  007458  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   550  00745A  6EF8               	movwf	tblptru,c
   551  00745C  EE01  F000         	lfsr	0,__pdataBANK1
   552  007460  EE10 F0F2          	lfsr	1,242
   553  007464                     copy_data1:
   554  007464  0009               	tblrd		*+
   555  007466  CFF5 FFEE          	movff	tablat,postinc0
   556  00746A  50E5               	movf	postdec1,w,c
   557  00746C  50E1               	movf	fsr1l,w,c
   558  00746E  E1FA               	bnz	copy_data1
   559                           
   560                           ; Initialize objects allocated to BANK0 (3 bytes)
   561                           ; load TBLPTR registers with __pidataBANK0
   562  007470  0E8B               	movlw	low __pidataBANK0
   563  007472  6EF6               	movwf	tblptrl,c
   564  007474  0E6C               	movlw	high __pidataBANK0
   565  007476  6EF7               	movwf	tblptrh,c
   566  007478  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   567  00747A  6EF8               	movwf	tblptru,c
   568  00747C  0009               	tblrd		*+	;fetch initializer
   569  00747E  CFF5 F0FD          	movff	tablat,__pdataBANK0
   570  007482  0009               	tblrd		*+	;fetch initializer
   571  007484  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   572  007488  0009               	tblrd		*+	;fetch initializer
   573  00748A  CFF5 F0FF          	movff	tablat,__pdataBANK0+2
   574  00748E                     end_of_initialization:
   575                           	opt stack 0
   576  00748E                     __end_of__initialization:
   577                           	opt stack 0
   578  00748E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   579  007490  6EF8               	movwf	tblptru,c
   580  007492  0100               	movlb	0
   581  007494  EF25  F03C         	goto	_main	;jump to C main() function
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           
   591                           	psect	bssCOMRAM
   592  00005E                     __pbssCOMRAM:
   593                           	opt stack 0
   594  00005E                     _USART_Status:
   595                           	opt stack 0
   596  00005E                     	ds	1
   597                           tblptru	equ	0xFF8
   598                           tblptrh	equ	0xFF7
   599                           tblptrl	equ	0xFF6
   600                           tablat	equ	0xFF5
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           postdec1	equ	0xFE5
   604                           fsr1l	equ	0xFE1
   605                           
   606                           	psect	bssBANK0
   607  0000F0                     __pbssBANK0:
   608                           	opt stack 0
   609  0000F0                     _str:
   610                           	opt stack 0
   611  0000F0                     	ds	11
   612  0000FB                     _time:
   613                           	opt stack 0
   614  0000FB                     	ds	2
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           postdec1	equ	0xFE5
   622                           fsr1l	equ	0xFE1
   623                           
   624                           	psect	dataBANK0
   625  0000FD                     __pdataBANK0:
   626                           	opt stack 0
   627  0000FD                     Get_data@F233:
   628                           	opt stack 0
   629  0000FD                     	ds	3
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	dataBANK1
   640  000100                     __pdataBANK1:
   641                           	opt stack 0
   642  000100                     main@F4700:
   643                           	opt stack 0
   644  000100                     	ds	35
   645  000123                     Set_date@F214:
   646                           	opt stack 0
   647  000123                     	ds	30
   648  000141                     main@F4702:
   649                           	opt stack 0
   650  000141                     	ds	29
   651  00015E                     Get_data@F227:
   652                           	opt stack 0
   653  00015E                     	ds	19
   654  000171                     Get_data@F231:
   655                           	opt stack 0
   656  000171                     	ds	18
   657  000183                     Set_date@F216:
   658                           	opt stack 0
   659  000183                     	ds	18
   660  000195                     Set_day@F203:
   661                           	opt stack 0
   662  000195                     	ds	18
   663  0001A7                     Set_time@F200:
   664                           	opt stack 0
   665  0001A7                     	ds	18
   666  0001B9                     Get_data@F229:
   667                           	opt stack 0
   668  0001B9                     	ds	14
   669  0001C7                     write_DAY@F256:
   670                           	opt stack 0
   671  0001C7                     	ds	4
   672  0001CB                     write_DAY@F258:
   673                           	opt stack 0
   674  0001CB                     	ds	4
   675  0001CF                     write_DAY@F260:
   676                           	opt stack 0
   677  0001CF                     	ds	4
   678  0001D3                     write_DAY@F262:
   679                           	opt stack 0
   680  0001D3                     	ds	4
   681  0001D7                     write_DAY@F264:
   682                           	opt stack 0
   683  0001D7                     	ds	4
   684  0001DB                     write_DAY@F266:
   685                           	opt stack 0
   686  0001DB                     	ds	4
   687  0001DF                     write_DAY@F268:
   688                           	opt stack 0
   689  0001DF                     	ds	4
   690  0001E3                     Get_data@F235:
   691                           	opt stack 0
   692  0001E3                     	ds	3
   693  0001E6                     Get_data@F237:
   694                           	opt stack 0
   695  0001E6                     	ds	3
   696  0001E9                     Get_data@F239:
   697                           	opt stack 0
   698  0001E9                     	ds	3
   699  0001EC                     Get_data@F241:
   700                           	opt stack 0
   701  0001EC                     	ds	3
   702  0001EF                     Get_data@F243:
   703                           	opt stack 0
   704  0001EF                     	ds	3
   705                           tblptru	equ	0xFF8
   706                           tblptrh	equ	0xFF7
   707                           tblptrl	equ	0xFF6
   708                           tablat	equ	0xFF5
   709                           postinc0	equ	0xFEE
   710                           wreg	equ	0xFE8
   711                           postdec1	equ	0xFE5
   712                           fsr1l	equ	0xFE1
   713                           
   714                           	psect	dataBANK2
   715  000200                     __pdataBANK2:
   716                           	opt stack 0
   717  000200                     Set_day@F205:
   718                           	opt stack 0
   719  000200                     	ds	67
   720  000243                     Set_time@F198:
   721                           	opt stack 0
   722  000243                     	ds	37
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           postdec1	equ	0xFE5
   730                           fsr1l	equ	0xFE1
   731                           
   732                           	psect	cstackBANK0
   733  000060                     __pcstackBANK0:
   734                           	opt stack 0
   735  000060                     Get_data@str2:
   736                           	opt stack 0
   737                           
   738                           ; 19 bytes @ 0x0
   739  000060                     	ds	19
   740  000073                     Get_data@str8:
   741                           	opt stack 0
   742                           
   743                           ; 14 bytes @ 0x13
   744  000073                     	ds	14
   745  000081                     Get_data@error:
   746                           	opt stack 0
   747                           
   748                           ; 18 bytes @ 0x21
   749  000081                     	ds	18
   750  000093                     Get_data@s_1:
   751                           	opt stack 0
   752                           
   753                           ; 3 bytes @ 0x33
   754  000093                     	ds	3
   755  000096                     Get_data@s_2:
   756                           	opt stack 0
   757                           
   758                           ; 3 bytes @ 0x36
   759  000096                     	ds	3
   760  000099                     Get_data@s_3:
   761                           	opt stack 0
   762                           
   763                           ; 3 bytes @ 0x39
   764  000099                     	ds	3
   765  00009C                     Get_data@s_4:
   766                           	opt stack 0
   767                           
   768                           ; 3 bytes @ 0x3C
   769  00009C                     	ds	3
   770  00009F                     Get_data@s_5:
   771                           	opt stack 0
   772                           
   773                           ; 3 bytes @ 0x3F
   774  00009F                     	ds	3
   775  0000A2                     Get_data@s_6:
   776                           	opt stack 0
   777                           
   778                           ; 3 bytes @ 0x42
   779  0000A2                     	ds	3
   780  0000A5                     Get_data@day:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0x45
   784  0000A5                     	ds	1
   785  0000A6                     Get_data@s:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x46
   789  0000A6                     	ds	1
   790  0000A7                     Get_data@m:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x47
   794  0000A7                     	ds	1
   795  0000A8                     Get_data@h:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x48
   799  0000A8                     	ds	1
   800  0000A9                     Get_data@year:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x49
   804  0000A9                     	ds	1
   805  0000AA                     Get_data@date:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x4A
   809  0000AA                     	ds	1
   810  0000AB                     Get_data@month:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x4B
   814  0000AB                     	ds	1
   815  0000AC                     Get_data@mode:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x4C
   819  0000AC                     	ds	1
   820  0000AD                     main@str7:
   821                           	opt stack 0
   822                           
   823                           ; 35 bytes @ 0x4D
   824  0000AD                     	ds	35
   825  0000D0                     main@str8:
   826                           	opt stack 0
   827                           
   828                           ; 29 bytes @ 0x70
   829  0000D0                     	ds	29
   830  0000ED                     main@mode:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x8D
   834  0000ED                     	ds	1
   835  0000EE                     main@config1:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x8E
   839  0000EE                     	ds	1
   840  0000EF                     main@c:
   841                           	opt stack 0
   842                           
   843                           ; 1 bytes @ 0x8F
   844  0000EF                     	ds	1
   845                           tblptru	equ	0xFF8
   846                           tblptrh	equ	0xFF7
   847                           tblptrl	equ	0xFF6
   848                           tablat	equ	0xFF5
   849                           postinc0	equ	0xFEE
   850                           wreg	equ	0xFE8
   851                           postdec1	equ	0xFE5
   852                           fsr1l	equ	0xFE1
   853                           
   854                           	psect	cstackCOMRAM
   855  000001                     __pcstackCOMRAM:
   856                           	opt stack 0
   857  000001                     ??_Delay10KTCYx:
   858  000001                     ??_ReadI2C:
   859  000001                     ??_IdleI2C:
   860  000001                     ??_BCD_to_DEC:
   861  000001                     ?_strcmp:
   862                           	opt stack 0
   863  000001                     ReadBUF@c:
   864                           	opt stack 0
   865  000001                     ReadUSART@data:
   866                           	opt stack 0
   867  000001                     WriteUSART@data:
   868                           	opt stack 0
   869  000001                     OpenI2C@slew:
   870                           	opt stack 0
   871  000001                     Delay10TCYx@unit:
   872                           	opt stack 0
   873  000001                     Delay1KTCYx@unit:
   874                           	opt stack 0
   875  000001                     BCD_format@str:
   876                           	opt stack 0
   877  000001                     Clear_array@e:
   878                           	opt stack 0
   879  000001                     Write_ARR@c:
   880                           	opt stack 0
   881  000001                     OpenUSART@spbrg:
   882                           	opt stack 0
   883  000001                     strcmp@s1:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x0
   887  000001                     	ds	1
   888  000002                     ??_WriteI2C:
   889  000002                     delay_ms@t:
   890                           	opt stack 0
   891  000002                     delay_us@t:
   892                           	opt stack 0
   893  000002                     DelayFor18TCY@i:
   894                           	opt stack 0
   895  000002                     BCD_to_DEC@c:
   896                           	opt stack 0
   897  000002                     Write@data:
   898                           	opt stack 0
   899  000002                     OpenI2C@sync_mode:
   900                           	opt stack 0
   901  000002                     Delay10KTCYx@unit:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x1
   905  000002                     	ds	1
   906  000003                     ??_SetDDRamAddr:
   907  000003                     ??_OpenUSART:
   908  000003                     ??_BCD_format:
   909  000003                     delay_ms@i:
   910                           	opt stack 0
   911  000003                     delay_us@i:
   912                           	opt stack 0
   913  000003                     Clear_array@n:
   914                           	opt stack 0
   915  000003                     WriteCmdXLCD@cmd:
   916                           	opt stack 0
   917  000003                     WriteDataXLCD@data:
   918                           	opt stack 0
   919  000003                     Read_char@c:
   920                           	opt stack 0
   921  000003                     WriteI2C@data_out:
   922                           	opt stack 0
   923  000003                     Write_ARR@e:
   924                           	opt stack 0
   925  000003                     Write_str@c:
   926                           	opt stack 0
   927  000003                     Read_string@buffer:
   928                           	opt stack 0
   929  000003                     strcmp@s2:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x2
   933  000003                     	ds	1
   934  000004                     BCD_format@a:
   935                           	opt stack 0
   936  000004                     Clear_array@i:
   937                           	opt stack 0
   938  000004                     Write_I2C@c:
   939                           	opt stack 0
   940  000004                     Write_time_XLCD@str:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x3
   944  000004                     	ds	1
   945  000005                     ??_strcmp:
   946  000005                     Read@c:
   947                           	opt stack 0
   948  000005                     Write_time_@m:
   949                           	opt stack 0
   950  000005                     Write_time@date:
   951                           	opt stack 0
   952  000005                     Read_string@len:
   953                           	opt stack 0
   954  000005                     write_DAY@day_1:
   955                           	opt stack 0
   956                           
   957                           ; 4 bytes @ 0x4
   958  000005                     	ds	1
   959  000006                     Write_time_@h:
   960                           	opt stack 0
   961  000006                     Write_time@month:
   962                           	opt stack 0
   963  000006                     Write_time_XLCD@i:
   964                           	opt stack 0
   965  000006                     Read_string@i:
   966                           	opt stack 0
   967  000006                     OpenUSART@config:
   968                           	opt stack 0
   969  000006                     SetDDRamAddr@DDaddr:
   970                           	opt stack 0
   971  000006                     strcmp@r:
   972                           	opt stack 0
   973  000006                     Read_sec@e:
   974                           	opt stack 0
   975  000006                     Read_min@e:
   976                           	opt stack 0
   977  000006                     Read_hour@e:
   978                           	opt stack 0
   979  000006                     Read_date@e:
   980                           	opt stack 0
   981  000006                     Read_month@e:
   982                           	opt stack 0
   983  000006                     Read_year@e:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x5
   987  000006                     	ds	1
   988  000007                     Write_time_@s:
   989                           	opt stack 0
   990  000007                     Write_time@year:
   991                           	opt stack 0
   992  000007                     OpenXLCD@lcdtype:
   993                           	opt stack 0
   994  000007                     UsartConfig@config2:
   995                           	opt stack 0
   996  000007                     Read_string@data:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x6
  1000  000007                     	ds	1
  1001  000008                     Read_sec@c:
  1002                           	opt stack 0
  1003  000008                     Read_min@c:
  1004                           	opt stack 0
  1005  000008                     Read_hour@mode:
  1006                           	opt stack 0
  1007  000008                     Read_date@c:
  1008                           	opt stack 0
  1009  000008                     Read_month@c:
  1010                           	opt stack 0
  1011  000008                     Read_year@c:
  1012                           	opt stack 0
  1013  000008                     Write_time@day:
  1014                           	opt stack 0
  1015  000008                     UsartConfig@config1:
  1016                           	opt stack 0
  1017  000008                     Set_time@sec:
  1018                           	opt stack 0
  1019  000008                     Set_date@date:
  1020                           	opt stack 0
  1021  000008                     Set_day@str5:
  1022                           	opt stack 0
  1023                           
  1024                           ; 67 bytes @ 0x7
  1025  000008                     	ds	1
  1026  000009                     ??_Read_hour:
  1027  000009                     write_DAY@day_2:
  1028                           	opt stack 0
  1029                           
  1030                           ; 4 bytes @ 0x8
  1031  000009                     	ds	1
  1032  00000A                     Set_time@min:
  1033                           	opt stack 0
  1034  00000A                     Set_date@month:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x9
  1038  00000A                     	ds	1
  1039  00000B                     Read_hour@i:
  1040                           	opt stack 0
  1041                           
  1042                           ; 1 bytes @ 0xA
  1043  00000B                     	ds	1
  1044  00000C                     Read_hour@c:
  1045                           	opt stack 0
  1046  00000C                     Set_time@hour:
  1047                           	opt stack 0
  1048  00000C                     Set_date@year:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0xB
  1052  00000C                     	ds	1
  1053  00000D                     write_DAY@day_3:
  1054                           	opt stack 0
  1055                           
  1056                           ; 4 bytes @ 0xC
  1057  00000D                     	ds	1
  1058  00000E                     Set_time@mode:
  1059                           	opt stack 0
  1060  00000E                     Set_date@str6:
  1061                           	opt stack 0
  1062                           
  1063                           ; 30 bytes @ 0xD
  1064  00000E                     	ds	1
  1065  00000F                     Set_time@str3:
  1066                           	opt stack 0
  1067                           
  1068                           ; 37 bytes @ 0xE
  1069  00000F                     	ds	2
  1070  000011                     write_DAY@day_4:
  1071                           	opt stack 0
  1072                           
  1073                           ; 4 bytes @ 0x10
  1074  000011                     	ds	4
  1075  000015                     write_DAY@day_5:
  1076                           	opt stack 0
  1077                           
  1078                           ; 4 bytes @ 0x14
  1079  000015                     	ds	4
  1080  000019                     write_DAY@day_6:
  1081                           	opt stack 0
  1082                           
  1083                           ; 4 bytes @ 0x18
  1084  000019                     	ds	4
  1085  00001D                     write_DAY@day_7:
  1086                           	opt stack 0
  1087                           
  1088                           ; 4 bytes @ 0x1C
  1089  00001D                     	ds	4
  1090  000021                     write_DAY@day:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0x20
  1094  000021                     	ds	1
  1095  000022                     Read_time@mode:
  1096                           	opt stack 0
  1097                           
  1098                           ; 1 bytes @ 0x21
  1099  000022                     	ds	10
  1100  00002C                     Set_date@error:
  1101                           	opt stack 0
  1102                           
  1103                           ; 18 bytes @ 0x2B
  1104  00002C                     	ds	8
  1105  000034                     Set_time@error:
  1106                           	opt stack 0
  1107                           
  1108                           ; 18 bytes @ 0x33
  1109  000034                     	ds	10
  1110  00003E                     Set_date@x:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x3D
  1114  00003E                     	ds	1
  1115  00003F                     Set_date@y:
  1116                           	opt stack 0
  1117                           
  1118                           ; 1 bytes @ 0x3E
  1119  00003F                     	ds	1
  1120  000040                     Set_date@z:
  1121                           	opt stack 0
  1122                           
  1123                           ; 1 bytes @ 0x3F
  1124  000040                     	ds	6
  1125  000046                     Set_time@s:
  1126                           	opt stack 0
  1127                           
  1128                           ; 1 bytes @ 0x45
  1129  000046                     	ds	1
  1130  000047                     Set_time@m:
  1131                           	opt stack 0
  1132                           
  1133                           ; 1 bytes @ 0x46
  1134  000047                     	ds	1
  1135  000048                     Set_time@x:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x47
  1139  000048                     	ds	1
  1140  000049                     Set_time@y:
  1141                           	opt stack 0
  1142                           
  1143                           ; 1 bytes @ 0x48
  1144  000049                     	ds	1
  1145  00004A                     Set_time@z:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0x49
  1149  00004A                     	ds	1
  1150  00004B                     Set_time@h:
  1151                           	opt stack 0
  1152  00004B                     Set_day@error:
  1153                           	opt stack 0
  1154                           
  1155                           ; 18 bytes @ 0x4A
  1156  00004B                     	ds	18
  1157  00005D                     Set_day@day:
  1158                           	opt stack 0
  1159                           
  1160                           ; 1 bytes @ 0x5C
  1161  00005D                     	ds	1
  1162  00005E                     tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec1	equ	0xFE5
  1169                           fsr1l	equ	0xFE1
  1170                           
  1171                           ; 0 bytes @ 0x5D
  1172 ;;
  1173 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1174 ;;
  1175 ;; *************** function _main *****************
  1176 ;; Defined at:
  1177 ;;		line 74 in file "main.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  str7           35   77[BANK0 ] unsigned char [35]
  1182 ;;  str8           29  112[BANK0 ] unsigned char [29]
  1183 ;;  c               1  143[BANK0 ] unsigned char 
  1184 ;;  config1         1  142[BANK0 ] unsigned char 
  1185 ;;  mode            1  141[BANK0 ] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;		None               void
  1188 ;; Registers used:
  1189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0
  1196 ;;      Locals:         0      67       0       0       0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1198 ;;      Totals:         0      67       0       0       0       0       0       0       0
  1199 ;;Total ram usage:       67 bytes
  1200 ;; Hardware stack levels required when called:    6
  1201 ;; This function calls:
  1202 ;;		_Get_data
  1203 ;;		_OpenXLCD
  1204 ;;		_Read_char
  1205 ;;		_Read_time
  1206 ;;		_SetDDRamAddr
  1207 ;;		_UsartConfig
  1208 ;;		_WriteCmdXLCD
  1209 ;;		_Write_str
  1210 ;;		_Write_time_XLCD
  1211 ;;		_delay_ms
  1212 ;; This function is called by:
  1213 ;;		Startup code after reset
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text0
  1218  00784A                     __ptext0:
  1219                           	opt stack 0
  1220  00784A                     _main:
  1221                           	opt stack 25
  1222                           
  1223                           ;main.c: 76: unsigned char mode;
  1224                           ;main.c: 77: unsigned char str7[35] = "\nDo you want to set the time? y/n";
  1225                           
  1226                           ;incstack = 0
  1227  00784A  EE21  F000         	lfsr	2,main@F4700
  1228  00784E  EE10  F0AD         	lfsr	1,main@str7
  1229  007852  0E23               	movlw	35
  1230  007854                     u2701:
  1231  007854  CFDE FFE6          	movff	postinc2,postinc1
  1232  007858  2EE8               	decfsz	wreg,f,c
  1233  00785A  D7FC               	goto	u2701
  1234                           
  1235                           ;main.c: 78: unsigned char str8[29] = "Please enter a valid data..!";
  1236  00785C  EE21  F041         	lfsr	2,main@F4702
  1237  007860  EE10  F0D0         	lfsr	1,main@str8
  1238  007864  0E1D               	movlw	29
  1239  007866                     u2711:
  1240  007866  CFDE FFE6          	movff	postinc2,postinc1
  1241  00786A  2EE8               	decfsz	wreg,f,c
  1242  00786C  D7FC               	goto	u2711
  1243                           
  1244                           ;main.c: 79: unsigned char config1 = 0x00, c;
  1245  00786E  0E00               	movlw	0
  1246  007870  0100               	movlb	0	; () banked
  1247  007872  6FEE               	movwf	main@config1& (0+255),b
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;main.c: 80: config1 = (0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 &
      +                           0b11101111);
  1251  007874  0E2C               	movlw	44
  1252  007876  0100               	movlb	0	; () banked
  1253  007878  6FEE               	movwf	main@config1& (0+255),b
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;main.c: 81: SSPADD = ((20000000/100000)/4-1);;
  1257  00787A  0E31               	movlw	49
  1258  00787C  6EC8               	movwf	4040,c	;volatile
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;main.c: 82: UsartConfig(config1, ((20000000/9600/64)-1));
  1262  00787E  0E1F               	movlw	31
  1263  007880  6E07               	movwf	UsartConfig@config2,c
  1264  007882  0100               	movlb	0	; () banked
  1265  007884  51EE               	movf	main@config1& (0+255),w,b
  1266  007886  EC7E  F036         	call	_UsartConfig
  1267                           
  1268                           ;main.c: 83: OpenXLCD(0b00111100 & 0b00111000);
  1269  00788A  0E38               	movlw	56
  1270  00788C  EC4C  F03A         	call	_OpenXLCD
  1271                           
  1272                           ;main.c: 84: WriteCmdXLCD(0x0C);
  1273  007890  0E0C               	movlw	12
  1274  007892  EC2B  F037         	call	_WriteCmdXLCD
  1275  007896                     l3177:
  1276                           
  1277                           ;main.c: 86: {
  1278                           ;main.c: 87: Write_str(str7);
  1279  007896  0100               	movlb	0	; () banked
  1280  007898  0E00               	movlw	high main@str7
  1281  00789A  6E04               	movwf	Write_str@c+1,c
  1282  00789C  0100               	movlb	0	; () banked
  1283  00789E  0EAD               	movlw	low main@str7
  1284  0078A0  6E03               	movwf	Write_str@c,c
  1285  0078A2  EC75  F037         	call	_Write_str	;wreg free
  1286                           
  1287                           ;main.c: 88: c = Read_char();
  1288  0078A6  ECE9  F036         	call	_Read_char	;wreg free
  1289  0078AA  0100               	movlb	0	; () banked
  1290  0078AC  6FEF               	movwf	main@c& (0+255),b
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;main.c: 89: if((c== 'Y') || (c== 'y'))
  1294  0078AE  0100               	movlb	0	; () banked
  1295  0078B0  51EF               	movf	main@c& (0+255),w,b
  1296  0078B2  0A59               	xorlw	89
  1297  0078B4  B4D8               	btfsc	status,2,c
  1298  0078B6  D005               	goto	l3185
  1299                           
  1300                           ; BSR set to: 0
  1301  0078B8  0100               	movlb	0	; () banked
  1302  0078BA  51EF               	movf	main@c& (0+255),w,b
  1303  0078BC  0A79               	xorlw	121
  1304  0078BE  A4D8               	btfss	status,2,c
  1305  0078C0  D005               	goto	l3187
  1306  0078C2                     l3185:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;main.c: 90: mode = Get_data();
  1310  0078C2  ECBB  F03E         	call	_Get_data	;wreg free
  1311  0078C6  0100               	movlb	0	; () banked
  1312  0078C8  6FED               	movwf	main@mode& (0+255),b
  1313  0078CA  D012               	goto	l3195
  1314  0078CC                     l3187:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;main.c: 91: else if((c== 'N') || (c== 'n'))
  1318  0078CC  0100               	movlb	0	; () banked
  1319  0078CE  51EF               	movf	main@c& (0+255),w,b
  1320  0078D0  0A4E               	xorlw	78
  1321  0078D2  B4D8               	btfsc	status,2,c
  1322  0078D4  D021               	goto	l3203
  1323                           
  1324                           ; BSR set to: 0
  1325  0078D6  0100               	movlb	0	; () banked
  1326  0078D8  51EF               	movf	main@c& (0+255),w,b
  1327  0078DA  0A6E               	xorlw	110
  1328  0078DC  B4D8               	btfsc	status,2,c
  1329  0078DE  D01C               	goto	l3203
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;main.c: 93: else
  1333                           ;main.c: 94: Write_str(str8);
  1334                           
  1335                           ; BSR set to: 0
  1336                           
  1337                           ; BSR set to: 0
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;main.c: 92: break;
  1341  0078E0  0100               	movlb	0	; () banked
  1342  0078E2  0E00               	movlw	high main@str8
  1343  0078E4  6E04               	movwf	Write_str@c+1,c
  1344  0078E6  0100               	movlb	0	; () banked
  1345  0078E8  0ED0               	movlw	low main@str8
  1346  0078EA  6E03               	movwf	Write_str@c,c
  1347  0078EC  EC75  F037         	call	_Write_str	;wreg free
  1348  0078F0                     l3195:
  1349                           
  1350                           ;main.c: 95: }while(!((c== 'Y') || (c== 'y') || (c== 'N') || (c== 'n'))) ;
  1351  0078F0  0100               	movlb	0	; () banked
  1352  0078F2  51EF               	movf	main@c& (0+255),w,b
  1353  0078F4  0A59               	xorlw	89
  1354  0078F6  B4D8               	btfsc	status,2,c
  1355  0078F8  D00F               	goto	l3203
  1356                           
  1357                           ; BSR set to: 0
  1358  0078FA  0100               	movlb	0	; () banked
  1359  0078FC  51EF               	movf	main@c& (0+255),w,b
  1360  0078FE  0A79               	xorlw	121
  1361  007900  B4D8               	btfsc	status,2,c
  1362  007902  D00A               	goto	l3203
  1363                           
  1364                           ; BSR set to: 0
  1365  007904  0100               	movlb	0	; () banked
  1366  007906  51EF               	movf	main@c& (0+255),w,b
  1367  007908  0A4E               	xorlw	78
  1368  00790A  B4D8               	btfsc	status,2,c
  1369  00790C  D005               	goto	l3203
  1370                           
  1371                           ; BSR set to: 0
  1372  00790E  0100               	movlb	0	; () banked
  1373  007910  51EF               	movf	main@c& (0+255),w,b
  1374  007912  0A6E               	xorlw	110
  1375  007914  A4D8               	btfss	status,2,c
  1376  007916  D7BF               	goto	l3177
  1377  007918                     l3203:
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;main.c: 96: WriteCmdXLCD(0x01);
  1381  007918  0E01               	movlw	1
  1382  00791A  EC2B  F037         	call	_WriteCmdXLCD
  1383                           
  1384                           ;main.c: 97: SetDDRamAddr(0x80);
  1385  00791E  0E80               	movlw	128
  1386  007920  EC3E  F038         	call	_SetDDRamAddr
  1387  007924                     l3205:
  1388                           
  1389                           ;main.c: 99: {
  1390                           ;main.c: 100: Read_time(mode);
  1391  007924  0100               	movlb	0	; () banked
  1392  007926  51ED               	movf	main@mode& (0+255),w,b
  1393  007928  EC45  F03B         	call	_Read_time
  1394                           
  1395                           ;main.c: 101: Write_str(time);
  1396  00792C  0100               	movlb	0	; () banked
  1397  00792E  0E00               	movlw	high _time
  1398  007930  6E04               	movwf	Write_str@c+1,c
  1399  007932  0100               	movlb	0	; () banked
  1400  007934  0EFB               	movlw	low _time
  1401  007936  6E03               	movwf	Write_str@c,c
  1402  007938  EC75  F037         	call	_Write_str	;wreg free
  1403                           
  1404                           ;main.c: 102: Write_time_XLCD(time);
  1405  00793C  0100               	movlb	0	; () banked
  1406  00793E  0E00               	movlw	high _time
  1407  007940  6E05               	movwf	Write_time_XLCD@str+1,c
  1408  007942  0100               	movlb	0	; () banked
  1409  007944  0EFB               	movlw	low _time
  1410  007946  6E04               	movwf	Write_time_XLCD@str,c
  1411  007948  EC90  F038         	call	_Write_time_XLCD	;wreg free
  1412                           
  1413                           ;main.c: 103: delay_ms(10);
  1414  00794C  0E0A               	movlw	10
  1415  00794E  ECB1  F036         	call	_delay_ms
  1416  007952  D7E8               	goto	l3205
  1417  007954                     __end_of_main:
  1418                           	opt stack 0
  1419                           tblptru	equ	0xFF8
  1420                           tblptrh	equ	0xFF7
  1421                           tblptrl	equ	0xFF6
  1422                           tablat	equ	0xFF5
  1423                           postinc0	equ	0xFEE
  1424                           wreg	equ	0xFE8
  1425                           postinc1	equ	0xFE6
  1426                           postdec1	equ	0xFE5
  1427                           fsr1l	equ	0xFE1
  1428                           postinc2	equ	0xFDE
  1429                           status	equ	0xFD8
  1430                           
  1431 ;; *************** function _Write_time_XLCD *****************
  1432 ;; Defined at:
  1433 ;;		line 124 in file "xlcd.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  str             2    3[COMRAM] PTR unsigned char 
  1436 ;;		 -> time(2), 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  i               1    5[COMRAM] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;		None               void
  1441 ;; Registers used:
  1442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1448 ;;      Params:         2       0       0       0       0       0       0       0       0
  1449 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1451 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1452 ;;Total ram usage:        3 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    3
  1455 ;; This function calls:
  1456 ;;		_WriteCmdXLCD
  1457 ;;		_WriteDataXLCD
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text1
  1464  007120                     __ptext1:
  1465                           	opt stack 0
  1466  007120                     _Write_time_XLCD:
  1467                           	opt stack 27
  1468                           
  1469                           ;incstack = 0
  1470  007120  0E00               	movlw	0
  1471  007122  6E06               	movwf	Write_time_XLCD@i,c
  1472                           
  1473                           ;xlcd.c: 126: WriteCmdXLCD(0x80);
  1474  007124  0E80               	movlw	128
  1475  007126  EC2B  F037         	call	_WriteCmdXLCD
  1476                           
  1477                           ;xlcd.c: 127: while(i!=16)
  1478  00712A  D00A               	goto	l3115
  1479  00712C                     l3109:
  1480                           
  1481                           ;xlcd.c: 128: {
  1482                           ;xlcd.c: 129: WriteDataXLCD(*str);
  1483  00712C  C004  FFD9         	movff	Write_time_XLCD@str,fsr2l
  1484  007130  C005  FFDA         	movff	Write_time_XLCD@str+1,fsr2h
  1485  007134  50DF               	movf	indf2,w,c
  1486  007136  EC3C  F037         	call	_WriteDataXLCD
  1487                           
  1488                           ;xlcd.c: 130: str++;
  1489  00713A  4A04               	infsnz	Write_time_XLCD@str,f,c
  1490  00713C  2A05               	incf	Write_time_XLCD@str+1,f,c
  1491                           
  1492                           ;xlcd.c: 131: i++;
  1493  00713E  2A06               	incf	Write_time_XLCD@i,f,c
  1494  007140                     l3115:
  1495  007140  5006               	movf	Write_time_XLCD@i,w,c
  1496  007142  0A10               	xorlw	16
  1497  007144  A4D8               	btfss	status,2,c
  1498  007146  D7F2               	goto	l3109
  1499                           
  1500                           ;xlcd.c: 132: }
  1501                           ;xlcd.c: 133: str++;
  1502  007148  4A04               	infsnz	Write_time_XLCD@str,f,c
  1503  00714A  2A05               	incf	Write_time_XLCD@str+1,f,c
  1504                           
  1505                           ;xlcd.c: 134: i=17;
  1506  00714C  0E11               	movlw	17
  1507  00714E  6E06               	movwf	Write_time_XLCD@i,c
  1508                           
  1509                           ;xlcd.c: 135: WriteCmdXLCD(0xC0);
  1510  007150  0EC0               	movlw	192
  1511  007152  EC2B  F037         	call	_WriteCmdXLCD
  1512                           
  1513                           ;xlcd.c: 136: while(i!=32)
  1514  007156  D00A               	goto	l3129
  1515  007158                     l3123:
  1516                           
  1517                           ;xlcd.c: 137: {
  1518                           ;xlcd.c: 138: WriteDataXLCD(*str);
  1519  007158  C004  FFD9         	movff	Write_time_XLCD@str,fsr2l
  1520  00715C  C005  FFDA         	movff	Write_time_XLCD@str+1,fsr2h
  1521  007160  50DF               	movf	indf2,w,c
  1522  007162  EC3C  F037         	call	_WriteDataXLCD
  1523                           
  1524                           ;xlcd.c: 139: str++;
  1525  007166  4A04               	infsnz	Write_time_XLCD@str,f,c
  1526  007168  2A05               	incf	Write_time_XLCD@str+1,f,c
  1527                           
  1528                           ;xlcd.c: 140: i++;
  1529  00716A  2A06               	incf	Write_time_XLCD@i,f,c
  1530  00716C                     l3129:
  1531  00716C  5006               	movf	Write_time_XLCD@i,w,c
  1532  00716E  0A20               	xorlw	32
  1533  007170  B4D8               	btfsc	status,2,c
  1534  007172  0012               	return	
  1535  007174  D7F1               	goto	l3123
  1536  007176                     __end_of_Write_time_XLCD:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           postinc1	equ	0xFE6
  1545                           postdec1	equ	0xFE5
  1546                           fsr1l	equ	0xFE1
  1547                           indf2	equ	0xFDF
  1548                           postinc2	equ	0xFDE
  1549                           fsr2h	equ	0xFDA
  1550                           fsr2l	equ	0xFD9
  1551                           status	equ	0xFD8
  1552                           
  1553 ;; *************** function _WriteDataXLCD *****************
  1554 ;; Defined at:
  1555 ;;		line 62 in file "xlcd.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  data            1    wreg     unsigned char 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  data            1    2[COMRAM] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;		None               void
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0
  1570 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1572 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1573 ;;Total ram usage:        1 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    2
  1576 ;; This function calls:
  1577 ;;		_DelayFor18TCY
  1578 ;; This function is called by:
  1579 ;;		_Write_time_XLCD
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text2
  1584  006E78                     __ptext2:
  1585                           	opt stack 0
  1586  006E78                     _WriteDataXLCD:
  1587                           	opt stack 27
  1588                           
  1589                           ;incstack = 0
  1590                           ;WriteDataXLCD@data stored from wreg
  1591  006E78  6E03               	movwf	WriteDataXLCD@data,c
  1592                           
  1593                           ;xlcd.c: 65: TRISD = 0;
  1594  006E7A  0E00               	movlw	0
  1595  006E7C  6E95               	movwf	3989,c	;volatile
  1596                           
  1597                           ;xlcd.c: 66: PORTD = data;
  1598  006E7E  C003  FF83         	movff	WriteDataXLCD@data,3971	;volatile
  1599                           
  1600                           ;xlcd.c: 67: LATAbits.LATA2 = 1;
  1601  006E82  8489               	bsf	3977,2,c	;volatile
  1602                           
  1603                           ;xlcd.c: 68: LATAbits.LATA1 = 0;
  1604  006E84  9289               	bcf	3977,1,c	;volatile
  1605                           
  1606                           ;xlcd.c: 69: DelayFor18TCY();
  1607  006E86  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  1608                           
  1609                           ;xlcd.c: 70: LATAbits.LATA0 = 1;
  1610  006E8A  8089               	bsf	3977,0,c	;volatile
  1611                           
  1612                           ;xlcd.c: 71: DelayFor18TCY();
  1613  006E8C  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  1614                           
  1615                           ;xlcd.c: 72: LATAbits.LATA0 = 0;
  1616  006E90  9089               	bcf	3977,0,c	;volatile
  1617                           
  1618                           ;xlcd.c: 73: DelayFor18TCY();
  1619  006E92  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  1620                           
  1621                           ;xlcd.c: 74: LATAbits.LATA2 = 0;
  1622  006E96  9489               	bcf	3977,2,c	;volatile
  1623                           
  1624                           ;xlcd.c: 75: TRISD = 0xff;
  1625  006E98  6895               	setf	3989,c	;volatile
  1626                           
  1627                           ;xlcd.c: 77: return;
  1628  006E9A  0012               	return	
  1629  006E9C                     __end_of_WriteDataXLCD:
  1630                           	opt stack 0
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           postinc0	equ	0xFEE
  1636                           wreg	equ	0xFE8
  1637                           postinc1	equ	0xFE6
  1638                           postdec1	equ	0xFE5
  1639                           fsr1l	equ	0xFE1
  1640                           indf2	equ	0xFDF
  1641                           postinc2	equ	0xFDE
  1642                           fsr2h	equ	0xFDA
  1643                           fsr2l	equ	0xFD9
  1644                           status	equ	0xFD8
  1645                           
  1646 ;; *************** function _UsartConfig *****************
  1647 ;; Defined at:
  1648 ;;		line 21 in file "uart.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  config1         1    wreg     unsigned char 
  1651 ;;  config2         1    6[COMRAM] unsigned char 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  config1         1    7[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;		None               void
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1663 ;;      Params:         1       0       0       0       0       0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1666 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1667 ;;Total ram usage:        2 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    1
  1670 ;; This function calls:
  1671 ;;		_OpenUSART
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text3
  1678  006CFC                     __ptext3:
  1679                           	opt stack 0
  1680  006CFC                     _UsartConfig:
  1681                           	opt stack 29
  1682                           
  1683                           ;incstack = 0
  1684                           ;UsartConfig@config1 stored from wreg
  1685  006CFC  6E08               	movwf	UsartConfig@config1,c
  1686                           
  1687                           ;uart.c: 23: OpenUSART( config1, config2);
  1688  006CFE  C007  F001         	movff	UsartConfig@config2,OpenUSART@spbrg
  1689  006D02  6A02               	clrf	OpenUSART@spbrg+1,c
  1690  006D04  5008               	movf	UsartConfig@config1,w,c
  1691  006D06  ECA9  F039         	call	_OpenUSART
  1692  006D0A  0012               	return	
  1693  006D0C                     __end_of_UsartConfig:
  1694                           	opt stack 0
  1695                           tblptru	equ	0xFF8
  1696                           tblptrh	equ	0xFF7
  1697                           tblptrl	equ	0xFF6
  1698                           tablat	equ	0xFF5
  1699                           postinc0	equ	0xFEE
  1700                           wreg	equ	0xFE8
  1701                           postinc1	equ	0xFE6
  1702                           postdec1	equ	0xFE5
  1703                           fsr1l	equ	0xFE1
  1704                           indf2	equ	0xFDF
  1705                           postinc2	equ	0xFDE
  1706                           fsr2h	equ	0xFDA
  1707                           fsr2l	equ	0xFD9
  1708                           status	equ	0xFD8
  1709                           
  1710 ;; *************** function _OpenUSART *****************
  1711 ;; Defined at:
  1712 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  config          1    wreg     unsigned char 
  1715 ;;  spbrg           2    0[COMRAM] unsigned int 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  config          1    5[COMRAM] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;		None               void
  1720 ;; Registers used:
  1721 ;;		wreg, status,2
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1727 ;;      Params:         2       0       0       0       0       0       0       0       0
  1728 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1729 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1730 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1731 ;;Total ram usage:        6 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_UsartConfig
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text4
  1741  007352                     __ptext4:
  1742                           	opt stack 0
  1743  007352                     _OpenUSART:
  1744                           	opt stack 29
  1745                           
  1746                           ;incstack = 0
  1747                           ;OpenUSART@config stored from wreg
  1748  007352  6E06               	movwf	OpenUSART@config,c
  1749  007354  0E00               	movlw	0
  1750  007356  6EAC               	movwf	4012,c	;volatile
  1751  007358  0E00               	movlw	0
  1752  00735A  6EAB               	movwf	4011,c	;volatile
  1753  00735C  B006               	btfsc	OpenUSART@config,0,c
  1754  00735E  88AC               	bsf	4012,4,c	;volatile
  1755  007360  A206               	btfss	OpenUSART@config,1,c
  1756  007362  D002               	goto	l2895
  1757  007364  8CAC               	bsf	4012,6,c	;volatile
  1758  007366  8CAB               	bsf	4011,6,c	;volatile
  1759  007368                     l2895:
  1760  007368  B406               	btfsc	OpenUSART@config,2,c
  1761  00736A  8EAC               	bsf	4012,7,c	;volatile
  1762  00736C  A606               	btfss	OpenUSART@config,3,c
  1763  00736E  D002               	goto	l501
  1764  007370  88AB               	bsf	4011,4,c	;volatile
  1765  007372  D001               	goto	l2903
  1766  007374                     l501:
  1767  007374  8AAB               	bsf	4011,5,c	;volatile
  1768  007376                     l2903:
  1769  007376  B806               	btfsc	OpenUSART@config,4,c
  1770  007378  84AC               	bsf	4012,2,c	;volatile
  1771  00737A  989E               	bcf	3998,4,c	;volatile
  1772  00737C  BA06               	btfsc	OpenUSART@config,5,c
  1773  00737E  86AB               	bsf	4011,3,c	;volatile
  1774  007380  AC06               	btfss	OpenUSART@config,6,c
  1775  007382  D002               	goto	l505
  1776  007384  8A9D               	bsf	3997,5,c	;volatile
  1777  007386  D001               	goto	l506
  1778  007388                     l505:
  1779  007388  9A9D               	bcf	3997,5,c	;volatile
  1780  00738A                     l506:
  1781  00738A  9A9E               	bcf	3998,5,c	;volatile
  1782  00738C  AE06               	btfss	OpenUSART@config,7,c
  1783  00738E  D002               	goto	l507
  1784  007390  889D               	bsf	3997,4,c	;volatile
  1785  007392  D001               	goto	l508
  1786  007394                     l507:
  1787  007394  989D               	bcf	3997,4,c	;volatile
  1788  007396                     l508:
  1789  007396  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1790  00739A  C002  F003         	movff	OpenUSART@spbrg+1,??_OpenUSART
  1791  00739E  C003  F004         	movff	??_OpenUSART,??_OpenUSART+1
  1792  0073A2  6A05               	clrf	(??_OpenUSART+2)& (0+255),c
  1793  0073A4  5004               	movf	??_OpenUSART+1,w,c
  1794  0073A6  6EB0               	movwf	4016,c	;volatile
  1795  0073A8  8AAC               	bsf	4012,5,c	;volatile
  1796  0073AA  8EAB               	bsf	4011,7,c	;volatile
  1797  0073AC  9C94               	bcf	3988,6,c	;volatile
  1798  0073AE  8E94               	bsf	3988,7,c	;volatile
  1799  0073B0  B8AC               	btfsc	4012,4,c	;volatile
  1800  0073B2  BEAC               	btfsc	4012,7,c	;volatile
  1801  0073B4  D001               	goto	l510
  1802  0073B6  8C94               	bsf	3988,6,c	;volatile
  1803  0073B8                     l510:
  1804  0073B8  0012               	return	
  1805  0073BA                     __end_of_OpenUSART:
  1806                           	opt stack 0
  1807                           tblptru	equ	0xFF8
  1808                           tblptrh	equ	0xFF7
  1809                           tblptrl	equ	0xFF6
  1810                           tablat	equ	0xFF5
  1811                           postinc0	equ	0xFEE
  1812                           wreg	equ	0xFE8
  1813                           postinc1	equ	0xFE6
  1814                           postdec1	equ	0xFE5
  1815                           fsr1l	equ	0xFE1
  1816                           indf2	equ	0xFDF
  1817                           postinc2	equ	0xFDE
  1818                           fsr2h	equ	0xFDA
  1819                           fsr2l	equ	0xFD9
  1820                           status	equ	0xFD8
  1821                           
  1822 ;; *************** function _Read_time *****************
  1823 ;; Defined at:
  1824 ;;		line 100 in file "i2c_1.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  mode            1    wreg     unsigned char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  mode            1   33[COMRAM] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;		None               void
  1831 ;; Registers used:
  1832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1838 ;;      Params:         0       0       0       0       0       0       0       0       0
  1839 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1841 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1842 ;;Total ram usage:        1 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    5
  1845 ;; This function calls:
  1846 ;;		_Clear_array
  1847 ;;		_CloseI2C
  1848 ;;		_IdleI2C
  1849 ;;		_OpenI2C
  1850 ;;		_Read_date
  1851 ;;		_Read_day
  1852 ;;		_Read_hour
  1853 ;;		_Read_min
  1854 ;;		_Read_month
  1855 ;;		_Read_sec
  1856 ;;		_Read_year
  1857 ;;		_Write_I2C
  1858 ;;		_delay_ms
  1859 ;;		_delay_us
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text5
  1866  00768A                     __ptext5:
  1867                           	opt stack 0
  1868  00768A                     _Read_time:
  1869                           	opt stack 25
  1870                           
  1871                           ;incstack = 0
  1872                           ;Read_time@mode stored from wreg
  1873  00768A  6E22               	movwf	Read_time@mode,c
  1874                           
  1875                           ;i2c_1.c: 102: OpenI2C(0b00001000, 0b10000000);
  1876  00768C  0E80               	movlw	128
  1877  00768E  6E01               	movwf	OpenI2C@slew,c
  1878  007690  0E08               	movlw	8
  1879  007692  ECDA  F036         	call	_OpenI2C
  1880                           
  1881                           ;i2c_1.c: 103: delay_ms(1);
  1882  007696  0E01               	movlw	1
  1883  007698  ECB1  F036         	call	_delay_ms
  1884                           
  1885                           ;i2c_1.c: 104: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  1886  00769C  80C5               	bsf	4037,0,c	;volatile
  1887  00769E                     l344:
  1888  00769E  B0C5               	btfsc	4037,0,c	;volatile
  1889  0076A0  D7FE               	goto	l344
  1890                           
  1891                           ;i2c_1.c: 105: delay_us(10);
  1892  0076A2  0E0A               	movlw	10
  1893  0076A4  ECBE  F036         	call	_delay_us
  1894                           
  1895                           ;i2c_1.c: 106: Write_I2C(0xD0);
  1896  0076A8  0ED0               	movlw	208
  1897  0076AA  EC5F  F036         	call	_Write_I2C
  1898                           
  1899                           ;i2c_1.c: 107: delay_ms(1);
  1900  0076AE  0E01               	movlw	1
  1901  0076B0  ECB1  F036         	call	_delay_ms
  1902                           
  1903                           ;i2c_1.c: 108: Write_I2C(0x00);
  1904  0076B4  0E00               	movlw	0
  1905  0076B6  EC5F  F036         	call	_Write_I2C
  1906                           
  1907                           ;i2c_1.c: 109: delay_ms(10);
  1908  0076BA  0E0A               	movlw	10
  1909  0076BC  ECB1  F036         	call	_delay_ms
  1910                           
  1911                           ;i2c_1.c: 110: Clear_array(time, 33);
  1912  0076C0  0100               	movlb	0	; () banked
  1913  0076C2  0E00               	movlw	high _time
  1914  0076C4  6E02               	movwf	Clear_array@e+1,c
  1915  0076C6  0100               	movlb	0	; () banked
  1916  0076C8  0EFB               	movlw	low _time
  1917  0076CA  6E01               	movwf	Clear_array@e,c
  1918  0076CC  0E21               	movlw	33
  1919  0076CE  6E03               	movwf	Clear_array@n,c
  1920  0076D0  EC09  F037         	call	_Clear_array	;wreg free
  1921                           
  1922                           ;i2c_1.c: 111: Read_sec(time);
  1923  0076D4  0100               	movlb	0	; () banked
  1924  0076D6  0E00               	movlw	high _time
  1925  0076D8  6E07               	movwf	Read_sec@e+1,c
  1926  0076DA  0100               	movlb	0	; () banked
  1927  0076DC  0EFB               	movlw	low _time
  1928  0076DE  6E06               	movwf	Read_sec@e,c
  1929  0076E0  EC19  F038         	call	_Read_sec	;wreg free
  1930                           
  1931                           ;i2c_1.c: 112: Read_min(time);
  1932  0076E4  0100               	movlb	0	; () banked
  1933  0076E6  0E00               	movlw	high _time
  1934  0076E8  6E07               	movwf	Read_min@e+1,c
  1935  0076EA  0100               	movlb	0	; () banked
  1936  0076EC  0EFB               	movlw	low _time
  1937  0076EE  6E06               	movwf	Read_min@e,c
  1938  0076F0  ECCF  F037         	call	_Read_min	;wreg free
  1939                           
  1940                           ;i2c_1.c: 113: Read_hour(time, mode);
  1941  0076F4  0100               	movlb	0	; () banked
  1942  0076F6  0E00               	movlw	high _time
  1943  0076F8  6E07               	movwf	Read_hour@e+1,c
  1944  0076FA  0100               	movlb	0	; () banked
  1945  0076FC  0EFB               	movlw	low _time
  1946  0076FE  6E06               	movwf	Read_hour@e,c
  1947  007700  C022  F008         	movff	Read_time@mode,Read_hour@mode
  1948  007704  ECEA  F03A         	call	_Read_hour	;wreg free
  1949                           
  1950                           ;i2c_1.c: 114: Read_day();
  1951  007708  EC52  F036         	call	_Read_day	;wreg free
  1952                           
  1953                           ;i2c_1.c: 115: Read_date(time);
  1954  00770C  0100               	movlb	0	; () banked
  1955  00770E  0E00               	movlw	high _time
  1956  007710  6E07               	movwf	Read_date@e+1,c
  1957  007712  0100               	movlb	0	; () banked
  1958  007714  0EFB               	movlw	low _time
  1959  007716  6E06               	movwf	Read_date@e,c
  1960  007718  ECE7  F038         	call	_Read_date	;wreg free
  1961                           
  1962                           ;i2c_1.c: 116: Read_month(time);
  1963  00771C  0100               	movlb	0	; () banked
  1964  00771E  0E00               	movlw	high _time
  1965  007720  6E07               	movwf	Read_month@e+1,c
  1966  007722  0100               	movlb	0	; () banked
  1967  007724  0EFB               	movlw	low _time
  1968  007726  6E06               	movwf	Read_month@e,c
  1969  007728  ECF4  F037         	call	_Read_month	;wreg free
  1970                           
  1971                           ;i2c_1.c: 117: Read_year(time);
  1972  00772C  0100               	movlb	0	; () banked
  1973  00772E  0E00               	movlw	high _time
  1974  007730  6E07               	movwf	Read_year@e+1,c
  1975  007732  0100               	movlb	0	; () banked
  1976  007734  0EFB               	movlw	low _time
  1977  007736  6E06               	movwf	Read_year@e,c
  1978  007738  ECBB  F038         	call	_Read_year	;wreg free
  1979                           
  1980                           ;i2c_1.c: 118: IdleI2C();
  1981  00773C  EC66  F036         	call	_IdleI2C	;wreg free
  1982                           
  1983                           ;i2c_1.c: 119: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  1984  007740  8AC5               	bsf	4037,5,c	;volatile
  1985  007742  88C5               	bsf	4037,4,c	;volatile
  1986  007744                     l347:
  1987  007744  B8C5               	btfsc	4037,4,c	;volatile
  1988  007746  D7FE               	goto	l347
  1989                           
  1990                           ;i2c_1.c: 120: IdleI2C();
  1991  007748  EC66  F036         	call	_IdleI2C	;wreg free
  1992                           
  1993                           ;i2c_1.c: 121: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  1994  00774C  84C5               	bsf	4037,2,c	;volatile
  1995  00774E                     l350:
  1996  00774E  B4C5               	btfsc	4037,2,c	;volatile
  1997  007750  D7FE               	goto	l350
  1998                           
  1999                           ;i2c_1.c: 122: CloseI2C();
  2000  007752  EC47  F036         	call	_CloseI2C	;wreg free
  2001  007756  0012               	return	
  2002  007758                     __end_of_Read_time:
  2003                           	opt stack 0
  2004                           tblptru	equ	0xFF8
  2005                           tblptrh	equ	0xFF7
  2006                           tblptrl	equ	0xFF6
  2007                           tablat	equ	0xFF5
  2008                           postinc0	equ	0xFEE
  2009                           wreg	equ	0xFE8
  2010                           postinc1	equ	0xFE6
  2011                           postdec1	equ	0xFE5
  2012                           fsr1l	equ	0xFE1
  2013                           indf2	equ	0xFDF
  2014                           postinc2	equ	0xFDE
  2015                           fsr2h	equ	0xFDA
  2016                           fsr2l	equ	0xFD9
  2017                           status	equ	0xFD8
  2018                           
  2019 ;; *************** function _delay_us *****************
  2020 ;; Defined at:
  2021 ;;		line 27 in file "delay.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  t               1    wreg     unsigned char 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  t               1    1[COMRAM] unsigned char 
  2026 ;;  i               1    2[COMRAM] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;		None               void
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2036 ;;      Params:         0       0       0       0       0       0       0       0       0
  2037 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2039 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2040 ;;Total ram usage:        2 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    1
  2043 ;; This function calls:
  2044 ;;		_Delay1KTCYx
  2045 ;; This function is called by:
  2046 ;;		_Read_time
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text6
  2051  006D7C                     __ptext6:
  2052                           	opt stack 0
  2053  006D7C                     _delay_us:
  2054                           	opt stack 28
  2055                           
  2056                           ;incstack = 0
  2057                           ;delay_us@t stored from wreg
  2058  006D7C  6E02               	movwf	delay_us@t,c
  2059                           
  2060                           ;delay.c: 29: unsigned char i;
  2061                           ;delay.c: 30: for (i=0;i<=t;i++)
  2062  006D7E  0E00               	movlw	0
  2063  006D80  6E03               	movwf	delay_us@i,c
  2064  006D82  D004               	goto	l2457
  2065  006D84                     l2453:
  2066                           
  2067                           ;delay.c: 31: Delay1KTCYx(1);
  2068  006D84  0E01               	movlw	1
  2069  006D86  EC6E  F036         	call	_Delay1KTCYx
  2070  006D8A  2A03               	incf	delay_us@i,f,c
  2071  006D8C                     l2457:
  2072  006D8C  5003               	movf	delay_us@i,w,c
  2073  006D8E  5C02               	subwf	delay_us@t,w,c
  2074  006D90  A0D8               	btfss	status,0,c
  2075                           
  2076                           ;delay.c: 34: return;
  2077  006D92  0012               	return	
  2078  006D94  D7F7               	goto	l2453
  2079  006D96                     __end_of_delay_us:
  2080                           	opt stack 0
  2081                           tblptru	equ	0xFF8
  2082                           tblptrh	equ	0xFF7
  2083                           tblptrl	equ	0xFF6
  2084                           tablat	equ	0xFF5
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           postinc1	equ	0xFE6
  2088                           postdec1	equ	0xFE5
  2089                           fsr1l	equ	0xFE1
  2090                           indf2	equ	0xFDF
  2091                           postinc2	equ	0xFDE
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _Read_year *****************
  2097 ;; Defined at:
  2098 ;;		line 369 in file "time.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  e               2    5[COMRAM] PTR unsigned char 
  2101 ;;		 -> time(2), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  c               1    7[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;		None               void
  2106 ;; Registers used:
  2107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2113 ;;      Params:         2       0       0       0       0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2116 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2117 ;;Total ram usage:        3 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		_Read
  2122 ;; This function is called by:
  2123 ;;		_Read_time
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text7
  2128  007176                     __ptext7:
  2129                           	opt stack 0
  2130  007176                     _Read_year:
  2131                           	opt stack 25
  2132                           
  2133                           ;time.c: 371: unsigned char c;
  2134                           ;time.c: 372: e= e+30;
  2135                           
  2136                           ;incstack = 0
  2137  007176  0E1E               	movlw	30
  2138  007178  2406               	addwf	Read_year@e,w,c
  2139  00717A  6E06               	movwf	Read_year@e,c
  2140  00717C  0E00               	movlw	0
  2141  00717E  2007               	addwfc	Read_year@e+1,w,c
  2142  007180  6E07               	movwf	Read_year@e+1,c
  2143                           
  2144                           ;time.c: 373: c = Read();
  2145  007182  ECF9  F036         	call	_Read	;wreg free
  2146  007186  6E08               	movwf	Read_year@c,c
  2147                           
  2148                           ;time.c: 374: *e = (c>>4) + '0';
  2149  007188  3808               	swapf	Read_year@c,w,c
  2150  00718A  0B0F               	andlw	15
  2151  00718C  0F30               	addlw	48
  2152  00718E  C006  FFD9         	movff	Read_year@e,fsr2l
  2153  007192  C007  FFDA         	movff	Read_year@e+1,fsr2h
  2154  007196  6EDF               	movwf	indf2,c
  2155                           
  2156                           ;time.c: 375: e++;
  2157  007198  4A06               	infsnz	Read_year@e,f,c
  2158  00719A  2A07               	incf	Read_year@e+1,f,c
  2159                           
  2160                           ;time.c: 376: *e = (c&0x0F) + '0';
  2161  00719C  5008               	movf	Read_year@c,w,c
  2162  00719E  0B0F               	andlw	15
  2163  0071A0  0F30               	addlw	48
  2164  0071A2  C006  FFD9         	movff	Read_year@e,fsr2l
  2165  0071A6  C007  FFDA         	movff	Read_year@e+1,fsr2h
  2166  0071AA  6EDF               	movwf	indf2,c
  2167                           
  2168                           ;time.c: 377: e++;
  2169  0071AC  4A06               	infsnz	Read_year@e,f,c
  2170  0071AE  2A07               	incf	Read_year@e+1,f,c
  2171                           
  2172                           ;time.c: 378: *e = '\r';
  2173  0071B0  C006  FFD9         	movff	Read_year@e,fsr2l
  2174  0071B4  C007  FFDA         	movff	Read_year@e+1,fsr2h
  2175  0071B8  0E0D               	movlw	13
  2176  0071BA  6EDF               	movwf	indf2,c
  2177                           
  2178                           ;time.c: 379: e++;
  2179  0071BC  4A06               	infsnz	Read_year@e,f,c
  2180  0071BE  2A07               	incf	Read_year@e+1,f,c
  2181                           
  2182                           ;time.c: 380: *e = '\0';
  2183  0071C0  C006  FFD9         	movff	Read_year@e,fsr2l
  2184  0071C4  C007  FFDA         	movff	Read_year@e+1,fsr2h
  2185  0071C8  0E00               	movlw	0
  2186  0071CA  6EDF               	movwf	indf2,c
  2187  0071CC  0012               	return	
  2188  0071CE                     __end_of_Read_year:
  2189                           	opt stack 0
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           postinc1	equ	0xFE6
  2197                           postdec1	equ	0xFE5
  2198                           fsr1l	equ	0xFE1
  2199                           indf2	equ	0xFDF
  2200                           postinc2	equ	0xFDE
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function _Read_sec *****************
  2206 ;; Defined at:
  2207 ;;		line 223 in file "time.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  e               2    5[COMRAM] PTR unsigned char 
  2210 ;;		 -> time(2), 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  c               1    7[COMRAM] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;		None               void
  2215 ;; Registers used:
  2216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2222 ;;      Params:         2       0       0       0       0       0       0       0       0
  2223 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2225 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2226 ;;Total ram usage:        3 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    4
  2229 ;; This function calls:
  2230 ;;		_Read
  2231 ;; This function is called by:
  2232 ;;		_Read_time
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text8
  2237  007032                     __ptext8:
  2238                           	opt stack 0
  2239  007032                     _Read_sec:
  2240                           	opt stack 25
  2241                           
  2242                           ;time.c: 225: unsigned char c;
  2243                           ;time.c: 226: e=e+6;
  2244                           
  2245                           ;incstack = 0
  2246  007032  0E06               	movlw	6
  2247  007034  2406               	addwf	Read_sec@e,w,c
  2248  007036  6E06               	movwf	Read_sec@e,c
  2249  007038  0E00               	movlw	0
  2250  00703A  2007               	addwfc	Read_sec@e+1,w,c
  2251  00703C  6E07               	movwf	Read_sec@e+1,c
  2252                           
  2253                           ;time.c: 227: c = Read();
  2254  00703E  ECF9  F036         	call	_Read	;wreg free
  2255  007042  6E08               	movwf	Read_sec@c,c
  2256                           
  2257                           ;time.c: 228: *e = ((c>>4)&0x07) + '0';
  2258  007044  3808               	swapf	Read_sec@c,w,c
  2259  007046  0B0F               	andlw	15
  2260  007048  0B07               	andlw	7
  2261  00704A  0F30               	addlw	48
  2262  00704C  C006  FFD9         	movff	Read_sec@e,fsr2l
  2263  007050  C007  FFDA         	movff	Read_sec@e+1,fsr2h
  2264  007054  6EDF               	movwf	indf2,c
  2265                           
  2266                           ;time.c: 229: e++;
  2267  007056  4A06               	infsnz	Read_sec@e,f,c
  2268  007058  2A07               	incf	Read_sec@e+1,f,c
  2269                           
  2270                           ;time.c: 230: *e = (c&0x0F) + '0';
  2271  00705A  5008               	movf	Read_sec@c,w,c
  2272  00705C  0B0F               	andlw	15
  2273  00705E  0F30               	addlw	48
  2274  007060  C006  FFD9         	movff	Read_sec@e,fsr2l
  2275  007064  C007  FFDA         	movff	Read_sec@e+1,fsr2h
  2276  007068  6EDF               	movwf	indf2,c
  2277                           
  2278                           ;time.c: 231: e++;
  2279  00706A  4A06               	infsnz	Read_sec@e,f,c
  2280  00706C  2A07               	incf	Read_sec@e+1,f,c
  2281                           
  2282                           ;time.c: 232: *e = ' ';
  2283  00706E  C006  FFD9         	movff	Read_sec@e,fsr2l
  2284  007072  C007  FFDA         	movff	Read_sec@e+1,fsr2h
  2285  007076  0E20               	movlw	32
  2286  007078  6EDF               	movwf	indf2,c
  2287  00707A  0012               	return	
  2288  00707C                     __end_of_Read_sec:
  2289                           	opt stack 0
  2290                           tblptru	equ	0xFF8
  2291                           tblptrh	equ	0xFF7
  2292                           tblptrl	equ	0xFF6
  2293                           tablat	equ	0xFF5
  2294                           postinc0	equ	0xFEE
  2295                           wreg	equ	0xFE8
  2296                           postinc1	equ	0xFE6
  2297                           postdec1	equ	0xFE5
  2298                           fsr1l	equ	0xFE1
  2299                           indf2	equ	0xFDF
  2300                           postinc2	equ	0xFDE
  2301                           fsr2h	equ	0xFDA
  2302                           fsr2l	equ	0xFD9
  2303                           status	equ	0xFD8
  2304                           
  2305 ;; *************** function _Read_month *****************
  2306 ;; Defined at:
  2307 ;;		line 354 in file "time.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  e               2    5[COMRAM] PTR unsigned char 
  2310 ;;		 -> time(2), 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  c               1    7[COMRAM] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;		None               void
  2315 ;; Registers used:
  2316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2322 ;;      Params:         2       0       0       0       0       0       0       0       0
  2323 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2325 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2326 ;;Total ram usage:        3 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    4
  2329 ;; This function calls:
  2330 ;;		_Read
  2331 ;; This function is called by:
  2332 ;;		_Read_time
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text9
  2337  006FE8                     __ptext9:
  2338                           	opt stack 0
  2339  006FE8                     _Read_month:
  2340                           	opt stack 25
  2341                           
  2342                           ;time.c: 356: unsigned char c;
  2343                           ;time.c: 357: e= e+27;
  2344                           
  2345                           ;incstack = 0
  2346  006FE8  0E1B               	movlw	27
  2347  006FEA  2406               	addwf	Read_month@e,w,c
  2348  006FEC  6E06               	movwf	Read_month@e,c
  2349  006FEE  0E00               	movlw	0
  2350  006FF0  2007               	addwfc	Read_month@e+1,w,c
  2351  006FF2  6E07               	movwf	Read_month@e+1,c
  2352                           
  2353                           ;time.c: 358: c = Read();
  2354  006FF4  ECF9  F036         	call	_Read	;wreg free
  2355  006FF8  6E08               	movwf	Read_month@c,c
  2356                           
  2357                           ;time.c: 359: *e = ((c>>4)&0x01) + '0';
  2358  006FFA  3808               	swapf	Read_month@c,w,c
  2359  006FFC  0B0F               	andlw	15
  2360  006FFE  0B01               	andlw	1
  2361  007000  0F30               	addlw	48
  2362  007002  C006  FFD9         	movff	Read_month@e,fsr2l
  2363  007006  C007  FFDA         	movff	Read_month@e+1,fsr2h
  2364  00700A  6EDF               	movwf	indf2,c
  2365                           
  2366                           ;time.c: 360: e++;
  2367  00700C  4A06               	infsnz	Read_month@e,f,c
  2368  00700E  2A07               	incf	Read_month@e+1,f,c
  2369                           
  2370                           ;time.c: 361: *e = (c&0x0F) + '0';
  2371  007010  5008               	movf	Read_month@c,w,c
  2372  007012  0B0F               	andlw	15
  2373  007014  0F30               	addlw	48
  2374  007016  C006  FFD9         	movff	Read_month@e,fsr2l
  2375  00701A  C007  FFDA         	movff	Read_month@e+1,fsr2h
  2376  00701E  6EDF               	movwf	indf2,c
  2377                           
  2378                           ;time.c: 362: e++;
  2379  007020  4A06               	infsnz	Read_month@e,f,c
  2380  007022  2A07               	incf	Read_month@e+1,f,c
  2381                           
  2382                           ;time.c: 363: *e = '/';
  2383  007024  C006  FFD9         	movff	Read_month@e,fsr2l
  2384  007028  C007  FFDA         	movff	Read_month@e+1,fsr2h
  2385  00702C  0E2F               	movlw	47
  2386  00702E  6EDF               	movwf	indf2,c
  2387  007030  0012               	return	
  2388  007032                     __end_of_Read_month:
  2389                           	opt stack 0
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           postinc1	equ	0xFE6
  2397                           postdec1	equ	0xFE5
  2398                           fsr1l	equ	0xFE1
  2399                           indf2	equ	0xFDF
  2400                           postinc2	equ	0xFDE
  2401                           fsr2h	equ	0xFDA
  2402                           fsr2l	equ	0xFD9
  2403                           status	equ	0xFD8
  2404                           
  2405 ;; *************** function _Read_min *****************
  2406 ;; Defined at:
  2407 ;;		line 237 in file "time.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  e               2    5[COMRAM] PTR unsigned char 
  2410 ;;		 -> time(2), 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  c               1    7[COMRAM] unsigned char 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;		None               void
  2415 ;; Registers used:
  2416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2422 ;;      Params:         2       0       0       0       0       0       0       0       0
  2423 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2425 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2426 ;;Total ram usage:        3 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    4
  2429 ;; This function calls:
  2430 ;;		_Read
  2431 ;; This function is called by:
  2432 ;;		_Read_time
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text10
  2437  006F9E                     __ptext10:
  2438                           	opt stack 0
  2439  006F9E                     _Read_min:
  2440                           	opt stack 25
  2441                           
  2442                           ;time.c: 239: unsigned char c;
  2443                           ;time.c: 240: e= e+3;
  2444                           
  2445                           ;incstack = 0
  2446  006F9E  0E03               	movlw	3
  2447  006FA0  2406               	addwf	Read_min@e,w,c
  2448  006FA2  6E06               	movwf	Read_min@e,c
  2449  006FA4  0E00               	movlw	0
  2450  006FA6  2007               	addwfc	Read_min@e+1,w,c
  2451  006FA8  6E07               	movwf	Read_min@e+1,c
  2452                           
  2453                           ;time.c: 241: c = Read();
  2454  006FAA  ECF9  F036         	call	_Read	;wreg free
  2455  006FAE  6E08               	movwf	Read_min@c,c
  2456                           
  2457                           ;time.c: 242: *e = ((c>>4)&0x07) + '0';
  2458  006FB0  3808               	swapf	Read_min@c,w,c
  2459  006FB2  0B0F               	andlw	15
  2460  006FB4  0B07               	andlw	7
  2461  006FB6  0F30               	addlw	48
  2462  006FB8  C006  FFD9         	movff	Read_min@e,fsr2l
  2463  006FBC  C007  FFDA         	movff	Read_min@e+1,fsr2h
  2464  006FC0  6EDF               	movwf	indf2,c
  2465                           
  2466                           ;time.c: 243: e++;
  2467  006FC2  4A06               	infsnz	Read_min@e,f,c
  2468  006FC4  2A07               	incf	Read_min@e+1,f,c
  2469                           
  2470                           ;time.c: 244: *e = (c&0x0F) + '0';
  2471  006FC6  5008               	movf	Read_min@c,w,c
  2472  006FC8  0B0F               	andlw	15
  2473  006FCA  0F30               	addlw	48
  2474  006FCC  C006  FFD9         	movff	Read_min@e,fsr2l
  2475  006FD0  C007  FFDA         	movff	Read_min@e+1,fsr2h
  2476  006FD4  6EDF               	movwf	indf2,c
  2477                           
  2478                           ;time.c: 245: e++;
  2479  006FD6  4A06               	infsnz	Read_min@e,f,c
  2480  006FD8  2A07               	incf	Read_min@e+1,f,c
  2481                           
  2482                           ;time.c: 246: *e = ':';
  2483  006FDA  C006  FFD9         	movff	Read_min@e,fsr2l
  2484  006FDE  C007  FFDA         	movff	Read_min@e+1,fsr2h
  2485  006FE2  0E3A               	movlw	58
  2486  006FE4  6EDF               	movwf	indf2,c
  2487  006FE6  0012               	return	
  2488  006FE8                     __end_of_Read_min:
  2489                           	opt stack 0
  2490                           tblptru	equ	0xFF8
  2491                           tblptrh	equ	0xFF7
  2492                           tblptrl	equ	0xFF6
  2493                           tablat	equ	0xFF5
  2494                           postinc0	equ	0xFEE
  2495                           wreg	equ	0xFE8
  2496                           postinc1	equ	0xFE6
  2497                           postdec1	equ	0xFE5
  2498                           fsr1l	equ	0xFE1
  2499                           indf2	equ	0xFDF
  2500                           postinc2	equ	0xFDE
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _Read_hour *****************
  2506 ;; Defined at:
  2507 ;;		line 251 in file "time.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  e               2    5[COMRAM] PTR unsigned char 
  2510 ;;		 -> time(2), 
  2511 ;;  mode            1    7[COMRAM] unsigned char 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  c               1   11[COMRAM] unsigned char 
  2514 ;;  i               1   10[COMRAM] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2524 ;;      Params:         3       0       0       0       0       0       0       0       0
  2525 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2526 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2527 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2528 ;;Total ram usage:        7 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    4
  2531 ;; This function calls:
  2532 ;;		_Read
  2533 ;; This function is called by:
  2534 ;;		_Read_time
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text11
  2539  0075D4                     __ptext11:
  2540                           	opt stack 0
  2541  0075D4                     _Read_hour:
  2542                           	opt stack 25
  2543                           
  2544                           ;time.c: 253: unsigned char c,i=0;
  2545                           
  2546                           ;incstack = 0
  2547  0075D4  0E00               	movlw	0
  2548  0075D6  6E0B               	movwf	Read_hour@i,c
  2549                           
  2550                           ;time.c: 254: c = Read();
  2551  0075D8  ECF9  F036         	call	_Read	;wreg free
  2552  0075DC  6E0C               	movwf	Read_hour@c,c
  2553                           
  2554                           ;time.c: 255: if((mode==0)||(mode==1))
  2555  0075DE  5008               	movf	Read_hour@mode,w,c
  2556  0075E0  B4D8               	btfsc	status,2,c
  2557  0075E2  D003               	goto	l2763
  2558  0075E4  0408               	decf	Read_hour@mode,w,c
  2559  0075E6  A4D8               	btfss	status,2,c
  2560  0075E8  D004               	goto	l2765
  2561  0075EA                     l2763:
  2562                           
  2563                           ;time.c: 256: *e = ((c>>4)&0x01) + '0';
  2564  0075EA  380C               	swapf	Read_hour@c,w,c
  2565  0075EC  0B0F               	andlw	15
  2566  0075EE  0B01               	andlw	1
  2567  0075F0  D003               	goto	L1
  2568  0075F2                     l2765:
  2569                           
  2570                           ;time.c: 257: else
  2571                           ;time.c: 258: *e = ((c>>4)&0x03) + '0';
  2572  0075F2  380C               	swapf	Read_hour@c,w,c
  2573  0075F4  0B0F               	andlw	15
  2574  0075F6  0B03               	andlw	3
  2575  0075F8                     L1:
  2576  0075F8  0F30               	addlw	48
  2577  0075FA  C006  FFD9         	movff	Read_hour@e,fsr2l
  2578  0075FE  C007  FFDA         	movff	Read_hour@e+1,fsr2h
  2579  007602  6EDF               	movwf	indf2,c
  2580                           
  2581                           ;time.c: 259: e++;
  2582  007604  4A06               	infsnz	Read_hour@e,f,c
  2583  007606  2A07               	incf	Read_hour@e+1,f,c
  2584                           
  2585                           ;time.c: 260: *e = (c&0x0F) + '0';
  2586  007608  500C               	movf	Read_hour@c,w,c
  2587  00760A  0B0F               	andlw	15
  2588  00760C  0F30               	addlw	48
  2589  00760E  C006  FFD9         	movff	Read_hour@e,fsr2l
  2590  007612  C007  FFDA         	movff	Read_hour@e+1,fsr2h
  2591  007616  6EDF               	movwf	indf2,c
  2592                           
  2593                           ;time.c: 261: e++;
  2594  007618  4A06               	infsnz	Read_hour@e,f,c
  2595  00761A  2A07               	incf	Read_hour@e+1,f,c
  2596                           
  2597                           ;time.c: 262: *e = ':';
  2598  00761C  C006  FFD9         	movff	Read_hour@e,fsr2l
  2599  007620  C007  FFDA         	movff	Read_hour@e+1,fsr2h
  2600  007624  0E3A               	movlw	58
  2601  007626  6EDF               	movwf	indf2,c
  2602                           
  2603                           ;time.c: 263: while(i!=11)
  2604  007628  D003               	goto	l2775
  2605  00762A                     l2773:
  2606                           
  2607                           ;time.c: 264: {
  2608                           ;time.c: 265: e++;
  2609  00762A  4A06               	infsnz	Read_hour@e,f,c
  2610  00762C  2A07               	incf	Read_hour@e+1,f,c
  2611                           
  2612                           ;time.c: 266: i++;
  2613  00762E  2A0B               	incf	Read_hour@i,f,c
  2614  007630                     l2775:
  2615  007630  500B               	movf	Read_hour@i,w,c
  2616  007632  0A0B               	xorlw	11
  2617  007634  A4D8               	btfss	status,2,c
  2618  007636  D7F9               	goto	l2773
  2619                           
  2620                           ;time.c: 267: }
  2621                           ;time.c: 268: if((c>>6)&0x01)
  2622  007638  C00C  F009         	movff	Read_hour@c,??_Read_hour
  2623  00763C  0E06               	movlw	6
  2624  00763E  6E0A               	movwf	(??_Read_hour+1)& (0+255),c
  2625  007640                     u2245:
  2626  007640  90D8               	bcf	status,0,c
  2627  007642  3209               	rrcf	??_Read_hour,f,c
  2628  007644  2E0A               	decfsz	(??_Read_hour+1)& (0+255),f,c
  2629  007646  D7FC               	goto	u2245
  2630  007648  A009               	btfss	??_Read_hour,0,c
  2631  00764A  D01E               	goto	l227
  2632                           
  2633                           ;time.c: 269: {
  2634                           ;time.c: 270: if((c>>5)&0x01)
  2635  00764C  C00C  F009         	movff	Read_hour@c,??_Read_hour
  2636  007650  0E05               	movlw	5
  2637  007652  6E0A               	movwf	(??_Read_hour+1)& (0+255),c
  2638  007654                     u2265:
  2639  007654  90D8               	bcf	status,0,c
  2640  007656  3209               	rrcf	??_Read_hour,f,c
  2641  007658  2E0A               	decfsz	(??_Read_hour+1)& (0+255),f,c
  2642  00765A  D7FC               	goto	u2265
  2643  00765C  A009               	btfss	??_Read_hour,0,c
  2644  00765E  D006               	goto	l2783
  2645                           
  2646                           ;time.c: 271: *e = 'P';
  2647  007660  C006  FFD9         	movff	Read_hour@e,fsr2l
  2648  007664  C007  FFDA         	movff	Read_hour@e+1,fsr2h
  2649  007668  0E50               	movlw	80
  2650  00766A  D005               	goto	L2
  2651  00766C                     l2783:
  2652                           
  2653                           ;time.c: 272: else
  2654                           ;time.c: 273: *e = 'A';
  2655  00766C  C006  FFD9         	movff	Read_hour@e,fsr2l
  2656  007670  C007  FFDA         	movff	Read_hour@e+1,fsr2h
  2657  007674  0E41               	movlw	65
  2658  007676                     L2:
  2659  007676  6EDF               	movwf	indf2,c
  2660                           
  2661                           ;time.c: 274: e++;
  2662  007678  4A06               	infsnz	Read_hour@e,f,c
  2663  00767A  2A07               	incf	Read_hour@e+1,f,c
  2664                           
  2665                           ;time.c: 275: *e = 'M';
  2666  00767C  C006  FFD9         	movff	Read_hour@e,fsr2l
  2667  007680  C007  FFDA         	movff	Read_hour@e+1,fsr2h
  2668  007684  0E4D               	movlw	77
  2669  007686  6EDF               	movwf	indf2,c
  2670  007688                     l227:
  2671  007688  0012               	return	
  2672  00768A                     __end_of_Read_hour:
  2673                           	opt stack 0
  2674                           tblptru	equ	0xFF8
  2675                           tblptrh	equ	0xFF7
  2676                           tblptrl	equ	0xFF6
  2677                           tablat	equ	0xFF5
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           postinc1	equ	0xFE6
  2681                           postdec1	equ	0xFE5
  2682                           fsr1l	equ	0xFE1
  2683                           indf2	equ	0xFDF
  2684                           postinc2	equ	0xFDE
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function _Read_day *****************
  2690 ;; Defined at:
  2691 ;;		line 331 in file "time.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;		None               void
  2698 ;; Registers used:
  2699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2708 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    4
  2712 ;; This function calls:
  2713 ;;		_Read
  2714 ;;		_write_DAY
  2715 ;; This function is called by:
  2716 ;;		_Read_time
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text12
  2721  006CA4                     __ptext12:
  2722                           	opt stack 0
  2723  006CA4                     _Read_day:
  2724                           	opt stack 25
  2725                           
  2726                           ;time.c: 333: write_DAY(0x07 & Read());
  2727                           
  2728                           ;incstack = 0
  2729  006CA4  ECF9  F036         	call	_Read	;wreg free
  2730  006CA8  0B07               	andlw	7
  2731  006CAA  EC4A  F03D         	call	_write_DAY
  2732  006CAE  0012               	return	
  2733  006CB0                     __end_of_Read_day:
  2734                           	opt stack 0
  2735                           tblptru	equ	0xFF8
  2736                           tblptrh	equ	0xFF7
  2737                           tblptrl	equ	0xFF6
  2738                           tablat	equ	0xFF5
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           postinc1	equ	0xFE6
  2742                           postdec1	equ	0xFE5
  2743                           fsr1l	equ	0xFE1
  2744                           indf2	equ	0xFDF
  2745                           postinc2	equ	0xFDE
  2746                           fsr2h	equ	0xFDA
  2747                           fsr2l	equ	0xFD9
  2748                           status	equ	0xFD8
  2749                           
  2750 ;; *************** function _write_DAY *****************
  2751 ;; Defined at:
  2752 ;;		line 299 in file "time.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  day             1    wreg     unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  day             1   32[COMRAM] unsigned char 
  2757 ;;  day_7           4   28[COMRAM] unsigned char [4]
  2758 ;;  day_6           4   24[COMRAM] unsigned char [4]
  2759 ;;  day_5           4   20[COMRAM] unsigned char [4]
  2760 ;;  day_4           4   16[COMRAM] unsigned char [4]
  2761 ;;  day_3           4   12[COMRAM] unsigned char [4]
  2762 ;;  day_2           4    8[COMRAM] unsigned char [4]
  2763 ;;  day_1           4    4[COMRAM] unsigned char [4]
  2764 ;; Return value:  Size  Location     Type
  2765 ;;		None               void
  2766 ;; Registers used:
  2767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2773 ;;      Params:         0       0       0       0       0       0       0       0       0
  2774 ;;      Locals:        29       0       0       0       0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2776 ;;      Totals:        29       0       0       0       0       0       0       0       0
  2777 ;;Total ram usage:       29 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    1
  2780 ;; This function calls:
  2781 ;;		_Write_ARR
  2782 ;; This function is called by:
  2783 ;;		_Read_day
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text13
  2788  007A94                     __ptext13:
  2789                           	opt stack 0
  2790  007A94                     _write_DAY:
  2791                           	opt stack 27
  2792                           
  2793                           ;incstack = 0
  2794                           ;write_DAY@day stored from wreg
  2795  007A94  6E21               	movwf	write_DAY@day,c
  2796                           
  2797                           ;time.c: 301: unsigned char day_1[4] = "SUN";
  2798  007A96  C1C7  F005         	movff	write_DAY@F256,write_DAY@day_1
  2799  007A9A  C1C8  F006         	movff	write_DAY@F256+1,write_DAY@day_1+1
  2800  007A9E  C1C9  F007         	movff	write_DAY@F256+2,write_DAY@day_1+2
  2801  007AA2  C1CA  F008         	movff	write_DAY@F256+3,write_DAY@day_1+3
  2802                           
  2803                           ;time.c: 302: unsigned char day_2[4] = "MON";
  2804  007AA6  C1CB  F009         	movff	write_DAY@F258,write_DAY@day_2
  2805  007AAA  C1CC  F00A         	movff	write_DAY@F258+1,write_DAY@day_2+1
  2806  007AAE  C1CD  F00B         	movff	write_DAY@F258+2,write_DAY@day_2+2
  2807  007AB2  C1CE  F00C         	movff	write_DAY@F258+3,write_DAY@day_2+3
  2808                           
  2809                           ;time.c: 303: unsigned char day_3[4] = "TUE";
  2810  007AB6  C1CF  F00D         	movff	write_DAY@F260,write_DAY@day_3
  2811  007ABA  C1D0  F00E         	movff	write_DAY@F260+1,write_DAY@day_3+1
  2812  007ABE  C1D1  F00F         	movff	write_DAY@F260+2,write_DAY@day_3+2
  2813  007AC2  C1D2  F010         	movff	write_DAY@F260+3,write_DAY@day_3+3
  2814                           
  2815                           ;time.c: 304: unsigned char day_4[4] = "WED";
  2816  007AC6  C1D3  F011         	movff	write_DAY@F262,write_DAY@day_4
  2817  007ACA  C1D4  F012         	movff	write_DAY@F262+1,write_DAY@day_4+1
  2818  007ACE  C1D5  F013         	movff	write_DAY@F262+2,write_DAY@day_4+2
  2819  007AD2  C1D6  F014         	movff	write_DAY@F262+3,write_DAY@day_4+3
  2820                           
  2821                           ;time.c: 305: unsigned char day_5[4] = "THU";
  2822  007AD6  C1D7  F015         	movff	write_DAY@F264,write_DAY@day_5
  2823  007ADA  C1D8  F016         	movff	write_DAY@F264+1,write_DAY@day_5+1
  2824  007ADE  C1D9  F017         	movff	write_DAY@F264+2,write_DAY@day_5+2
  2825  007AE2  C1DA  F018         	movff	write_DAY@F264+3,write_DAY@day_5+3
  2826                           
  2827                           ;time.c: 306: unsigned char day_6[4] = "FRI";
  2828  007AE6  C1DB  F019         	movff	write_DAY@F266,write_DAY@day_6
  2829  007AEA  C1DC  F01A         	movff	write_DAY@F266+1,write_DAY@day_6+1
  2830  007AEE  C1DD  F01B         	movff	write_DAY@F266+2,write_DAY@day_6+2
  2831  007AF2  C1DE  F01C         	movff	write_DAY@F266+3,write_DAY@day_6+3
  2832                           
  2833                           ;time.c: 307: unsigned char day_7[4] = "SAT";
  2834  007AF6  C1DF  F01D         	movff	write_DAY@F268,write_DAY@day_7
  2835  007AFA  C1E0  F01E         	movff	write_DAY@F268+1,write_DAY@day_7+1
  2836  007AFE  C1E1  F01F         	movff	write_DAY@F268+2,write_DAY@day_7+2
  2837  007B02  C1E2  F020         	movff	write_DAY@F268+3,write_DAY@day_7+3
  2838                           
  2839                           ;time.c: 309: switch(day)
  2840  007B06  D05B               	goto	l2435
  2841  007B08                     l2419:
  2842  007B08  0E00               	movlw	high write_DAY@day_1
  2843  007B0A  6E02               	movwf	Write_ARR@c+1,c
  2844  007B0C  0E05               	movlw	low write_DAY@day_1
  2845  007B0E  6E01               	movwf	Write_ARR@c,c
  2846  007B10  0100               	movlb	0	; () banked
  2847  007B12  0E00               	movlw	high _time
  2848  007B14  6E04               	movwf	Write_ARR@e+1,c
  2849  007B16  0100               	movlb	0	; () banked
  2850  007B18  0EFB               	movlw	low _time
  2851  007B1A  6E03               	movwf	Write_ARR@e,c
  2852  007B1C  EC67  F038         	call	_Write_ARR	;wreg free
  2853                           
  2854                           ;time.c: 312: break;
  2855  007B20  D064               	goto	l259
  2856  007B22                     l2421:
  2857  007B22  0E00               	movlw	high write_DAY@day_2
  2858  007B24  6E02               	movwf	Write_ARR@c+1,c
  2859  007B26  0E09               	movlw	low write_DAY@day_2
  2860  007B28  6E01               	movwf	Write_ARR@c,c
  2861  007B2A  0100               	movlb	0	; () banked
  2862  007B2C  0E00               	movlw	high _time
  2863  007B2E  6E04               	movwf	Write_ARR@e+1,c
  2864  007B30  0100               	movlb	0	; () banked
  2865  007B32  0EFB               	movlw	low _time
  2866  007B34  6E03               	movwf	Write_ARR@e,c
  2867  007B36  EC67  F038         	call	_Write_ARR	;wreg free
  2868                           
  2869                           ;time.c: 314: break;
  2870  007B3A  D057               	goto	l259
  2871  007B3C                     l2423:
  2872  007B3C  0E00               	movlw	high write_DAY@day_3
  2873  007B3E  6E02               	movwf	Write_ARR@c+1,c
  2874  007B40  0E0D               	movlw	low write_DAY@day_3
  2875  007B42  6E01               	movwf	Write_ARR@c,c
  2876  007B44  0100               	movlb	0	; () banked
  2877  007B46  0E00               	movlw	high _time
  2878  007B48  6E04               	movwf	Write_ARR@e+1,c
  2879  007B4A  0100               	movlb	0	; () banked
  2880  007B4C  0EFB               	movlw	low _time
  2881  007B4E  6E03               	movwf	Write_ARR@e,c
  2882  007B50  EC67  F038         	call	_Write_ARR	;wreg free
  2883                           
  2884                           ;time.c: 316: break;
  2885  007B54  D04A               	goto	l259
  2886  007B56                     l2425:
  2887  007B56  0E00               	movlw	high write_DAY@day_4
  2888  007B58  6E02               	movwf	Write_ARR@c+1,c
  2889  007B5A  0E11               	movlw	low write_DAY@day_4
  2890  007B5C  6E01               	movwf	Write_ARR@c,c
  2891  007B5E  0100               	movlb	0	; () banked
  2892  007B60  0E00               	movlw	high _time
  2893  007B62  6E04               	movwf	Write_ARR@e+1,c
  2894  007B64  0100               	movlb	0	; () banked
  2895  007B66  0EFB               	movlw	low _time
  2896  007B68  6E03               	movwf	Write_ARR@e,c
  2897  007B6A  EC67  F038         	call	_Write_ARR	;wreg free
  2898                           
  2899                           ;time.c: 318: break;
  2900  007B6E  D03D               	goto	l259
  2901  007B70                     l2427:
  2902  007B70  0E00               	movlw	high write_DAY@day_5
  2903  007B72  6E02               	movwf	Write_ARR@c+1,c
  2904  007B74  0E15               	movlw	low write_DAY@day_5
  2905  007B76  6E01               	movwf	Write_ARR@c,c
  2906  007B78  0100               	movlb	0	; () banked
  2907  007B7A  0E00               	movlw	high _time
  2908  007B7C  6E04               	movwf	Write_ARR@e+1,c
  2909  007B7E  0100               	movlb	0	; () banked
  2910  007B80  0EFB               	movlw	low _time
  2911  007B82  6E03               	movwf	Write_ARR@e,c
  2912  007B84  EC67  F038         	call	_Write_ARR	;wreg free
  2913                           
  2914                           ;time.c: 320: break;
  2915  007B88  D030               	goto	l259
  2916  007B8A                     l2429:
  2917  007B8A  0E00               	movlw	high write_DAY@day_6
  2918  007B8C  6E02               	movwf	Write_ARR@c+1,c
  2919  007B8E  0E19               	movlw	low write_DAY@day_6
  2920  007B90  6E01               	movwf	Write_ARR@c,c
  2921  007B92  0100               	movlb	0	; () banked
  2922  007B94  0E00               	movlw	high _time
  2923  007B96  6E04               	movwf	Write_ARR@e+1,c
  2924  007B98  0100               	movlb	0	; () banked
  2925  007B9A  0EFB               	movlw	low _time
  2926  007B9C  6E03               	movwf	Write_ARR@e,c
  2927  007B9E  EC67  F038         	call	_Write_ARR	;wreg free
  2928                           
  2929                           ;time.c: 322: break;
  2930  007BA2  D023               	goto	l259
  2931  007BA4                     l2431:
  2932  007BA4  0E00               	movlw	high write_DAY@day_7
  2933  007BA6  6E02               	movwf	Write_ARR@c+1,c
  2934  007BA8  0E1D               	movlw	low write_DAY@day_7
  2935  007BAA  6E01               	movwf	Write_ARR@c,c
  2936  007BAC  0100               	movlb	0	; () banked
  2937  007BAE  0E00               	movlw	high _time
  2938  007BB0  6E04               	movwf	Write_ARR@e+1,c
  2939  007BB2  0100               	movlb	0	; () banked
  2940  007BB4  0EFB               	movlw	low _time
  2941  007BB6  6E03               	movwf	Write_ARR@e,c
  2942  007BB8  EC67  F038         	call	_Write_ARR	;wreg free
  2943                           
  2944                           ;time.c: 324: break;
  2945  007BBC  D016               	goto	l259
  2946  007BBE                     l2435:
  2947  007BBE  5021               	movf	write_DAY@day,w,c
  2948                           
  2949                           ; Switch size 1, requested type "space"
  2950                           ; Number of cases is 7, Range of values is 1 to 7
  2951                           ; switch strategies available:
  2952                           ; Name         Instructions Cycles
  2953                           ; simple_byte           22    12 (average)
  2954                           ;	Chosen strategy is simple_byte
  2955  007BC0  0A01               	xorlw	1	; case 1
  2956  007BC2  B4D8               	btfsc	status,2,c
  2957  007BC4  D7A1               	goto	l2419
  2958  007BC6  0A03               	xorlw	3	; case 2
  2959  007BC8  B4D8               	btfsc	status,2,c
  2960  007BCA  D7AB               	goto	l2421
  2961  007BCC  0A01               	xorlw	1	; case 3
  2962  007BCE  B4D8               	btfsc	status,2,c
  2963  007BD0  D7B5               	goto	l2423
  2964  007BD2  0A07               	xorlw	7	; case 4
  2965  007BD4  B4D8               	btfsc	status,2,c
  2966  007BD6  D7BF               	goto	l2425
  2967  007BD8  0A01               	xorlw	1	; case 5
  2968  007BDA  B4D8               	btfsc	status,2,c
  2969  007BDC  D7C9               	goto	l2427
  2970  007BDE  0A03               	xorlw	3	; case 6
  2971  007BE0  B4D8               	btfsc	status,2,c
  2972  007BE2  D7D3               	goto	l2429
  2973  007BE4  0A01               	xorlw	1	; case 7
  2974  007BE6  B4D8               	btfsc	status,2,c
  2975  007BE8  D7DD               	goto	l2431
  2976  007BEA                     l259:
  2977  007BEA  0012               	return	
  2978  007BEC                     __end_of_write_DAY:
  2979                           	opt stack 0
  2980                           tblptru	equ	0xFF8
  2981                           tblptrh	equ	0xFF7
  2982                           tblptrl	equ	0xFF6
  2983                           tablat	equ	0xFF5
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           postinc1	equ	0xFE6
  2987                           postdec1	equ	0xFE5
  2988                           fsr1l	equ	0xFE1
  2989                           indf2	equ	0xFDF
  2990                           postinc2	equ	0xFDE
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _Write_ARR *****************
  2996 ;; Defined at:
  2997 ;;		line 284 in file "time.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  c               2    0[COMRAM] PTR unsigned char 
  3000 ;;		 -> write_DAY@day_7(4), write_DAY@day_6(4), write_DAY@day_5(4), write_DAY@day_4(4), 
  3001 ;;		 -> write_DAY@day_3(4), write_DAY@day_2(4), write_DAY@day_1(4), 
  3002 ;;  e               2    2[COMRAM] PTR unsigned char 
  3003 ;;		 -> time(2), 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;		None               void
  3008 ;; Registers used:
  3009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3015 ;;      Params:         4       0       0       0       0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3018 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3019 ;;Total ram usage:        4 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_write_DAY
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text14
  3029  0070CE                     __ptext14:
  3030                           	opt stack 0
  3031  0070CE                     _Write_ARR:
  3032                           	opt stack 27
  3033                           
  3034                           ;time.c: 286: e = e+17;
  3035                           
  3036                           ;incstack = 0
  3037  0070CE  0E11               	movlw	17
  3038  0070D0  2403               	addwf	Write_ARR@e,w,c
  3039  0070D2  6E03               	movwf	Write_ARR@e,c
  3040  0070D4  0E00               	movlw	0
  3041  0070D6  2004               	addwfc	Write_ARR@e+1,w,c
  3042  0070D8  6E04               	movwf	Write_ARR@e+1,c
  3043                           
  3044                           ;time.c: 287: while(*c!='\0')
  3045  0070DA  D00E               	goto	l2315
  3046  0070DC                     l2309:
  3047                           
  3048                           ;time.c: 288: {
  3049                           ;time.c: 289: *e = *c;
  3050  0070DC  C001  FFD9         	movff	Write_ARR@c,fsr2l
  3051  0070E0  C002  FFDA         	movff	Write_ARR@c+1,fsr2h
  3052  0070E4  C003  FFE1         	movff	Write_ARR@e,fsr1l
  3053  0070E8  C004  FFE2         	movff	Write_ARR@e+1,fsr1h
  3054  0070EC  CFDF FFE7          	movff	indf2,indf1
  3055                           
  3056                           ;time.c: 290: e++;
  3057  0070F0  4A03               	infsnz	Write_ARR@e,f,c
  3058  0070F2  2A04               	incf	Write_ARR@e+1,f,c
  3059                           
  3060                           ;time.c: 291: c++;
  3061  0070F4  4A01               	infsnz	Write_ARR@c,f,c
  3062  0070F6  2A02               	incf	Write_ARR@c+1,f,c
  3063  0070F8                     l2315:
  3064  0070F8  C001  FFD9         	movff	Write_ARR@c,fsr2l
  3065  0070FC  C002  FFDA         	movff	Write_ARR@c+1,fsr2h
  3066  007100  50DF               	movf	indf2,w,c
  3067  007102  A4D8               	btfss	status,2,c
  3068  007104  D7EB               	goto	l2309
  3069                           
  3070                           ;time.c: 292: }
  3071                           ;time.c: 293: e = e+2;
  3072  007106  0E02               	movlw	2
  3073  007108  2403               	addwf	Write_ARR@e,w,c
  3074  00710A  6E03               	movwf	Write_ARR@e,c
  3075  00710C  0E00               	movlw	0
  3076  00710E  2004               	addwfc	Write_ARR@e+1,w,c
  3077  007110  6E04               	movwf	Write_ARR@e+1,c
  3078                           
  3079                           ;time.c: 294: *e = ' ';
  3080  007112  C003  FFD9         	movff	Write_ARR@e,fsr2l
  3081  007116  C004  FFDA         	movff	Write_ARR@e+1,fsr2h
  3082  00711A  0E20               	movlw	32
  3083  00711C  6EDF               	movwf	indf2,c
  3084  00711E  0012               	return	
  3085  007120                     __end_of_Write_ARR:
  3086                           	opt stack 0
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           postinc0	equ	0xFEE
  3092                           wreg	equ	0xFE8
  3093                           indf1	equ	0xFE7
  3094                           postinc1	equ	0xFE6
  3095                           postdec1	equ	0xFE5
  3096                           fsr1h	equ	0xFE2
  3097                           fsr1l	equ	0xFE1
  3098                           indf2	equ	0xFDF
  3099                           postinc2	equ	0xFDE
  3100                           fsr2h	equ	0xFDA
  3101                           fsr2l	equ	0xFD9
  3102                           status	equ	0xFD8
  3103                           
  3104 ;; *************** function _Read_date *****************
  3105 ;; Defined at:
  3106 ;;		line 338 in file "time.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  e               2    5[COMRAM] PTR unsigned char 
  3109 ;;		 -> time(2), 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  c               1    7[COMRAM] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;		None               void
  3114 ;; Registers used:
  3115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3121 ;;      Params:         2       0       0       0       0       0       0       0       0
  3122 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3124 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3125 ;;Total ram usage:        3 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    4
  3128 ;; This function calls:
  3129 ;;		_Read
  3130 ;; This function is called by:
  3131 ;;		_Read_time
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text15
  3136  0071CE                     __ptext15:
  3137                           	opt stack 0
  3138  0071CE                     _Read_date:
  3139                           	opt stack 25
  3140                           
  3141                           ;time.c: 340: unsigned char c;
  3142                           ;time.c: 341: e= e+23;
  3143                           
  3144                           ;incstack = 0
  3145  0071CE  0E17               	movlw	23
  3146  0071D0  2406               	addwf	Read_date@e,w,c
  3147  0071D2  6E06               	movwf	Read_date@e,c
  3148  0071D4  0E00               	movlw	0
  3149  0071D6  2007               	addwfc	Read_date@e+1,w,c
  3150  0071D8  6E07               	movwf	Read_date@e+1,c
  3151                           
  3152                           ;time.c: 342: *e = ' ';
  3153  0071DA  C006  FFD9         	movff	Read_date@e,fsr2l
  3154  0071DE  C007  FFDA         	movff	Read_date@e+1,fsr2h
  3155  0071E2  0E20               	movlw	32
  3156  0071E4  6EDF               	movwf	indf2,c
  3157                           
  3158                           ;time.c: 343: e++;
  3159  0071E6  4A06               	infsnz	Read_date@e,f,c
  3160  0071E8  2A07               	incf	Read_date@e+1,f,c
  3161                           
  3162                           ;time.c: 344: c = Read();
  3163  0071EA  ECF9  F036         	call	_Read	;wreg free
  3164  0071EE  6E08               	movwf	Read_date@c,c
  3165                           
  3166                           ;time.c: 345: *e = ((c>>4)&0x03) + '0';
  3167  0071F0  3808               	swapf	Read_date@c,w,c
  3168  0071F2  0B0F               	andlw	15
  3169  0071F4  0B03               	andlw	3
  3170  0071F6  0F30               	addlw	48
  3171  0071F8  C006  FFD9         	movff	Read_date@e,fsr2l
  3172  0071FC  C007  FFDA         	movff	Read_date@e+1,fsr2h
  3173  007200  6EDF               	movwf	indf2,c
  3174                           
  3175                           ;time.c: 346: e++;
  3176  007202  4A06               	infsnz	Read_date@e,f,c
  3177  007204  2A07               	incf	Read_date@e+1,f,c
  3178                           
  3179                           ;time.c: 347: *e = (c&0x0F) + '0';
  3180  007206  5008               	movf	Read_date@c,w,c
  3181  007208  0B0F               	andlw	15
  3182  00720A  0F30               	addlw	48
  3183  00720C  C006  FFD9         	movff	Read_date@e,fsr2l
  3184  007210  C007  FFDA         	movff	Read_date@e+1,fsr2h
  3185  007214  6EDF               	movwf	indf2,c
  3186                           
  3187                           ;time.c: 348: e++;
  3188  007216  4A06               	infsnz	Read_date@e,f,c
  3189  007218  2A07               	incf	Read_date@e+1,f,c
  3190                           
  3191                           ;time.c: 349: *e = '/';
  3192  00721A  C006  FFD9         	movff	Read_date@e,fsr2l
  3193  00721E  C007  FFDA         	movff	Read_date@e+1,fsr2h
  3194  007222  0E2F               	movlw	47
  3195  007224  6EDF               	movwf	indf2,c
  3196  007226  0012               	return	
  3197  007228                     __end_of_Read_date:
  3198                           	opt stack 0
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           postinc0	equ	0xFEE
  3204                           wreg	equ	0xFE8
  3205                           indf1	equ	0xFE7
  3206                           postinc1	equ	0xFE6
  3207                           postdec1	equ	0xFE5
  3208                           fsr1h	equ	0xFE2
  3209                           fsr1l	equ	0xFE1
  3210                           indf2	equ	0xFDF
  3211                           postinc2	equ	0xFDE
  3212                           fsr2h	equ	0xFDA
  3213                           fsr2l	equ	0xFD9
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _Read *****************
  3217 ;; Defined at:
  3218 ;;		line 46 in file "i2c_1.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  c               1    4[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      unsigned char 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0
  3233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3235 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3236 ;;Total ram usage:        1 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    3
  3239 ;; This function calls:
  3240 ;;		_ReadBUF
  3241 ;;		_ReadI2C
  3242 ;;		_Write_I2C
  3243 ;;		_delay_ms
  3244 ;; This function is called by:
  3245 ;;		_Read_sec
  3246 ;;		_Read_min
  3247 ;;		_Read_hour
  3248 ;;		_Read_day
  3249 ;;		_Read_date
  3250 ;;		_Read_month
  3251 ;;		_Read_year
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text16
  3256  006DF2                     __ptext16:
  3257                           	opt stack 0
  3258  006DF2                     _Read:
  3259                           	opt stack 25
  3260                           
  3261                           ;i2c_1.c: 48: unsigned char c;
  3262                           ;i2c_1.c: 49: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  3263                           
  3264                           ;incstack = 0
  3265  006DF2  82C5               	bsf	4037,1,c	;volatile
  3266  006DF4                     l320:
  3267  006DF4  B2C5               	btfsc	4037,1,c	;volatile
  3268  006DF6  D7FE               	goto	l320
  3269                           
  3270                           ;i2c_1.c: 50: delay_ms(1);
  3271  006DF8  0E01               	movlw	1
  3272  006DFA  ECB1  F036         	call	_delay_ms
  3273                           
  3274                           ;i2c_1.c: 51: Write_I2C( 0xD1 );
  3275  006DFE  0ED1               	movlw	209
  3276  006E00  EC5F  F036         	call	_Write_I2C
  3277                           
  3278                           ;i2c_1.c: 52: c = ReadI2C();
  3279  006E04  EC61  F037         	call	_ReadI2C	;wreg free
  3280  006E08  6E05               	movwf	Read@c,c
  3281                           
  3282                           ;i2c_1.c: 53: ReadBUF();
  3283  006E0A  EC4D  F036         	call	_ReadBUF	;wreg free
  3284                           
  3285                           ;i2c_1.c: 54: return(c);
  3286  006E0E  5005               	movf	Read@c,w,c
  3287  006E10  0012               	return	
  3288  006E12                     __end_of_Read:
  3289                           	opt stack 0
  3290                           tblptru	equ	0xFF8
  3291                           tblptrh	equ	0xFF7
  3292                           tblptrl	equ	0xFF6
  3293                           tablat	equ	0xFF5
  3294                           postinc0	equ	0xFEE
  3295                           wreg	equ	0xFE8
  3296                           indf1	equ	0xFE7
  3297                           postinc1	equ	0xFE6
  3298                           postdec1	equ	0xFE5
  3299                           fsr1h	equ	0xFE2
  3300                           fsr1l	equ	0xFE1
  3301                           indf2	equ	0xFDF
  3302                           postinc2	equ	0xFDE
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _ReadI2C *****************
  3308 ;; Defined at:
  3309 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_read.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3325 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3326 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3327 ;;Total ram usage:        1 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_Read
  3333 ;;		_Read_From_Addr
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text17
  3338  006EC2                     __ptext17:
  3339                           	opt stack 0
  3340  006EC2                     _ReadI2C:
  3341                           	opt stack 27
  3342                           
  3343                           ;incstack = 0
  3344  006EC2  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  3345  006EC6  0E0F               	movlw	15
  3346  006EC8  1601               	andwf	??_ReadI2C,f,c
  3347  006ECA  5001               	movf	??_ReadI2C,w,c
  3348  006ECC  0A08               	xorlw	8
  3349  006ECE  B4D8               	btfsc	status,2,c
  3350  006ED0  D007               	goto	l584
  3351  006ED2  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  3352  006ED6  0E0F               	movlw	15
  3353  006ED8  1601               	andwf	??_ReadI2C,f,c
  3354  006EDA  5001               	movf	??_ReadI2C,w,c
  3355  006EDC  0A0B               	xorlw	11
  3356  006EDE  B4D8               	btfsc	status,2,c
  3357  006EE0                     l584:
  3358  006EE0  86C5               	bsf	4037,3,c	;volatile
  3359  006EE2                     l585:
  3360  006EE2  A0C7               	btfss	4039,0,c	;volatile
  3361  006EE4  D7FE               	goto	l585
  3362  006EE6  50C9               	movf	4041,w,c	;volatile
  3363  006EE8  0012               	return	
  3364  006EEA                     __end_of_ReadI2C:
  3365                           	opt stack 0
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           postinc0	equ	0xFEE
  3371                           wreg	equ	0xFE8
  3372                           indf1	equ	0xFE7
  3373                           postinc1	equ	0xFE6
  3374                           postdec1	equ	0xFE5
  3375                           fsr1h	equ	0xFE2
  3376                           fsr1l	equ	0xFE1
  3377                           indf2	equ	0xFDF
  3378                           postinc2	equ	0xFDE
  3379                           fsr2h	equ	0xFDA
  3380                           fsr2l	equ	0xFD9
  3381                           status	equ	0xFD8
  3382                           
  3383 ;; *************** function _Read_char *****************
  3384 ;; Defined at:
  3385 ;;		line 44 in file "uart.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  c               1    2[COMRAM] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      unsigned char 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0
  3400 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3402 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3403 ;;Total ram usage:        1 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    2
  3406 ;; This function calls:
  3407 ;;		_ReadUSART
  3408 ;;		_Write
  3409 ;; This function is called by:
  3410 ;;		_main
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text18
  3415  006DD2                     __ptext18:
  3416                           	opt stack 0
  3417  006DD2                     _Read_char:
  3418                           	opt stack 28
  3419  006DD2                     l462:
  3420  006DD2  AA9E               	btfss	3998,5,c	;volatile
  3421  006DD4  D7FE               	goto	l462
  3422                           
  3423                           ;uart.c: 48: c = ReadUSART();
  3424  006DD6  ECCB  F036         	call	_ReadUSART	;wreg free
  3425  006DDA  6E03               	movwf	Read_char@c,c
  3426                           
  3427                           ;uart.c: 49: Write('\n');
  3428  006DDC  0E0A               	movlw	10
  3429  006DDE  EC58  F036         	call	_Write
  3430                           
  3431                           ;uart.c: 50: Write('\r');
  3432  006DE2  0E0D               	movlw	13
  3433  006DE4  EC58  F036         	call	_Write
  3434                           
  3435                           ;uart.c: 51: Write(c);
  3436  006DE8  5003               	movf	Read_char@c,w,c
  3437  006DEA  EC58  F036         	call	_Write
  3438                           
  3439                           ;uart.c: 52: return (c);
  3440  006DEE  5003               	movf	Read_char@c,w,c
  3441  006DF0  0012               	return	
  3442  006DF2                     __end_of_Read_char:
  3443                           	opt stack 0
  3444                           tblptru	equ	0xFF8
  3445                           tblptrh	equ	0xFF7
  3446                           tblptrl	equ	0xFF6
  3447                           tablat	equ	0xFF5
  3448                           postinc0	equ	0xFEE
  3449                           wreg	equ	0xFE8
  3450                           indf1	equ	0xFE7
  3451                           postinc1	equ	0xFE6
  3452                           postdec1	equ	0xFE5
  3453                           fsr1h	equ	0xFE2
  3454                           fsr1l	equ	0xFE1
  3455                           indf2	equ	0xFDF
  3456                           postinc2	equ	0xFDE
  3457                           fsr2h	equ	0xFDA
  3458                           fsr2l	equ	0xFD9
  3459                           status	equ	0xFD8
  3460                           
  3461 ;; *************** function _OpenXLCD *****************
  3462 ;; Defined at:
  3463 ;;		line 80 in file "xlcd.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  lcdtype         1    wreg     unsigned char 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  lcdtype         1    6[COMRAM] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;		None               void
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0
  3478 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3480 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3481 ;;Total ram usage:        1 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    3
  3484 ;; This function calls:
  3485 ;;		_BusyXLCD
  3486 ;;		_Delay10KTCYx
  3487 ;;		_DelayPORXLCD
  3488 ;;		_SetDDRamAddr
  3489 ;;		_WriteCmdXLCD
  3490 ;; This function is called by:
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text19
  3496  007498                     __ptext19:
  3497                           	opt stack 0
  3498  007498                     _OpenXLCD:
  3499                           	opt stack 27
  3500                           
  3501                           ;incstack = 0
  3502                           ;OpenXLCD@lcdtype stored from wreg
  3503  007498  6E07               	movwf	OpenXLCD@lcdtype,c
  3504                           
  3505                           ;xlcd.c: 83: PORTD = 0;
  3506  00749A  0E00               	movlw	0
  3507  00749C  6E83               	movwf	3971,c	;volatile
  3508                           
  3509                           ;xlcd.c: 84: TRISD = 0x00;
  3510  00749E  0E00               	movlw	0
  3511  0074A0  6E95               	movwf	3989,c	;volatile
  3512                           
  3513                           ;xlcd.c: 86: TRISAbits.TRISA1 = 0;
  3514  0074A2  9292               	bcf	3986,1,c	;volatile
  3515                           
  3516                           ;xlcd.c: 87: TRISAbits.TRISA2 = 0;
  3517  0074A4  9492               	bcf	3986,2,c	;volatile
  3518                           
  3519                           ;xlcd.c: 88: TRISAbits.TRISA0 = 0;
  3520  0074A6  9092               	bcf	3986,0,c	;volatile
  3521                           
  3522                           ;xlcd.c: 89: LATAbits.LATA1 = 0;
  3523  0074A8  9289               	bcf	3977,1,c	;volatile
  3524                           
  3525                           ;xlcd.c: 90: LATAbits.LATA2 = 0;
  3526  0074AA  9489               	bcf	3977,2,c	;volatile
  3527                           
  3528                           ;xlcd.c: 91: LATAbits.LATA0 = 0;
  3529  0074AC  9089               	bcf	3977,0,c	;volatile
  3530                           
  3531                           ;xlcd.c: 94: DelayPORXLCD();
  3532  0074AE  EC49  F036         	call	_DelayPORXLCD	;wreg free
  3533                           
  3534                           ;xlcd.c: 96: WriteCmdXLCD(0x30);
  3535  0074B2  0E30               	movlw	48
  3536  0074B4  EC2B  F037         	call	_WriteCmdXLCD
  3537                           
  3538                           ;xlcd.c: 97: Delay10KTCYx(0x05);
  3539  0074B8  0E05               	movlw	5
  3540  0074BA  EC9A  F036         	call	_Delay10KTCYx
  3541                           
  3542                           ;xlcd.c: 98: WriteCmdXLCD(0x30);
  3543  0074BE  0E30               	movlw	48
  3544  0074C0  EC2B  F037         	call	_WriteCmdXLCD
  3545                           
  3546                           ;xlcd.c: 99: Delay10KTCYx(0x01);
  3547  0074C4  0E01               	movlw	1
  3548  0074C6  EC9A  F036         	call	_Delay10KTCYx
  3549                           
  3550                           ;xlcd.c: 100: WriteCmdXLCD(0x32);
  3551  0074CA  0E32               	movlw	50
  3552  0074CC  EC2B  F037         	call	_WriteCmdXLCD
  3553  0074D0                     l2963:
  3554  0074D0  EC1A  F037         	call	_BusyXLCD	;wreg free
  3555  0074D4  0900               	iorlw	0
  3556  0074D6  A4D8               	btfss	status,2,c
  3557  0074D8  D7FB               	goto	l2963
  3558  0074DA                     l2965:
  3559  0074DA  EC1A  F037         	call	_BusyXLCD	;wreg free
  3560  0074DE  0900               	iorlw	0
  3561  0074E0  A4D8               	btfss	status,2,c
  3562  0074E2  D7FB               	goto	l2965
  3563                           
  3564                           ;xlcd.c: 106: WriteCmdXLCD(lcdtype);
  3565  0074E4  5007               	movf	OpenXLCD@lcdtype,w,c
  3566  0074E6  EC2B  F037         	call	_WriteCmdXLCD
  3567  0074EA                     l2969:
  3568  0074EA  EC1A  F037         	call	_BusyXLCD	;wreg free
  3569  0074EE  0900               	iorlw	0
  3570  0074F0  A4D8               	btfss	status,2,c
  3571  0074F2  D7FB               	goto	l2969
  3572                           
  3573                           ;xlcd.c: 110: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3574  0074F4  0E08               	movlw	8
  3575  0074F6  EC2B  F037         	call	_WriteCmdXLCD
  3576  0074FA                     l2973:
  3577  0074FA  EC1A  F037         	call	_BusyXLCD	;wreg free
  3578  0074FE  0900               	iorlw	0
  3579  007500  A4D8               	btfss	status,2,c
  3580  007502  D7FB               	goto	l2973
  3581                           
  3582                           ;xlcd.c: 112: WriteCmdXLCD(0b00001111);
  3583  007504  0E0F               	movlw	15
  3584  007506  EC2B  F037         	call	_WriteCmdXLCD
  3585  00750A                     l2977:
  3586  00750A  EC1A  F037         	call	_BusyXLCD	;wreg free
  3587  00750E  0900               	iorlw	0
  3588  007510  A4D8               	btfss	status,2,c
  3589  007512  D7FB               	goto	l2977
  3590                           
  3591                           ;xlcd.c: 116: WriteCmdXLCD(0x01);
  3592  007514  0E01               	movlw	1
  3593  007516  EC2B  F037         	call	_WriteCmdXLCD
  3594  00751A                     l2981:
  3595  00751A  EC1A  F037         	call	_BusyXLCD	;wreg free
  3596  00751E  0900               	iorlw	0
  3597  007520  A4D8               	btfss	status,2,c
  3598  007522  D7FB               	goto	l2981
  3599                           
  3600                           ;xlcd.c: 119: SetDDRamAddr(0x80);
  3601  007524  0E80               	movlw	128
  3602  007526  EC3E  F038         	call	_SetDDRamAddr
  3603                           
  3604                           ;xlcd.c: 120: return;
  3605  00752A  0012               	return	
  3606  00752C                     __end_of_OpenXLCD:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           tblptrh	equ	0xFF7
  3610                           tblptrl	equ	0xFF6
  3611                           tablat	equ	0xFF5
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           indf1	equ	0xFE7
  3615                           postinc1	equ	0xFE6
  3616                           postdec1	equ	0xFE5
  3617                           fsr1h	equ	0xFE2
  3618                           fsr1l	equ	0xFE1
  3619                           indf2	equ	0xFDF
  3620                           postinc2	equ	0xFDE
  3621                           fsr2h	equ	0xFDA
  3622                           fsr2l	equ	0xFD9
  3623                           status	equ	0xFD8
  3624                           
  3625 ;; *************** function _WriteCmdXLCD *****************
  3626 ;; Defined at:
  3627 ;;		line 44 in file "xlcd.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  cmd             1    wreg     unsigned char 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  cmd             1    2[COMRAM] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;		None               void
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0
  3642 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3644 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3645 ;;Total ram usage:        1 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    2
  3648 ;; This function calls:
  3649 ;;		_DelayFor18TCY
  3650 ;; This function is called by:
  3651 ;;		_main
  3652 ;;		_OpenXLCD
  3653 ;;		_Write_time_XLCD
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text20
  3658  006E56                     __ptext20:
  3659                           	opt stack 0
  3660  006E56                     _WriteCmdXLCD:
  3661                           	opt stack 27
  3662                           
  3663                           ;incstack = 0
  3664                           ;WriteCmdXLCD@cmd stored from wreg
  3665  006E56  6E03               	movwf	WriteCmdXLCD@cmd,c
  3666                           
  3667                           ;xlcd.c: 47: TRISD = 0;
  3668  006E58  0E00               	movlw	0
  3669  006E5A  6E95               	movwf	3989,c	;volatile
  3670                           
  3671                           ;xlcd.c: 48: PORTD = cmd;
  3672  006E5C  C003  FF83         	movff	WriteCmdXLCD@cmd,3971	;volatile
  3673                           
  3674                           ;xlcd.c: 49: LATAbits.LATA1 = 0;
  3675  006E60  9289               	bcf	3977,1,c	;volatile
  3676                           
  3677                           ;xlcd.c: 50: LATAbits.LATA2 = 0;
  3678  006E62  9489               	bcf	3977,2,c	;volatile
  3679                           
  3680                           ;xlcd.c: 51: DelayFor18TCY();
  3681  006E64  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  3682                           
  3683                           ;xlcd.c: 52: LATAbits.LATA0 = 1;
  3684  006E68  8089               	bsf	3977,0,c	;volatile
  3685                           
  3686                           ;xlcd.c: 53: DelayFor18TCY();
  3687  006E6A  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  3688                           
  3689                           ;xlcd.c: 54: LATAbits.LATA0 = 0;
  3690  006E6E  9089               	bcf	3977,0,c	;volatile
  3691                           
  3692                           ;xlcd.c: 55: DelayFor18TCY();
  3693  006E70  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  3694                           
  3695                           ;xlcd.c: 56: TRISD = 0xff;
  3696  006E74  6895               	setf	3989,c	;volatile
  3697                           
  3698                           ;xlcd.c: 59: return;
  3699  006E76  0012               	return	
  3700  006E78                     __end_of_WriteCmdXLCD:
  3701                           	opt stack 0
  3702                           tblptru	equ	0xFF8
  3703                           tblptrh	equ	0xFF7
  3704                           tblptrl	equ	0xFF6
  3705                           tablat	equ	0xFF5
  3706                           postinc0	equ	0xFEE
  3707                           wreg	equ	0xFE8
  3708                           indf1	equ	0xFE7
  3709                           postinc1	equ	0xFE6
  3710                           postdec1	equ	0xFE5
  3711                           fsr1h	equ	0xFE2
  3712                           fsr1l	equ	0xFE1
  3713                           indf2	equ	0xFDF
  3714                           postinc2	equ	0xFDE
  3715                           fsr2h	equ	0xFDA
  3716                           fsr2l	equ	0xFD9
  3717                           status	equ	0xFD8
  3718                           
  3719 ;; *************** function _SetDDRamAddr *****************
  3720 ;; Defined at:
  3721 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\XLCD\setddram.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  DDaddr          1    wreg     unsigned char 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  DDaddr          1    5[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;		None               void
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0
  3736 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3737 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3738 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3739 ;;Total ram usage:        4 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    2
  3742 ;; This function calls:
  3743 ;;		_DelayFor18TCY
  3744 ;; This function is called by:
  3745 ;;		_main
  3746 ;;		_OpenXLCD
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text21
  3751  00707C                     __ptext21:
  3752                           	opt stack 0
  3753  00707C                     _SetDDRamAddr:
  3754                           	opt stack 28
  3755                           
  3756                           ;incstack = 0
  3757                           ;SetDDRamAddr@DDaddr stored from wreg
  3758  00707C  6E06               	movwf	SetDDRamAddr@DDaddr,c
  3759  00707E  0EF0               	movlw	240
  3760  007080  1693               	andwf	3987,f,c	;volatile
  3761  007082  0EF0               	movlw	240
  3762  007084  1681               	andwf	3969,f,c	;volatile
  3763  007086  5006               	movf	SetDDRamAddr@DDaddr,w,c
  3764  007088  6E03               	movwf	??_SetDDRamAddr& (0+255),c
  3765  00708A  6A04               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  3766  00708C  8E03               	bsf	??_SetDDRamAddr,7,c
  3767  00708E  0E04               	movlw	4
  3768  007090  6E05               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  3769  007092                     u1755:
  3770  007092  3404               	rlcf	??_SetDDRamAddr+1,w,c
  3771  007094  3204               	rrcf	??_SetDDRamAddr+1,f,c
  3772  007096  3203               	rrcf	??_SetDDRamAddr,f,c
  3773  007098  2E05               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  3774  00709A  D7FB               	goto	u1755
  3775  00709C  5003               	movf	??_SetDDRamAddr,w,c
  3776  00709E  0B0F               	andlw	15
  3777  0070A0  1281               	iorwf	3969,f,c	;volatile
  3778  0070A2  9C8A               	bcf	3978,6,c	;volatile
  3779  0070A4  9A8A               	bcf	3978,5,c	;volatile
  3780  0070A6  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  3781  0070AA  888A               	bsf	3978,4,c	;volatile
  3782  0070AC  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  3783  0070B0  988A               	bcf	3978,4,c	;volatile
  3784  0070B2  0EF0               	movlw	240
  3785  0070B4  1681               	andwf	3969,f,c	;volatile
  3786  0070B6  5006               	movf	SetDDRamAddr@DDaddr,w,c
  3787  0070B8  0B0F               	andlw	15
  3788  0070BA  1281               	iorwf	3969,f,c	;volatile
  3789  0070BC  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  3790  0070C0  888A               	bsf	3978,4,c	;volatile
  3791  0070C2  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  3792  0070C6  988A               	bcf	3978,4,c	;volatile
  3793  0070C8  0E0F               	movlw	15
  3794  0070CA  1293               	iorwf	3987,f,c	;volatile
  3795  0070CC  0012               	return	
  3796  0070CE                     __end_of_SetDDRamAddr:
  3797                           	opt stack 0
  3798                           tblptru	equ	0xFF8
  3799                           tblptrh	equ	0xFF7
  3800                           tblptrl	equ	0xFF6
  3801                           tablat	equ	0xFF5
  3802                           postinc0	equ	0xFEE
  3803                           wreg	equ	0xFE8
  3804                           indf1	equ	0xFE7
  3805                           postinc1	equ	0xFE6
  3806                           postdec1	equ	0xFE5
  3807                           fsr1h	equ	0xFE2
  3808                           fsr1l	equ	0xFE1
  3809                           indf2	equ	0xFDF
  3810                           postinc2	equ	0xFDE
  3811                           fsr2h	equ	0xFDA
  3812                           fsr2l	equ	0xFD9
  3813                           status	equ	0xFD8
  3814                           
  3815 ;; *************** function _DelayPORXLCD *****************
  3816 ;; Defined at:
  3817 ;;		line 53 in file "delay.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;		None               void
  3824 ;; Registers used:
  3825 ;;		wreg, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3831 ;;      Params:         0       0       0       0       0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3834 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3835 ;;Total ram usage:        0 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    1
  3838 ;; This function calls:
  3839 ;;		_Delay1KTCYx
  3840 ;; This function is called by:
  3841 ;;		_OpenXLCD
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text22
  3846  006C92                     __ptext22:
  3847                           	opt stack 0
  3848  006C92                     _DelayPORXLCD:
  3849                           	opt stack 28
  3850                           
  3851                           ;delay.c: 55: Delay1KTCYx(75);
  3852                           
  3853                           ;incstack = 0
  3854  006C92  0E4B               	movlw	75
  3855  006C94  EC6E  F036         	call	_Delay1KTCYx
  3856                           
  3857                           ;delay.c: 58: return;
  3858  006C98  0012               	return	
  3859  006C9A                     __end_of_DelayPORXLCD:
  3860                           	opt stack 0
  3861                           tblptru	equ	0xFF8
  3862                           tblptrh	equ	0xFF7
  3863                           tblptrl	equ	0xFF6
  3864                           tablat	equ	0xFF5
  3865                           postinc0	equ	0xFEE
  3866                           wreg	equ	0xFE8
  3867                           indf1	equ	0xFE7
  3868                           postinc1	equ	0xFE6
  3869                           postdec1	equ	0xFE5
  3870                           fsr1h	equ	0xFE2
  3871                           fsr1l	equ	0xFE1
  3872                           indf2	equ	0xFDF
  3873                           postinc2	equ	0xFDE
  3874                           fsr2h	equ	0xFDA
  3875                           fsr2l	equ	0xFD9
  3876                           status	equ	0xFD8
  3877                           
  3878 ;; *************** function _Delay10KTCYx *****************
  3879 ;; Defined at:
  3880 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d10ktcyx.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  unit            1    wreg     unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  unit            1    1[COMRAM] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;		None               void
  3887 ;; Registers used:
  3888 ;;		wreg
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0
  3895 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3896 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3897 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3898 ;;Total ram usage:        2 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_OpenXLCD
  3904 ;;		_Delay_s_
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text23
  3909  006D34                     __ptext23:
  3910                           	opt stack 0
  3911  006D34                     _Delay10KTCYx:
  3912                           	opt stack 29
  3913                           
  3914                           ;incstack = 0
  3915                           ;Delay10KTCYx@unit stored from wreg
  3916  006D34  6E02               	movwf	Delay10KTCYx@unit,c
  3917  006D36                     l848:
  3918  006D36  0E0D               	movlw	13
  3919  006D38  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  3920  006D3A  0EFC               	movlw	252
  3921  006D3C                     u2857:
  3922  006D3C  2EE8               	decfsz	wreg,f,c
  3923  006D3E  D7FE               	goto	u2857
  3924  006D40  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  3925  006D42  D7FC               	goto	u2857
  3926  006D44  2E02               	decfsz	Delay10KTCYx@unit,f,c
  3927  006D46  D7F7               	goto	l848
  3928  006D48  0012               	return	
  3929  006D4A                     __end_of_Delay10KTCYx:
  3930                           	opt stack 0
  3931                           tblptru	equ	0xFF8
  3932                           tblptrh	equ	0xFF7
  3933                           tblptrl	equ	0xFF6
  3934                           tablat	equ	0xFF5
  3935                           postinc0	equ	0xFEE
  3936                           wreg	equ	0xFE8
  3937                           indf1	equ	0xFE7
  3938                           postinc1	equ	0xFE6
  3939                           postdec1	equ	0xFE5
  3940                           fsr1h	equ	0xFE2
  3941                           fsr1l	equ	0xFE1
  3942                           indf2	equ	0xFDF
  3943                           postinc2	equ	0xFDE
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _BusyXLCD *****************
  3949 ;; Defined at:
  3950 ;;		line 22 in file "xlcd.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      unsigned char 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3967 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    2
  3971 ;; This function calls:
  3972 ;;		_DelayFor18TCY
  3973 ;; This function is called by:
  3974 ;;		_OpenXLCD
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text24
  3979  006E34                     __ptext24:
  3980                           	opt stack 0
  3981  006E34                     _BusyXLCD:
  3982                           	opt stack 27
  3983                           
  3984                           ;xlcd.c: 24: LATAbits.LATA1 = 1;
  3985                           
  3986                           ;incstack = 0
  3987  006E34  8289               	bsf	3977,1,c	;volatile
  3988                           
  3989                           ;xlcd.c: 25: LATAbits.LATA2 = 0;
  3990  006E36  9489               	bcf	3977,2,c	;volatile
  3991                           
  3992                           ;xlcd.c: 26: DelayFor18TCY();
  3993  006E38  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  3994                           
  3995                           ;xlcd.c: 27: LATAbits.LATA0 = 1;
  3996  006E3C  8089               	bsf	3977,0,c	;volatile
  3997                           
  3998                           ;xlcd.c: 28: DelayFor18TCY();
  3999  006E3E  EC8F  F036         	call	_DelayFor18TCY	;wreg free
  4000                           
  4001                           ;xlcd.c: 30: if(PORTD&0x80)
  4002  006E42  AE83               	btfss	3971,7,c	;volatile
  4003  006E44  D004               	goto	l393
  4004                           
  4005                           ;xlcd.c: 31: {
  4006                           ;xlcd.c: 32: LATAbits.LATA0 = 0;
  4007  006E46  9089               	bcf	3977,0,c	;volatile
  4008                           
  4009                           ;xlcd.c: 33: LATAbits.LATA1 = 0;
  4010  006E48  9289               	bcf	3977,1,c	;volatile
  4011                           
  4012                           ;xlcd.c: 34: return 1;
  4013  006E4A  0E01               	movlw	1
  4014  006E4C  D003               	goto	l394
  4015  006E4E                     l393:
  4016                           
  4017                           ;xlcd.c: 36: else
  4018                           ;xlcd.c: 37: {
  4019                           ;xlcd.c: 38: LATAbits.LATA0 = 0;
  4020  006E4E  9089               	bcf	3977,0,c	;volatile
  4021                           
  4022                           ;xlcd.c: 39: LATAbits.LATA1 = 0;
  4023  006E50  9289               	bcf	3977,1,c	;volatile
  4024                           
  4025                           ;xlcd.c: 40: return 0;
  4026  006E52  0E00               	movlw	0
  4027  006E54                     l394:
  4028  006E54  0012               	return	
  4029  006E56                     __end_of_BusyXLCD:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           postinc0	equ	0xFEE
  4036                           wreg	equ	0xFE8
  4037                           indf1	equ	0xFE7
  4038                           postinc1	equ	0xFE6
  4039                           postdec1	equ	0xFE5
  4040                           fsr1h	equ	0xFE2
  4041                           fsr1l	equ	0xFE1
  4042                           indf2	equ	0xFDF
  4043                           postinc2	equ	0xFDE
  4044                           fsr2h	equ	0xFDA
  4045                           fsr2l	equ	0xFD9
  4046                           status	equ	0xFD8
  4047                           
  4048 ;; *************** function _DelayFor18TCY *****************
  4049 ;; Defined at:
  4050 ;;		line 45 in file "delay.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;		None
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  i               1    1[COMRAM] unsigned char 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;		None               void
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4064 ;;      Params:         0       0       0       0       0       0       0       0       0
  4065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4067 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4068 ;;Total ram usage:        1 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    1
  4071 ;; This function calls:
  4072 ;;		_Delay10TCYx
  4073 ;; This function is called by:
  4074 ;;		_BusyXLCD
  4075 ;;		_WriteCmdXLCD
  4076 ;;		_WriteDataXLCD
  4077 ;;		_SetDDRamAddr
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text25
  4082  006D1E                     __ptext25:
  4083                           	opt stack 0
  4084  006D1E                     _DelayFor18TCY:
  4085                           	opt stack 27
  4086                           
  4087                           ;delay.c: 47: unsigned char i;
  4088                           ;delay.c: 48: for(i=0;i<10;i++)
  4089                           
  4090                           ;incstack = 0
  4091  006D1E  0E00               	movlw	0
  4092  006D20  6E02               	movwf	DelayFor18TCY@i,c
  4093  006D22  D004               	goto	L3
  4094  006D24                     l2357:
  4095                           
  4096                           ;delay.c: 49: {
  4097                           ;delay.c: 50: Delay10TCYx(50);
  4098  006D24  0E32               	movlw	50
  4099  006D26  EC76  F036         	call	_Delay10TCYx
  4100  006D2A  2A02               	incf	DelayFor18TCY@i,f,c
  4101  006D2C                     L3:
  4102  006D2C  0E09               	movlw	9
  4103  006D2E  6402               	cpfsgt	DelayFor18TCY@i,c
  4104  006D30  D7F9               	goto	l2357
  4105  006D32  0012               	return	
  4106  006D34                     __end_of_DelayFor18TCY:
  4107                           	opt stack 0
  4108                           tblptru	equ	0xFF8
  4109                           tblptrh	equ	0xFF7
  4110                           tblptrl	equ	0xFF6
  4111                           tablat	equ	0xFF5
  4112                           postinc0	equ	0xFEE
  4113                           wreg	equ	0xFE8
  4114                           indf1	equ	0xFE7
  4115                           postinc1	equ	0xFE6
  4116                           postdec1	equ	0xFE5
  4117                           fsr1h	equ	0xFE2
  4118                           fsr1l	equ	0xFE1
  4119                           indf2	equ	0xFDF
  4120                           postinc2	equ	0xFDE
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8
  4124                           
  4125 ;; *************** function _Delay10TCYx *****************
  4126 ;; Defined at:
  4127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d10tcyx.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  unit            1    wreg     unsigned char 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  unit            1    0[COMRAM] unsigned char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;		None               void
  4134 ;; Registers used:
  4135 ;;		wreg
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4141 ;;      Params:         0       0       0       0       0       0       0       0       0
  4142 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4144 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4145 ;;Total ram usage:        1 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_DelayFor18TCY
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text26
  4155  006CEC                     __ptext26:
  4156                           	opt stack 0
  4157  006CEC                     _Delay10TCYx:
  4158                           	opt stack 27
  4159                           
  4160                           ;incstack = 0
  4161                           ;Delay10TCYx@unit stored from wreg
  4162  006CEC  6E01               	movwf	Delay10TCYx@unit,c
  4163  006CEE                     l855:
  4164  006CEE  0E03               	movlw	3
  4165  006CF0                     u2867:
  4166  006CF0  2EE8               	decfsz	wreg,f,c
  4167  006CF2  D7FE               	goto	u2867
  4168  006CF4  F000               	nop	
  4169  006CF6  2E01               	decfsz	Delay10TCYx@unit,f,c
  4170  006CF8  D7FA               	goto	l855
  4171  006CFA  0012               	return	
  4172  006CFC                     __end_of_Delay10TCYx:
  4173                           	opt stack 0
  4174                           tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           postinc0	equ	0xFEE
  4179                           wreg	equ	0xFE8
  4180                           indf1	equ	0xFE7
  4181                           postinc1	equ	0xFE6
  4182                           postdec1	equ	0xFE5
  4183                           fsr1h	equ	0xFE2
  4184                           fsr1l	equ	0xFE1
  4185                           indf2	equ	0xFDF
  4186                           postinc2	equ	0xFDE
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function _Get_data *****************
  4192 ;; Defined at:
  4193 ;;		line 169 in file "time.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  str2           19    0[BANK0 ] unsigned char [19]
  4198 ;;  error          18   33[BANK0 ] unsigned char [18]
  4199 ;;  str8           14   19[BANK0 ] unsigned char [14]
  4200 ;;  s_6             3   66[BANK0 ] unsigned char [3]
  4201 ;;  s_5             3   63[BANK0 ] unsigned char [3]
  4202 ;;  s_4             3   60[BANK0 ] unsigned char [3]
  4203 ;;  s_3             3   57[BANK0 ] unsigned char [3]
  4204 ;;  s_2             3   54[BANK0 ] unsigned char [3]
  4205 ;;  s_1             3   51[BANK0 ] unsigned char [3]
  4206 ;;  mode            1   76[BANK0 ] unsigned char 
  4207 ;;  month           1   75[BANK0 ] unsigned char 
  4208 ;;  date            1   74[BANK0 ] unsigned char 
  4209 ;;  year            1   73[BANK0 ] unsigned char 
  4210 ;;  h               1   72[BANK0 ] unsigned char 
  4211 ;;  m               1   71[BANK0 ] unsigned char 
  4212 ;;  s               1   70[BANK0 ] unsigned char 
  4213 ;;  day             1   69[BANK0 ] unsigned char 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      unsigned char 
  4216 ;; Registers used:
  4217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4223 ;;      Params:         0       0       0       0       0       0       0       0       0
  4224 ;;      Locals:         0      77       0       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4226 ;;      Totals:         0      77       0       0       0       0       0       0       0
  4227 ;;Total ram usage:       77 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    4
  4230 ;; This function calls:
  4231 ;;		_Read_string
  4232 ;;		_Set_date
  4233 ;;		_Set_day
  4234 ;;		_Set_time
  4235 ;;		_Write_str
  4236 ;;		_Write_time
  4237 ;;		_Write_time_
  4238 ;;		_strcmp
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text27
  4245  007D76                     __ptext27:
  4246                           	opt stack 0
  4247  007D76                     _Get_data:
  4248                           	opt stack 26
  4249                           
  4250                           ;time.c: 171: unsigned char s, m, h, day, date, month, year, mode=4;
  4251                           
  4252                           ;incstack = 0
  4253  007D76  0E04               	movlw	4
  4254  007D78  0100               	movlb	0	; () banked
  4255  007D7A  6FAC               	movwf	Get_data@mode& (0+255),b
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;time.c: 172: unsigned char str2[19] = "\nSELECT MODE 12/24";
  4259  007D7C  EE21  F05E         	lfsr	2,Get_data@F227
  4260  007D80  EE10  F060         	lfsr	1,Get_data@str2
  4261  007D84  0E13               	movlw	19
  4262  007D86                     u2461:
  4263  007D86  CFDE FFE6          	movff	postinc2,postinc1
  4264  007D8A  2EE8               	decfsz	wreg,f,c
  4265  007D8C  D7FC               	goto	u2461
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;time.c: 173: unsigned char str8[14] = "\nEnter AM/PM?";
  4269  007D8E  EE21  F0B9         	lfsr	2,Get_data@F229
  4270  007D92  EE10  F073         	lfsr	1,Get_data@str8
  4271  007D96  0E0E               	movlw	14
  4272  007D98                     u2471:
  4273  007D98  CFDE FFE6          	movff	postinc2,postinc1
  4274  007D9C  2EE8               	decfsz	wreg,f,c
  4275  007D9E  D7FC               	goto	u2471
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;time.c: 174: unsigned char error[] = "\nInvalid Entry..!";
  4279  007DA0  EE21  F071         	lfsr	2,Get_data@F231
  4280  007DA4  EE10  F081         	lfsr	1,Get_data@error
  4281  007DA8  0E12               	movlw	18
  4282  007DAA                     u2481:
  4283  007DAA  CFDE FFE6          	movff	postinc2,postinc1
  4284  007DAE  2EE8               	decfsz	wreg,f,c
  4285  007DB0  D7FC               	goto	u2481
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;time.c: 175: unsigned char s_1[3] = "12";
  4289  007DB2  C0FD  F093         	movff	Get_data@F233,Get_data@s_1
  4290  007DB6  C0FE  F094         	movff	Get_data@F233+1,Get_data@s_1+1
  4291  007DBA  C0FF  F095         	movff	Get_data@F233+2,Get_data@s_1+2
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;time.c: 176: unsigned char s_2[3] = "24";
  4295  007DBE  C1E3  F096         	movff	Get_data@F235,Get_data@s_2
  4296  007DC2  C1E4  F097         	movff	Get_data@F235+1,Get_data@s_2+1
  4297  007DC6  C1E5  F098         	movff	Get_data@F235+2,Get_data@s_2+2
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;time.c: 177: unsigned char s_3[3] = "am";
  4301  007DCA  C1E6  F099         	movff	Get_data@F237,Get_data@s_3
  4302  007DCE  C1E7  F09A         	movff	Get_data@F237+1,Get_data@s_3+1
  4303  007DD2  C1E8  F09B         	movff	Get_data@F237+2,Get_data@s_3+2
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;time.c: 178: unsigned char s_4[3] = "AM";
  4307  007DD6  C1E9  F09C         	movff	Get_data@F239,Get_data@s_4
  4308  007DDA  C1EA  F09D         	movff	Get_data@F239+1,Get_data@s_4+1
  4309  007DDE  C1EB  F09E         	movff	Get_data@F239+2,Get_data@s_4+2
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;time.c: 179: unsigned char s_5[3] = "pm";
  4313  007DE2  C1EC  F09F         	movff	Get_data@F241,Get_data@s_5
  4314  007DE6  C1ED  F0A0         	movff	Get_data@F241+1,Get_data@s_5+1
  4315  007DEA  C1EE  F0A1         	movff	Get_data@F241+2,Get_data@s_5+2
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;time.c: 180: unsigned char s_6[3] = "PM";
  4319  007DEE  C1EF  F0A2         	movff	Get_data@F243,Get_data@s_6
  4320  007DF2  C1F0  F0A3         	movff	Get_data@F243+1,Get_data@s_6+1
  4321  007DF6  C1F1  F0A4         	movff	Get_data@F243+2,Get_data@s_6+2
  4322  007DFA                     l3021:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;time.c: 182: {
  4326                           ;time.c: 183: Write_str(str2);
  4327  007DFA  0100               	movlb	0	; () banked
  4328  007DFC  0E00               	movlw	high Get_data@str2
  4329  007DFE  6E04               	movwf	Write_str@c+1,c
  4330  007E00  0100               	movlb	0	; () banked
  4331  007E02  0E60               	movlw	low Get_data@str2
  4332  007E04  6E03               	movwf	Write_str@c,c
  4333  007E06  EC75  F037         	call	_Write_str	;wreg free
  4334                           
  4335                           ;time.c: 184: Read_string(str, 2);
  4336  007E0A  0100               	movlb	0	; () banked
  4337  007E0C  0E00               	movlw	high _str
  4338  007E0E  6E04               	movwf	Read_string@buffer+1,c
  4339  007E10  0100               	movlb	0	; () banked
  4340  007E12  0EF0               	movlw	low _str
  4341  007E14  6E03               	movwf	Read_string@buffer,c
  4342  007E16  0E02               	movlw	2
  4343  007E18  6E05               	movwf	Read_string@len,c
  4344  007E1A  EC8C  F037         	call	_Read_string	;wreg free
  4345                           
  4346                           ;time.c: 185: if(!(strcmp(str, s_1)))
  4347  007E1E  0100               	movlb	0	; () banked
  4348  007E20  0E00               	movlw	high _str
  4349  007E22  6E02               	movwf	strcmp@s1+1,c
  4350  007E24  0100               	movlb	0	; () banked
  4351  007E26  0EF0               	movlw	low _str
  4352  007E28  6E01               	movwf	strcmp@s1,c
  4353  007E2A  0100               	movlb	0	; () banked
  4354  007E2C  0E00               	movlw	high Get_data@s_1
  4355  007E2E  6E04               	movwf	strcmp@s2+1,c
  4356  007E30  0100               	movlb	0	; () banked
  4357  007E32  0E93               	movlw	low Get_data@s_1
  4358  007E34  6E03               	movwf	strcmp@s2,c
  4359  007E36  ECAD  F037         	call	_strcmp	;wreg free
  4360  007E3A  5002               	movf	?_strcmp+1,w,c
  4361  007E3C  1001               	iorwf	?_strcmp,w,c
  4362  007E3E  A4D8               	btfss	status,2,c
  4363  007E40  D071               	goto	l3045
  4364  007E42                     l3027:
  4365                           
  4366                           ;time.c: 188: Write_str(str8);
  4367  007E42  0100               	movlb	0	; () banked
  4368  007E44  0E00               	movlw	high Get_data@str8
  4369  007E46  6E04               	movwf	Write_str@c+1,c
  4370  007E48  0100               	movlb	0	; () banked
  4371  007E4A  0E73               	movlw	low Get_data@str8
  4372  007E4C  6E03               	movwf	Write_str@c,c
  4373  007E4E  EC75  F037         	call	_Write_str	;wreg free
  4374                           
  4375                           ;time.c: 189: Read_string(str, 2);
  4376  007E52  0100               	movlb	0	; () banked
  4377  007E54  0E00               	movlw	high _str
  4378  007E56  6E04               	movwf	Read_string@buffer+1,c
  4379  007E58  0100               	movlb	0	; () banked
  4380  007E5A  0EF0               	movlw	low _str
  4381  007E5C  6E03               	movwf	Read_string@buffer,c
  4382  007E5E  0E02               	movlw	2
  4383  007E60  6E05               	movwf	Read_string@len,c
  4384  007E62  EC8C  F037         	call	_Read_string	;wreg free
  4385                           
  4386                           ;time.c: 190: if(!(strcmp(str, s_3)) || !(strcmp(str, s_4)) )
  4387  007E66  0100               	movlb	0	; () banked
  4388  007E68  0E00               	movlw	high _str
  4389  007E6A  6E02               	movwf	strcmp@s1+1,c
  4390  007E6C  0100               	movlb	0	; () banked
  4391  007E6E  0EF0               	movlw	low _str
  4392  007E70  6E01               	movwf	strcmp@s1,c
  4393  007E72  0100               	movlb	0	; () banked
  4394  007E74  0E00               	movlw	high Get_data@s_3
  4395  007E76  6E04               	movwf	strcmp@s2+1,c
  4396  007E78  0100               	movlb	0	; () banked
  4397  007E7A  0E99               	movlw	low Get_data@s_3
  4398  007E7C  6E03               	movwf	strcmp@s2,c
  4399  007E7E  ECAD  F037         	call	_strcmp	;wreg free
  4400  007E82  5002               	movf	?_strcmp+1,w,c
  4401  007E84  1001               	iorwf	?_strcmp,w,c
  4402  007E86  B4D8               	btfsc	status,2,c
  4403  007E88  D012               	goto	l3031
  4404  007E8A  0100               	movlb	0	; () banked
  4405  007E8C  0E00               	movlw	high _str
  4406  007E8E  6E02               	movwf	strcmp@s1+1,c
  4407  007E90  0100               	movlb	0	; () banked
  4408  007E92  0EF0               	movlw	low _str
  4409  007E94  6E01               	movwf	strcmp@s1,c
  4410  007E96  0100               	movlb	0	; () banked
  4411  007E98  0E00               	movlw	high Get_data@s_4
  4412  007E9A  6E04               	movwf	strcmp@s2+1,c
  4413  007E9C  0100               	movlb	0	; () banked
  4414  007E9E  0E9C               	movlw	low Get_data@s_4
  4415  007EA0  6E03               	movwf	strcmp@s2,c
  4416  007EA2  ECAD  F037         	call	_strcmp	;wreg free
  4417  007EA6  5002               	movf	?_strcmp+1,w,c
  4418  007EA8  1001               	iorwf	?_strcmp,w,c
  4419  007EAA  A4D8               	btfss	status,2,c
  4420  007EAC  D002               	goto	l3033
  4421  007EAE                     l3031:
  4422                           
  4423                           ;time.c: 191: {
  4424                           ;time.c: 192: mode = 0;
  4425  007EAE  0E00               	movlw	0
  4426  007EB0  D025               	goto	L4
  4427  007EB2                     l3033:
  4428                           
  4429                           ;time.c: 194: else if(!(strcmp(str, s_5)) || !(strcmp(str, s_6)) )
  4430  007EB2  0100               	movlb	0	; () banked
  4431  007EB4  0E00               	movlw	high _str
  4432  007EB6  6E02               	movwf	strcmp@s1+1,c
  4433  007EB8  0100               	movlb	0	; () banked
  4434  007EBA  0EF0               	movlw	low _str
  4435  007EBC  6E01               	movwf	strcmp@s1,c
  4436  007EBE  0100               	movlb	0	; () banked
  4437  007EC0  0E00               	movlw	high Get_data@s_5
  4438  007EC2  6E04               	movwf	strcmp@s2+1,c
  4439  007EC4  0100               	movlb	0	; () banked
  4440  007EC6  0E9F               	movlw	low Get_data@s_5
  4441  007EC8  6E03               	movwf	strcmp@s2,c
  4442  007ECA  ECAD  F037         	call	_strcmp	;wreg free
  4443  007ECE  5002               	movf	?_strcmp+1,w,c
  4444  007ED0  1001               	iorwf	?_strcmp,w,c
  4445  007ED2  B4D8               	btfsc	status,2,c
  4446  007ED4  D012               	goto	l3037
  4447  007ED6  0100               	movlb	0	; () banked
  4448  007ED8  0E00               	movlw	high _str
  4449  007EDA  6E02               	movwf	strcmp@s1+1,c
  4450  007EDC  0100               	movlb	0	; () banked
  4451  007EDE  0EF0               	movlw	low _str
  4452  007EE0  6E01               	movwf	strcmp@s1,c
  4453  007EE2  0100               	movlb	0	; () banked
  4454  007EE4  0E00               	movlw	high Get_data@s_6
  4455  007EE6  6E04               	movwf	strcmp@s2+1,c
  4456  007EE8  0100               	movlb	0	; () banked
  4457  007EEA  0EA2               	movlw	low Get_data@s_6
  4458  007EEC  6E03               	movwf	strcmp@s2,c
  4459  007EEE  ECAD  F037         	call	_strcmp	;wreg free
  4460  007EF2  5002               	movf	?_strcmp+1,w,c
  4461  007EF4  1001               	iorwf	?_strcmp,w,c
  4462  007EF6  A4D8               	btfss	status,2,c
  4463  007EF8  D004               	goto	l3039
  4464  007EFA                     l3037:
  4465                           
  4466                           ;time.c: 195: {
  4467                           ;time.c: 196: mode = 1;
  4468  007EFA  0E01               	movlw	1
  4469  007EFC                     L4:
  4470  007EFC  0100               	movlb	0	; () banked
  4471  007EFE  6FAC               	movwf	Get_data@mode& (0+255),b
  4472                           
  4473                           ;time.c: 197: }
  4474  007F00  D008               	goto	l3041
  4475  007F02                     l3039:
  4476                           
  4477                           ;time.c: 198: else
  4478                           ;time.c: 199: {
  4479                           ;time.c: 200: Write_str(error);
  4480  007F02  0100               	movlb	0	; () banked
  4481  007F04  0E00               	movlw	high Get_data@error
  4482  007F06  6E04               	movwf	Write_str@c+1,c
  4483  007F08  0100               	movlb	0	; () banked
  4484  007F0A  0E81               	movlw	low Get_data@error
  4485  007F0C  6E03               	movwf	Write_str@c,c
  4486  007F0E  EC75  F037         	call	_Write_str	;wreg free
  4487  007F12                     l3041:
  4488                           
  4489                           ;time.c: 201: }
  4490                           ;time.c: 202: }while(!(mode==0||mode==1));
  4491  007F12  0100               	movlb	0	; () banked
  4492  007F14  51AC               	movf	Get_data@mode& (0+255),w,b
  4493  007F16  B4D8               	btfsc	status,2,c
  4494  007F18  D023               	goto	l3051
  4495                           
  4496                           ; BSR set to: 0
  4497  007F1A  0100               	movlb	0	; () banked
  4498  007F1C  05AC               	decf	Get_data@mode& (0+255),w,b
  4499  007F1E  B4D8               	btfsc	status,2,c
  4500  007F20  D01F               	goto	l3051
  4501  007F22  D78F               	goto	l3027
  4502  007F24                     l3045:
  4503                           
  4504                           ;time.c: 204: else if(!(strcmp(str, s_2)))
  4505  007F24  0100               	movlb	0	; () banked
  4506  007F26  0E00               	movlw	high _str
  4507  007F28  6E02               	movwf	strcmp@s1+1,c
  4508  007F2A  0100               	movlb	0	; () banked
  4509  007F2C  0EF0               	movlw	low _str
  4510  007F2E  6E01               	movwf	strcmp@s1,c
  4511  007F30  0100               	movlb	0	; () banked
  4512  007F32  0E00               	movlw	high Get_data@s_2
  4513  007F34  6E04               	movwf	strcmp@s2+1,c
  4514  007F36  0100               	movlb	0	; () banked
  4515  007F38  0E96               	movlw	low Get_data@s_2
  4516  007F3A  6E03               	movwf	strcmp@s2,c
  4517  007F3C  ECAD  F037         	call	_strcmp	;wreg free
  4518  007F40  5002               	movf	?_strcmp+1,w,c
  4519  007F42  1001               	iorwf	?_strcmp,w,c
  4520  007F44  A4D8               	btfss	status,2,c
  4521  007F46  D004               	goto	l3049
  4522                           
  4523                           ;time.c: 205: {
  4524                           ;time.c: 206: mode = 2;
  4525  007F48  0E02               	movlw	2
  4526  007F4A  0100               	movlb	0	; () banked
  4527  007F4C  6FAC               	movwf	Get_data@mode& (0+255),b
  4528                           
  4529                           ;time.c: 207: }
  4530  007F4E  D008               	goto	l3051
  4531  007F50                     l3049:
  4532                           
  4533                           ;time.c: 208: else
  4534                           ;time.c: 209: {
  4535                           ;time.c: 210: Write_str(error);
  4536  007F50  0100               	movlb	0	; () banked
  4537  007F52  0E00               	movlw	high Get_data@error
  4538  007F54  6E04               	movwf	Write_str@c+1,c
  4539  007F56  0100               	movlb	0	; () banked
  4540  007F58  0E81               	movlw	low Get_data@error
  4541  007F5A  6E03               	movwf	Write_str@c,c
  4542  007F5C  EC75  F037         	call	_Write_str	;wreg free
  4543  007F60                     l3051:
  4544                           
  4545                           ;time.c: 211: }
  4546                           ;time.c: 212: }while(!(mode==0 || mode==1 || mode==2));
  4547  007F60  0100               	movlb	0	; () banked
  4548  007F62  51AC               	movf	Get_data@mode& (0+255),w,b
  4549  007F64  B4D8               	btfsc	status,2,c
  4550  007F66  D009               	goto	l3057
  4551                           
  4552                           ; BSR set to: 0
  4553  007F68  0100               	movlb	0	; () banked
  4554  007F6A  05AC               	decf	Get_data@mode& (0+255),w,b
  4555  007F6C  B4D8               	btfsc	status,2,c
  4556  007F6E  D005               	goto	l3057
  4557                           
  4558                           ; BSR set to: 0
  4559  007F70  0100               	movlb	0	; () banked
  4560  007F72  51AC               	movf	Get_data@mode& (0+255),w,b
  4561  007F74  0A02               	xorlw	2
  4562  007F76  A4D8               	btfss	status,2,c
  4563  007F78  D740               	goto	l3021
  4564  007F7A                     l3057:
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;time.c: 213: Set_time(&s, &m, &h ,mode);
  4568  007F7A  0100               	movlb	0	; () banked
  4569  007F7C  0E00               	movlw	high Get_data@s
  4570  007F7E  6E09               	movwf	Set_time@sec+1,c
  4571  007F80  0100               	movlb	0	; () banked
  4572  007F82  0EA6               	movlw	low Get_data@s
  4573  007F84  6E08               	movwf	Set_time@sec,c
  4574  007F86  0100               	movlb	0	; () banked
  4575  007F88  0E00               	movlw	high Get_data@m
  4576  007F8A  6E0B               	movwf	Set_time@min+1,c
  4577  007F8C  0100               	movlb	0	; () banked
  4578  007F8E  0EA7               	movlw	low Get_data@m
  4579  007F90  6E0A               	movwf	Set_time@min,c
  4580  007F92  0100               	movlb	0	; () banked
  4581  007F94  0E00               	movlw	high Get_data@h
  4582  007F96  6E0D               	movwf	Set_time@hour+1,c
  4583  007F98  0100               	movlb	0	; () banked
  4584  007F9A  0EA8               	movlw	low Get_data@h
  4585  007F9C  6E0C               	movwf	Set_time@hour,c
  4586  007F9E  C0AC  F00E         	movff	Get_data@mode,Set_time@mode
  4587  007FA2  ECF6  F03D         	call	_Set_time	;wreg free
  4588                           
  4589                           ;time.c: 214: Write_time_(s, m, h);
  4590  007FA6  C0A7  F005         	movff	Get_data@m,Write_time_@m
  4591  007FAA  C0A8  F006         	movff	Get_data@h,Write_time_@h
  4592  007FAE  0100               	movlb	0	; () banked
  4593  007FB0  51A6               	movf	Get_data@s& (0+255),w,b
  4594  007FB2  EC14  F039         	call	_Write_time_
  4595                           
  4596                           ;time.c: 215: day = Set_day();
  4597  007FB6  EC96  F03A         	call	_Set_day	;wreg free
  4598  007FBA  0100               	movlb	0	; () banked
  4599  007FBC  6FA5               	movwf	Get_data@day& (0+255),b
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;time.c: 216: Set_date(&date, &month, &year);
  4603  007FBE  0100               	movlb	0	; () banked
  4604  007FC0  0E00               	movlw	high Get_data@date
  4605  007FC2  6E09               	movwf	Set_date@date+1,c
  4606  007FC4  0100               	movlb	0	; () banked
  4607  007FC6  0EAA               	movlw	low Get_data@date
  4608  007FC8  6E08               	movwf	Set_date@date,c
  4609  007FCA  0100               	movlb	0	; () banked
  4610  007FCC  0E00               	movlw	high Get_data@month
  4611  007FCE  6E0B               	movwf	Set_date@month+1,c
  4612  007FD0  0100               	movlb	0	; () banked
  4613  007FD2  0EAB               	movlw	low Get_data@month
  4614  007FD4  6E0A               	movwf	Set_date@month,c
  4615  007FD6  0100               	movlb	0	; () banked
  4616  007FD8  0E00               	movlw	high Get_data@year
  4617  007FDA  6E0D               	movwf	Set_date@year+1,c
  4618  007FDC  0100               	movlb	0	; () banked
  4619  007FDE  0EA9               	movlw	low Get_data@year
  4620  007FE0  6E0C               	movwf	Set_date@year,c
  4621  007FE2  ECAA  F03C         	call	_Set_date	;wreg free
  4622                           
  4623                           ;time.c: 217: Write_time(day, date, month, year);
  4624  007FE6  C0AA  F005         	movff	Get_data@date,Write_time@date
  4625  007FEA  C0AB  F006         	movff	Get_data@month,Write_time@month
  4626  007FEE  C0A9  F007         	movff	Get_data@year,Write_time@year
  4627  007FF2  0100               	movlb	0	; () banked
  4628  007FF4  51A5               	movf	Get_data@day& (0+255),w,b
  4629  007FF6  EC76  F039         	call	_Write_time
  4630                           
  4631                           ;time.c: 218: return (mode);
  4632  007FFA  0100               	movlb	0	; () banked
  4633  007FFC  51AC               	movf	Get_data@mode& (0+255),w,b
  4634                           
  4635                           ; BSR set to: 0
  4636                           
  4637                           ; BSR set to: 0
  4638  007FFE  0012               	return	
  4639  008000                     __end_of_Get_data:
  4640                           	opt stack 0
  4641                           tblptru	equ	0xFF8
  4642                           tblptrh	equ	0xFF7
  4643                           tblptrl	equ	0xFF6
  4644                           tablat	equ	0xFF5
  4645                           postinc0	equ	0xFEE
  4646                           wreg	equ	0xFE8
  4647                           indf1	equ	0xFE7
  4648                           postinc1	equ	0xFE6
  4649                           postdec1	equ	0xFE5
  4650                           fsr1h	equ	0xFE2
  4651                           fsr1l	equ	0xFE1
  4652                           indf2	equ	0xFDF
  4653                           postinc2	equ	0xFDE
  4654                           fsr2h	equ	0xFDA
  4655                           fsr2l	equ	0xFD9
  4656                           status	equ	0xFD8
  4657                           
  4658 ;; *************** function _strcmp *****************
  4659 ;; Defined at:
  4660 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strcmp.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  4663 ;;		 -> str(11), 
  4664 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  4665 ;;		 -> Get_data@s_6(3), Get_data@s_5(3), Get_data@s_4(3), Get_data@s_3(3), 
  4666 ;;		 -> Get_data@s_2(3), Get_data@s_1(3), 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  r               1    5[COMRAM] char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  2    0[COMRAM] int 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         4       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        6 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_Get_data
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text28
  4692  006F5A                     __ptext28:
  4693                           	opt stack 0
  4694  006F5A                     _strcmp:
  4695                           	opt stack 29
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;incstack = 0
  4699  006F5A  D004               	goto	l2657
  4700  006F5C                     l2655:
  4701  006F5C  4A01               	infsnz	strcmp@s1,f,c
  4702  006F5E  2A02               	incf	strcmp@s1+1,f,c
  4703  006F60  4A03               	infsnz	strcmp@s2,f,c
  4704  006F62  2A04               	incf	strcmp@s2+1,f,c
  4705  006F64                     l2657:
  4706  006F64  C001  FFD9         	movff	strcmp@s1,fsr2l
  4707  006F68  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  4708  006F6C  50DF               	movf	indf2,w,c
  4709  006F6E  6E05               	movwf	??_strcmp& (0+255),c
  4710  006F70  C003  FFD9         	movff	strcmp@s2,fsr2l
  4711  006F74  C004  FFDA         	movff	strcmp@s2+1,fsr2h
  4712  006F78  50DF               	movf	indf2,w,c
  4713  006F7A  0800               	sublw	0
  4714  006F7C  2405               	addwf	??_strcmp,w,c
  4715  006F7E  6E06               	movwf	strcmp@r,c
  4716  006F80  6606               	tstfsz	strcmp@r& (0+255),c
  4717  006F82  D007               	goto	l2661
  4718  006F84  C001  FFD9         	movff	strcmp@s1,fsr2l
  4719  006F88  C002  FFDA         	movff	strcmp@s1+1,fsr2h
  4720  006F8C  50DF               	movf	indf2,w,c
  4721  006F8E  A4D8               	btfss	status,2,c
  4722  006F90  D7E5               	goto	l2655
  4723  006F92                     l2661:
  4724  006F92  5006               	movf	strcmp@r,w,c
  4725  006F94  6E01               	movwf	?_strcmp,c
  4726  006F96  6A02               	clrf	?_strcmp+1,c
  4727  006F98  BE01               	btfsc	?_strcmp,7,c
  4728  006F9A  0602               	decf	?_strcmp+1,f,c
  4729  006F9C  0012               	return	
  4730  006F9E                     __end_of_strcmp:
  4731                           	opt stack 0
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           postinc0	equ	0xFEE
  4737                           wreg	equ	0xFE8
  4738                           indf1	equ	0xFE7
  4739                           postinc1	equ	0xFE6
  4740                           postdec1	equ	0xFE5
  4741                           fsr1h	equ	0xFE2
  4742                           fsr1l	equ	0xFE1
  4743                           indf2	equ	0xFDF
  4744                           postinc2	equ	0xFDE
  4745                           fsr2h	equ	0xFDA
  4746                           fsr2l	equ	0xFD9
  4747                           status	equ	0xFD8
  4748                           
  4749 ;; *************** function _Write_time_ *****************
  4750 ;; Defined at:
  4751 ;;		line 57 in file "i2c_1.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  s               1    wreg     unsigned char 
  4754 ;;  m               1    4[COMRAM] unsigned char 
  4755 ;;  h               1    5[COMRAM] unsigned char 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  s               1    6[COMRAM] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;		None               void
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4767 ;;      Params:         2       0       0       0       0       0       0       0       0
  4768 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4770 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4771 ;;Total ram usage:        3 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    3
  4774 ;; This function calls:
  4775 ;;		_OpenI2C
  4776 ;;		_ReadBUF
  4777 ;;		_Write_I2C
  4778 ;;		_delay_ms
  4779 ;; This function is called by:
  4780 ;;		_Get_data
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text29
  4785  007228                     __ptext29:
  4786                           	opt stack 0
  4787  007228                     _Write_time_:
  4788                           	opt stack 26
  4789                           
  4790                           ;incstack = 0
  4791                           ;Write_time_@s stored from wreg
  4792  007228  6E07               	movwf	Write_time_@s,c
  4793                           
  4794                           ;i2c_1.c: 59: OpenI2C(0b00001000, 0b10000000);
  4795  00722A  0E80               	movlw	128
  4796  00722C  6E01               	movwf	OpenI2C@slew,c
  4797  00722E  0E08               	movlw	8
  4798  007230  ECDA  F036         	call	_OpenI2C
  4799                           
  4800                           ;i2c_1.c: 60: delay_ms(1);
  4801  007234  0E01               	movlw	1
  4802  007236  ECB1  F036         	call	_delay_ms
  4803                           
  4804                           ;i2c_1.c: 61: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  4805  00723A  80C5               	bsf	4037,0,c	;volatile
  4806  00723C                     l326:
  4807  00723C  B0C5               	btfsc	4037,0,c	;volatile
  4808  00723E  D7FE               	goto	l326
  4809                           
  4810                           ;i2c_1.c: 62: ReadBUF();
  4811  007240  EC4D  F036         	call	_ReadBUF	;wreg free
  4812                           
  4813                           ;i2c_1.c: 63: Write_I2C(0xD0);
  4814  007244  0ED0               	movlw	208
  4815  007246  EC5F  F036         	call	_Write_I2C
  4816                           
  4817                           ;i2c_1.c: 64: delay_ms(1);
  4818  00724A  0E01               	movlw	1
  4819  00724C  ECB1  F036         	call	_delay_ms
  4820                           
  4821                           ;i2c_1.c: 65: Write_I2C(0x00);
  4822  007250  0E00               	movlw	0
  4823  007252  EC5F  F036         	call	_Write_I2C
  4824                           
  4825                           ;i2c_1.c: 66: delay_ms(1);
  4826  007256  0E01               	movlw	1
  4827  007258  ECB1  F036         	call	_delay_ms
  4828                           
  4829                           ;i2c_1.c: 67: Write_I2C(s);
  4830  00725C  5007               	movf	Write_time_@s,w,c
  4831  00725E  EC5F  F036         	call	_Write_I2C
  4832                           
  4833                           ;i2c_1.c: 68: delay_ms(1);
  4834  007262  0E01               	movlw	1
  4835  007264  ECB1  F036         	call	_delay_ms
  4836                           
  4837                           ;i2c_1.c: 69: Write_I2C(m);
  4838  007268  5005               	movf	Write_time_@m,w,c
  4839  00726A  EC5F  F036         	call	_Write_I2C
  4840                           
  4841                           ;i2c_1.c: 70: delay_ms(1);
  4842  00726E  0E01               	movlw	1
  4843  007270  ECB1  F036         	call	_delay_ms
  4844                           
  4845                           ;i2c_1.c: 71: Write_I2C(h);
  4846  007274  5006               	movf	Write_time_@h,w,c
  4847  007276  EC5F  F036         	call	_Write_I2C
  4848                           
  4849                           ;i2c_1.c: 72: delay_ms(1);
  4850  00727A  0E01               	movlw	1
  4851  00727C  ECB1  F036         	call	_delay_ms
  4852                           
  4853                           ;i2c_1.c: 73: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  4854  007280  84C5               	bsf	4037,2,c	;volatile
  4855  007282                     l329:
  4856  007282  A4C5               	btfss	4037,2,c	;volatile
  4857  007284  0012               	return	
  4858  007286  D7FD               	goto	l329
  4859  007288                     __end_of_Write_time_:
  4860                           	opt stack 0
  4861                           tblptru	equ	0xFF8
  4862                           tblptrh	equ	0xFF7
  4863                           tblptrl	equ	0xFF6
  4864                           tablat	equ	0xFF5
  4865                           postinc0	equ	0xFEE
  4866                           wreg	equ	0xFE8
  4867                           indf1	equ	0xFE7
  4868                           postinc1	equ	0xFE6
  4869                           postdec1	equ	0xFE5
  4870                           fsr1h	equ	0xFE2
  4871                           fsr1l	equ	0xFE1
  4872                           indf2	equ	0xFDF
  4873                           postinc2	equ	0xFDE
  4874                           fsr2h	equ	0xFDA
  4875                           fsr2l	equ	0xFD9
  4876                           status	equ	0xFD8
  4877                           
  4878 ;; *************** function _OpenI2C *****************
  4879 ;; Defined at:
  4880 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_open.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  sync_mode       1    wreg     unsigned char 
  4883 ;;  slew            1    0[COMRAM] unsigned char 
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;  sync_mode       1    1[COMRAM] unsigned char 
  4886 ;; Return value:  Size  Location     Type
  4887 ;;		None               void
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4895 ;;      Params:         1       0       0       0       0       0       0       0       0
  4896 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4898 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4899 ;;Total ram usage:        2 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_Write_time_
  4905 ;;		_Read_time
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text30
  4910  006DB4                     __ptext30:
  4911                           	opt stack 0
  4912  006DB4                     _OpenI2C:
  4913                           	opt stack 29
  4914                           
  4915                           ;incstack = 0
  4916                           ;OpenI2C@sync_mode stored from wreg
  4917  006DB4  6E02               	movwf	OpenI2C@sync_mode,c
  4918  006DB6  0E3F               	movlw	63
  4919  006DB8  16C7               	andwf	4039,f,c	;volatile
  4920  006DBA  0E00               	movlw	0
  4921  006DBC  6EC6               	movwf	4038,c	;volatile
  4922  006DBE  0E00               	movlw	0
  4923  006DC0  6EC5               	movwf	4037,c	;volatile
  4924  006DC2  5002               	movf	OpenI2C@sync_mode,w,c
  4925  006DC4  12C6               	iorwf	4038,f,c	;volatile
  4926  006DC6  5001               	movf	OpenI2C@slew,w,c
  4927  006DC8  12C7               	iorwf	4039,f,c	;volatile
  4928  006DCA  8293               	bsf	3987,1,c	;volatile
  4929  006DCC  8093               	bsf	3987,0,c	;volatile
  4930  006DCE  8AC6               	bsf	4038,5,c	;volatile
  4931  006DD0  0012               	return	
  4932  006DD2                     __end_of_OpenI2C:
  4933                           	opt stack 0
  4934                           tblptru	equ	0xFF8
  4935                           tblptrh	equ	0xFF7
  4936                           tblptrl	equ	0xFF6
  4937                           tablat	equ	0xFF5
  4938                           postinc0	equ	0xFEE
  4939                           wreg	equ	0xFE8
  4940                           indf1	equ	0xFE7
  4941                           postinc1	equ	0xFE6
  4942                           postdec1	equ	0xFE5
  4943                           fsr1h	equ	0xFE2
  4944                           fsr1l	equ	0xFE1
  4945                           indf2	equ	0xFDF
  4946                           postinc2	equ	0xFDE
  4947                           fsr2h	equ	0xFDA
  4948                           fsr2l	equ	0xFD9
  4949                           status	equ	0xFD8
  4950                           
  4951 ;; *************** function _Write_time *****************
  4952 ;; Defined at:
  4953 ;;		line 79 in file "i2c_1.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  day             1    wreg     unsigned char 
  4956 ;;  date            1    4[COMRAM] unsigned char 
  4957 ;;  month           1    5[COMRAM] unsigned char 
  4958 ;;  year            1    6[COMRAM] unsigned char 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  day             1    7[COMRAM] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;		None               void
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4970 ;;      Params:         3       0       0       0       0       0       0       0       0
  4971 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4973 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4974 ;;Total ram usage:        4 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    3
  4977 ;; This function calls:
  4978 ;;		_CloseI2C
  4979 ;;		_ReadBUF
  4980 ;;		_Write_I2C
  4981 ;;		_delay_ms
  4982 ;; This function is called by:
  4983 ;;		_Get_data
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text31
  4988  0072EC                     __ptext31:
  4989                           	opt stack 0
  4990  0072EC                     _Write_time:
  4991                           	opt stack 26
  4992                           
  4993                           ;incstack = 0
  4994                           ;Write_time@day stored from wreg
  4995  0072EC  6E08               	movwf	Write_time@day,c
  4996                           
  4997                           ;i2c_1.c: 81: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  4998  0072EE  80C5               	bsf	4037,0,c	;volatile
  4999  0072F0                     l335:
  5000  0072F0  B0C5               	btfsc	4037,0,c	;volatile
  5001  0072F2  D7FE               	goto	l335
  5002                           
  5003                           ;i2c_1.c: 82: ReadBUF();
  5004  0072F4  EC4D  F036         	call	_ReadBUF	;wreg free
  5005                           
  5006                           ;i2c_1.c: 83: Write_I2C(0xD0);
  5007  0072F8  0ED0               	movlw	208
  5008  0072FA  EC5F  F036         	call	_Write_I2C
  5009                           
  5010                           ;i2c_1.c: 84: delay_ms(1);
  5011  0072FE  0E01               	movlw	1
  5012  007300  ECB1  F036         	call	_delay_ms
  5013                           
  5014                           ;i2c_1.c: 85: Write_I2C(0x03);
  5015  007304  0E03               	movlw	3
  5016  007306  EC5F  F036         	call	_Write_I2C
  5017                           
  5018                           ;i2c_1.c: 86: delay_ms(1);
  5019  00730A  0E01               	movlw	1
  5020  00730C  ECB1  F036         	call	_delay_ms
  5021                           
  5022                           ;i2c_1.c: 87: Write_I2C(day);
  5023  007310  5008               	movf	Write_time@day,w,c
  5024  007312  EC5F  F036         	call	_Write_I2C
  5025                           
  5026                           ;i2c_1.c: 88: delay_ms(1);
  5027  007316  0E01               	movlw	1
  5028  007318  ECB1  F036         	call	_delay_ms
  5029                           
  5030                           ;i2c_1.c: 89: Write_I2C(date);
  5031  00731C  5005               	movf	Write_time@date,w,c
  5032  00731E  EC5F  F036         	call	_Write_I2C
  5033                           
  5034                           ;i2c_1.c: 90: delay_ms(1);
  5035  007322  0E01               	movlw	1
  5036  007324  ECB1  F036         	call	_delay_ms
  5037                           
  5038                           ;i2c_1.c: 91: Write_I2C(month);
  5039  007328  5006               	movf	Write_time@month,w,c
  5040  00732A  EC5F  F036         	call	_Write_I2C
  5041                           
  5042                           ;i2c_1.c: 92: delay_ms(1);
  5043  00732E  0E01               	movlw	1
  5044  007330  ECB1  F036         	call	_delay_ms
  5045                           
  5046                           ;i2c_1.c: 93: Write_I2C(year);
  5047  007334  5007               	movf	Write_time@year,w,c
  5048  007336  EC5F  F036         	call	_Write_I2C
  5049                           
  5050                           ;i2c_1.c: 94: delay_ms(1);
  5051  00733A  0E01               	movlw	1
  5052  00733C  ECB1  F036         	call	_delay_ms
  5053                           
  5054                           ;i2c_1.c: 95: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  5055  007340  84C5               	bsf	4037,2,c	;volatile
  5056  007342                     l338:
  5057  007342  B4C5               	btfsc	4037,2,c	;volatile
  5058  007344  D7FE               	goto	l338
  5059                           
  5060                           ;i2c_1.c: 96: CloseI2C();
  5061  007346  EC47  F036         	call	_CloseI2C	;wreg free
  5062                           
  5063                           ;i2c_1.c: 97: delay_ms(100);
  5064  00734A  0E64               	movlw	100
  5065  00734C  ECB1  F036         	call	_delay_ms
  5066  007350  0012               	return	
  5067  007352                     __end_of_Write_time:
  5068                           	opt stack 0
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           postinc0	equ	0xFEE
  5074                           wreg	equ	0xFE8
  5075                           indf1	equ	0xFE7
  5076                           postinc1	equ	0xFE6
  5077                           postdec1	equ	0xFE5
  5078                           fsr1h	equ	0xFE2
  5079                           fsr1l	equ	0xFE1
  5080                           indf2	equ	0xFDF
  5081                           postinc2	equ	0xFDE
  5082                           fsr2h	equ	0xFDA
  5083                           fsr2l	equ	0xFD9
  5084                           status	equ	0xFD8
  5085                           
  5086 ;; *************** function _delay_ms *****************
  5087 ;; Defined at:
  5088 ;;		line 17 in file "delay.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  t               1    wreg     unsigned char 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  t               1    1[COMRAM] unsigned char 
  5093 ;;  i               1    2[COMRAM] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;		None               void
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0
  5104 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5106 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5107 ;;Total ram usage:        2 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    1
  5110 ;; This function calls:
  5111 ;;		_Delay1KTCYx
  5112 ;; This function is called by:
  5113 ;;		_main
  5114 ;;		_Read
  5115 ;;		_Write_time_
  5116 ;;		_Write_time
  5117 ;;		_Read_time
  5118 ;;		_Delay_s
  5119 ;;		_Read_From_Addr
  5120 ;;		_Write_to_Addr
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text32
  5125  006D62                     __ptext32:
  5126                           	opt stack 0
  5127  006D62                     _delay_ms:
  5128                           	opt stack 29
  5129                           
  5130                           ;incstack = 0
  5131                           ;delay_ms@t stored from wreg
  5132  006D62  6E02               	movwf	delay_ms@t,c
  5133                           
  5134                           ;delay.c: 19: unsigned char i;
  5135                           ;delay.c: 20: for (i=0;i<=t;i++)
  5136  006D64  0E00               	movlw	0
  5137  006D66  6E03               	movwf	delay_ms@i,c
  5138  006D68  D004               	goto	l2301
  5139  006D6A                     l2297:
  5140                           
  5141                           ;delay.c: 21: Delay1KTCYx(5);
  5142  006D6A  0E05               	movlw	5
  5143  006D6C  EC6E  F036         	call	_Delay1KTCYx
  5144  006D70  2A03               	incf	delay_ms@i,f,c
  5145  006D72                     l2301:
  5146  006D72  5003               	movf	delay_ms@i,w,c
  5147  006D74  5C02               	subwf	delay_ms@t,w,c
  5148  006D76  A0D8               	btfss	status,0,c
  5149                           
  5150                           ;delay.c: 25: return;
  5151  006D78  0012               	return	
  5152  006D7A  D7F7               	goto	l2297
  5153  006D7C                     __end_of_delay_ms:
  5154                           	opt stack 0
  5155                           tblptru	equ	0xFF8
  5156                           tblptrh	equ	0xFF7
  5157                           tblptrl	equ	0xFF6
  5158                           tablat	equ	0xFF5
  5159                           postinc0	equ	0xFEE
  5160                           wreg	equ	0xFE8
  5161                           indf1	equ	0xFE7
  5162                           postinc1	equ	0xFE6
  5163                           postdec1	equ	0xFE5
  5164                           fsr1h	equ	0xFE2
  5165                           fsr1l	equ	0xFE1
  5166                           indf2	equ	0xFDF
  5167                           postinc2	equ	0xFDE
  5168                           fsr2h	equ	0xFDA
  5169                           fsr2l	equ	0xFD9
  5170                           status	equ	0xFD8
  5171                           
  5172 ;; *************** function _Delay1KTCYx *****************
  5173 ;; Defined at:
  5174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  unit            1    wreg     unsigned char 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  unit            1    0[COMRAM] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;		None               void
  5181 ;; Registers used:
  5182 ;;		wreg
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0
  5189 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5191 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5192 ;;Total ram usage:        1 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_delay_ms
  5198 ;;		_delay_us
  5199 ;;		_DelayPORXLCD
  5200 ;;		_DelayXLCD
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text33
  5205  006CDC                     __ptext33:
  5206                           	opt stack 0
  5207  006CDC                     _Delay1KTCYx:
  5208                           	opt stack 29
  5209                           
  5210                           ;incstack = 0
  5211                           ;Delay1KTCYx@unit stored from wreg
  5212  006CDC  6E01               	movwf	Delay1KTCYx@unit,c
  5213  006CDE                     l862:
  5214  006CDE  0EFA               	movlw	250
  5215  006CE0                     u2877:
  5216  006CE0  F000               	nop	
  5217  006CE2  2EE8               	decfsz	wreg,f,c
  5218  006CE4  D7FD               	goto	u2877
  5219  006CE6  2E01               	decfsz	Delay1KTCYx@unit,f,c
  5220  006CE8  D7FA               	goto	l862
  5221  006CEA  0012               	return	
  5222  006CEC                     __end_of_Delay1KTCYx:
  5223                           	opt stack 0
  5224                           tblptru	equ	0xFF8
  5225                           tblptrh	equ	0xFF7
  5226                           tblptrl	equ	0xFF6
  5227                           tablat	equ	0xFF5
  5228                           postinc0	equ	0xFEE
  5229                           wreg	equ	0xFE8
  5230                           indf1	equ	0xFE7
  5231                           postinc1	equ	0xFE6
  5232                           postdec1	equ	0xFE5
  5233                           fsr1h	equ	0xFE2
  5234                           fsr1l	equ	0xFE1
  5235                           indf2	equ	0xFDF
  5236                           postinc2	equ	0xFDE
  5237                           fsr2h	equ	0xFDA
  5238                           fsr2l	equ	0xFD9
  5239                           status	equ	0xFD8
  5240                           
  5241 ;; *************** function _Write_I2C *****************
  5242 ;; Defined at:
  5243 ;;		line 38 in file "i2c_1.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  c               1    wreg     unsigned char 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  c               1    3[COMRAM] unsigned char 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;		None               void
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5257 ;;      Params:         0       0       0       0       0       0       0       0       0
  5258 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5260 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5261 ;;Total ram usage:        1 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    2
  5264 ;; This function calls:
  5265 ;;		_ReadBUF
  5266 ;;		_WriteI2C
  5267 ;; This function is called by:
  5268 ;;		_Read
  5269 ;;		_Write_time_
  5270 ;;		_Write_time
  5271 ;;		_Read_time
  5272 ;;		_Read_From_Addr
  5273 ;;		_Write_to_Addr
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text34
  5278  006CBE                     __ptext34:
  5279                           	opt stack 0
  5280  006CBE                     _Write_I2C:
  5281                           	opt stack 27
  5282                           
  5283                           ;incstack = 0
  5284                           ;Write_I2C@c stored from wreg
  5285  006CBE  6E04               	movwf	Write_I2C@c,c
  5286                           
  5287                           ;i2c_1.c: 40: WriteI2C(c);
  5288  006CC0  5004               	movf	Write_I2C@c,w,c
  5289  006CC2  EC44  F039         	call	_WriteI2C
  5290                           
  5291                           ;i2c_1.c: 41: ReadBUF();
  5292  006CC6  EC4D  F036         	call	_ReadBUF	;wreg free
  5293  006CCA  0012               	return	
  5294  006CCC                     __end_of_Write_I2C:
  5295                           	opt stack 0
  5296                           tblptru	equ	0xFF8
  5297                           tblptrh	equ	0xFF7
  5298                           tblptrl	equ	0xFF6
  5299                           tablat	equ	0xFF5
  5300                           postinc0	equ	0xFEE
  5301                           wreg	equ	0xFE8
  5302                           indf1	equ	0xFE7
  5303                           postinc1	equ	0xFE6
  5304                           postdec1	equ	0xFE5
  5305                           fsr1h	equ	0xFE2
  5306                           fsr1l	equ	0xFE1
  5307                           indf2	equ	0xFDF
  5308                           postinc2	equ	0xFDE
  5309                           fsr2h	equ	0xFDA
  5310                           fsr2l	equ	0xFD9
  5311                           status	equ	0xFD8
  5312                           
  5313 ;; *************** function _WriteI2C *****************
  5314 ;; Defined at:
  5315 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_writ.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  data_out        1    wreg     unsigned char 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  data_out        1    2[COMRAM] unsigned char 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      char 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5329 ;;      Params:         0       0       0       0       0       0       0       0       0
  5330 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5331 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5332 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5333 ;;Total ram usage:        2 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    1
  5336 ;; This function calls:
  5337 ;;		_IdleI2C
  5338 ;; This function is called by:
  5339 ;;		_Write_I2C
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text35
  5344  007288                     __ptext35:
  5345                           	opt stack 0
  5346  007288                     _WriteI2C:
  5347                           	opt stack 27
  5348                           
  5349                           ;incstack = 0
  5350                           ;WriteI2C@data_out stored from wreg
  5351  007288  6E03               	movwf	WriteI2C@data_out,c
  5352  00728A  C003  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  5353  00728E  BEC6               	btfsc	4038,7,c	;volatile
  5354  007290  D02C               	goto	l606
  5355                           
  5356                           ;	Return value of _WriteI2C is never used
  5357  007292  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5358  007296  0E0F               	movlw	15
  5359  007298  1602               	andwf	??_WriteI2C,f,c
  5360  00729A  5002               	movf	??_WriteI2C,w,c
  5361  00729C  0A08               	xorlw	8
  5362  00729E  B4D8               	btfsc	status,2,c
  5363  0072A0  D00F               	goto	l2275
  5364  0072A2  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5365  0072A6  0E0F               	movlw	15
  5366  0072A8  1602               	andwf	??_WriteI2C,f,c
  5367  0072AA  5002               	movf	??_WriteI2C,w,c
  5368  0072AC  0A0B               	xorlw	11
  5369  0072AE  B4D8               	btfsc	status,2,c
  5370  0072B0  D007               	goto	l2275
  5371  0072B2  88C6               	bsf	4038,4,c	;volatile
  5372  0072B4                     l609:
  5373  0072B4  A69E               	btfss	3998,3,c	;volatile
  5374  0072B6  D7FE               	goto	l609
  5375  0072B8  B4C7               	btfsc	4039,2,c	;volatile
  5376  0072BA  D017               	goto	l606
  5377  0072BC  50C7               	movf	4039,w,c	;volatile
  5378  0072BE  D015               	goto	l606
  5379  0072C0                     l2275:
  5380  0072C0  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5381  0072C4  0E0F               	movlw	15
  5382  0072C6  1602               	andwf	??_WriteI2C,f,c
  5383  0072C8  5002               	movf	??_WriteI2C,w,c
  5384  0072CA  0A08               	xorlw	8
  5385  0072CC  B4D8               	btfsc	status,2,c
  5386  0072CE  D008               	goto	l618
  5387  0072D0  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5388  0072D4  0E0F               	movlw	15
  5389  0072D6  1602               	andwf	??_WriteI2C,f,c
  5390  0072D8  5002               	movf	??_WriteI2C,w,c
  5391  0072DA  0A0B               	xorlw	11
  5392  0072DC  A4D8               	btfss	status,2,c
  5393  0072DE  D005               	goto	l606
  5394  0072E0                     l618:
  5395  0072E0  B0C7               	btfsc	4039,0,c	;volatile
  5396  0072E2  D7FE               	goto	l618
  5397  0072E4  EC66  F036         	call	_IdleI2C	;wreg free
  5398  0072E8  50C5               	movf	4037,w,c	;volatile
  5399  0072EA                     l606:
  5400  0072EA  0012               	return	
  5401  0072EC                     __end_of_WriteI2C:
  5402                           	opt stack 0
  5403                           tblptru	equ	0xFF8
  5404                           tblptrh	equ	0xFF7
  5405                           tblptrl	equ	0xFF6
  5406                           tablat	equ	0xFF5
  5407                           postinc0	equ	0xFEE
  5408                           wreg	equ	0xFE8
  5409                           indf1	equ	0xFE7
  5410                           postinc1	equ	0xFE6
  5411                           postdec1	equ	0xFE5
  5412                           fsr1h	equ	0xFE2
  5413                           fsr1l	equ	0xFE1
  5414                           indf2	equ	0xFDF
  5415                           postinc2	equ	0xFDE
  5416                           fsr2h	equ	0xFDA
  5417                           fsr2l	equ	0xFD9
  5418                           status	equ	0xFD8
  5419                           
  5420 ;; *************** function _IdleI2C *****************
  5421 ;; Defined at:
  5422 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_idle.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;		None               void
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5436 ;;      Params:         0       0       0       0       0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5438 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5439 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5440 ;;Total ram usage:        1 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_Read_time
  5446 ;;		_WriteI2C
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text36
  5451  006CCC                     __ptext36:
  5452                           	opt stack 0
  5453  006CCC                     _IdleI2C:
  5454                           	opt stack 27
  5455  006CCC                     l2245:
  5456  006CCC  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  5457  006CD0  0E1F               	movlw	31
  5458  006CD2  1601               	andwf	??_IdleI2C,f,c
  5459  006CD4  B4D8               	btfsc	status,2,c
  5460  006CD6  B4C7               	btfsc	4039,2,c	;volatile
  5461  006CD8  D7F9               	goto	l2245
  5462  006CDA  0012               	return	
  5463  006CDC                     __end_of_IdleI2C:
  5464                           	opt stack 0
  5465                           tblptru	equ	0xFF8
  5466                           tblptrh	equ	0xFF7
  5467                           tblptrl	equ	0xFF6
  5468                           tablat	equ	0xFF5
  5469                           postinc0	equ	0xFEE
  5470                           wreg	equ	0xFE8
  5471                           indf1	equ	0xFE7
  5472                           postinc1	equ	0xFE6
  5473                           postdec1	equ	0xFE5
  5474                           fsr1h	equ	0xFE2
  5475                           fsr1l	equ	0xFE1
  5476                           indf2	equ	0xFDF
  5477                           postinc2	equ	0xFDE
  5478                           fsr2h	equ	0xFDA
  5479                           fsr2l	equ	0xFD9
  5480                           status	equ	0xFD8
  5481                           
  5482 ;; *************** function _ReadBUF *****************
  5483 ;; Defined at:
  5484 ;;		line 28 in file "i2c_1.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;		None
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  c               1    0[COMRAM] unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;		None               void
  5491 ;; Registers used:
  5492 ;;		None
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5498 ;;      Params:         0       0       0       0       0       0       0       0       0
  5499 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5501 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5502 ;;Total ram usage:        1 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; This function calls:
  5505 ;;		Nothing
  5506 ;; This function is called by:
  5507 ;;		_Write_I2C
  5508 ;;		_Read
  5509 ;;		_Write_time_
  5510 ;;		_Write_time
  5511 ;;		_Read_From_Addr
  5512 ;;		_Write_to_Addr
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text37
  5517  006C9A                     __ptext37:
  5518                           	opt stack 0
  5519  006C9A                     _ReadBUF:
  5520                           	opt stack 28
  5521                           
  5522                           ;i2c_1.c: 30: unsigned char c;
  5523                           ;i2c_1.c: 31: c = SSPBUF;
  5524                           
  5525                           ;incstack = 0
  5526  006C9A  CFC9 F001          	movff	4041,ReadBUF@c	;volatile
  5527                           
  5528                           ;i2c_1.c: 32: c = SSPBUF;
  5529  006C9E  CFC9 F001          	movff	4041,ReadBUF@c	;volatile
  5530  006CA2  0012               	return	
  5531  006CA4                     __end_of_ReadBUF:
  5532                           	opt stack 0
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           postinc0	equ	0xFEE
  5538                           wreg	equ	0xFE8
  5539                           indf1	equ	0xFE7
  5540                           postinc1	equ	0xFE6
  5541                           postdec1	equ	0xFE5
  5542                           fsr1h	equ	0xFE2
  5543                           fsr1l	equ	0xFE1
  5544                           indf2	equ	0xFDF
  5545                           postinc2	equ	0xFDE
  5546                           fsr2h	equ	0xFDA
  5547                           fsr2l	equ	0xFD9
  5548                           status	equ	0xFD8
  5549                           
  5550 ;; *************** function _CloseI2C *****************
  5551 ;; Defined at:
  5552 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c_clos.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;		None               void
  5559 ;; Registers used:
  5560 ;;		status,2, status,0
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5569 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; This function calls:
  5573 ;;		Nothing
  5574 ;; This function is called by:
  5575 ;;		_Write_time
  5576 ;;		_Read_time
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text38
  5581  006C8E                     __ptext38:
  5582                           	opt stack 0
  5583  006C8E                     _CloseI2C:
  5584                           	opt stack 29
  5585                           
  5586                           ;incstack = 0
  5587  006C8E  9AC6               	bcf	4038,5,c	;volatile
  5588  006C90  0012               	return	
  5589  006C92                     __end_of_CloseI2C:
  5590                           	opt stack 0
  5591                           tblptru	equ	0xFF8
  5592                           tblptrh	equ	0xFF7
  5593                           tblptrl	equ	0xFF6
  5594                           tablat	equ	0xFF5
  5595                           postinc0	equ	0xFEE
  5596                           wreg	equ	0xFE8
  5597                           indf1	equ	0xFE7
  5598                           postinc1	equ	0xFE6
  5599                           postdec1	equ	0xFE5
  5600                           fsr1h	equ	0xFE2
  5601                           fsr1l	equ	0xFE1
  5602                           indf2	equ	0xFDF
  5603                           postinc2	equ	0xFDE
  5604                           fsr2h	equ	0xFDA
  5605                           fsr2l	equ	0xFD9
  5606                           status	equ	0xFD8
  5607                           
  5608 ;; *************** function _Set_time *****************
  5609 ;; Defined at:
  5610 ;;		line 69 in file "time.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  sec             2    7[COMRAM] PTR unsigned char 
  5613 ;;		 -> Get_data@s(1), 
  5614 ;;  min             2    9[COMRAM] PTR unsigned char 
  5615 ;;		 -> Get_data@m(1), 
  5616 ;;  hour            2   11[COMRAM] PTR unsigned char 
  5617 ;;		 -> Get_data@h(1), 
  5618 ;;  mode            1   13[COMRAM] unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  str3           37   14[COMRAM] unsigned char [37]
  5621 ;;  error          18   51[COMRAM] unsigned char [18]
  5622 ;;  h               1   74[COMRAM] unsigned char 
  5623 ;;  z               1   73[COMRAM] unsigned char 
  5624 ;;  y               1   72[COMRAM] unsigned char 
  5625 ;;  x               1   71[COMRAM] unsigned char 
  5626 ;;  m               1   70[COMRAM] unsigned char 
  5627 ;;  s               1   69[COMRAM] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;		None               void
  5630 ;; Registers used:
  5631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5637 ;;      Params:         7       0       0       0       0       0       0       0       0
  5638 ;;      Locals:        61       0       0       0       0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5640 ;;      Totals:        68       0       0       0       0       0       0       0       0
  5641 ;;Total ram usage:       68 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    3
  5644 ;; This function calls:
  5645 ;;		_BCD_format
  5646 ;;		_BCD_to_DEC
  5647 ;;		_Read_string
  5648 ;;		_Write_str
  5649 ;; This function is called by:
  5650 ;;		_Get_data
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text39
  5655  007BEC                     __ptext39:
  5656                           	opt stack 0
  5657  007BEC                     _Set_time:
  5658                           	opt stack 26
  5659                           
  5660                           ;time.c: 71: unsigned char s, m, h, x, y, z;
  5661                           ;time.c: 72: unsigned char str3[37] = "\nEnter the time in the format HHMMSS";
  5662                           
  5663                           ;incstack = 0
  5664  007BEC  EE22  F043         	lfsr	2,Set_time@F198
  5665  007BF0  EE10  F00F         	lfsr	1,Set_time@str3
  5666  007BF4  0E25               	movlw	37
  5667  007BF6                     u1761:
  5668  007BF6  CFDE FFE6          	movff	postinc2,postinc1
  5669  007BFA  2EE8               	decfsz	wreg,f,c
  5670  007BFC  D7FC               	goto	u1761
  5671                           
  5672                           ;time.c: 73: unsigned char error[] = "\nInvalid Entry..!";
  5673  007BFE  EE21  F0A7         	lfsr	2,Set_time@F200
  5674  007C02  EE10  F034         	lfsr	1,Set_time@error
  5675  007C06  0E12               	movlw	18
  5676  007C08                     u1771:
  5677  007C08  CFDE FFE6          	movff	postinc2,postinc1
  5678  007C0C  2EE8               	decfsz	wreg,f,c
  5679  007C0E  D7FC               	goto	u1771
  5680  007C10                     l2515:
  5681                           
  5682                           ;time.c: 75: {
  5683                           ;time.c: 76: Write_str(str3);
  5684  007C10  0E00               	movlw	high Set_time@str3
  5685  007C12  6E04               	movwf	Write_str@c+1,c
  5686  007C14  0E0F               	movlw	low Set_time@str3
  5687  007C16  6E03               	movwf	Write_str@c,c
  5688  007C18  EC75  F037         	call	_Write_str	;wreg free
  5689                           
  5690                           ;time.c: 77: Read_string(str, 6);
  5691  007C1C  0100               	movlb	0	; () banked
  5692  007C1E  0E00               	movlw	high _str
  5693  007C20  6E04               	movwf	Read_string@buffer+1,c
  5694  007C22  0100               	movlb	0	; () banked
  5695  007C24  0EF0               	movlw	low _str
  5696  007C26  6E03               	movwf	Read_string@buffer,c
  5697  007C28  0E06               	movlw	6
  5698  007C2A  6E05               	movwf	Read_string@len,c
  5699  007C2C  EC8C  F037         	call	_Read_string	;wreg free
  5700                           
  5701                           ;time.c: 78: h = BCD_format(str);
  5702  007C30  0100               	movlb	0	; () banked
  5703  007C32  0E00               	movlw	high _str
  5704  007C34  6E02               	movwf	BCD_format@str+1,c
  5705  007C36  0100               	movlb	0	; () banked
  5706  007C38  0EF0               	movlw	low _str
  5707  007C3A  6E01               	movwf	BCD_format@str,c
  5708  007C3C  EC4E  F037         	call	_BCD_format	;wreg free
  5709  007C40  6E4B               	movwf	Set_time@h,c
  5710                           
  5711                           ;time.c: 79: m = BCD_format(str+2);
  5712  007C42  0100               	movlb	0	; () banked
  5713  007C44  0E00               	movlw	high (_str+2)
  5714  007C46  6E02               	movwf	BCD_format@str+1,c
  5715  007C48  0100               	movlb	0	; () banked
  5716  007C4A  0EF2               	movlw	low (_str+2)
  5717  007C4C  6E01               	movwf	BCD_format@str,c
  5718  007C4E  EC4E  F037         	call	_BCD_format	;wreg free
  5719  007C52  6E47               	movwf	Set_time@m,c
  5720                           
  5721                           ;time.c: 80: s = BCD_format(str+4);
  5722  007C54  0100               	movlb	0	; () banked
  5723  007C56  0E00               	movlw	high (_str+4)
  5724  007C58  6E02               	movwf	BCD_format@str+1,c
  5725  007C5A  0100               	movlb	0	; () banked
  5726  007C5C  0EF4               	movlw	low (_str+4)
  5727  007C5E  6E01               	movwf	BCD_format@str,c
  5728  007C60  EC4E  F037         	call	_BCD_format	;wreg free
  5729  007C64  6E46               	movwf	Set_time@s,c
  5730                           
  5731                           ;time.c: 81: x = BCD_to_DEC(s);
  5732  007C66  5046               	movf	Set_time@s,w,c
  5733  007C68  ECA5  F036         	call	_BCD_to_DEC
  5734  007C6C  6E48               	movwf	Set_time@x,c
  5735                           
  5736                           ;time.c: 82: y = BCD_to_DEC(m);
  5737  007C6E  5047               	movf	Set_time@m,w,c
  5738  007C70  ECA5  F036         	call	_BCD_to_DEC
  5739  007C74  6E49               	movwf	Set_time@y,c
  5740                           
  5741                           ;time.c: 83: z = BCD_to_DEC(h);
  5742  007C76  504B               	movf	Set_time@h,w,c
  5743  007C78  ECA5  F036         	call	_BCD_to_DEC
  5744  007C7C  6E4A               	movwf	Set_time@z,c
  5745                           
  5746                           ;time.c: 84: if((mode==0)||(mode==1))
  5747  007C7E  500E               	movf	Set_time@mode,w,c
  5748  007C80  B4D8               	btfsc	status,2,c
  5749  007C82  D003               	goto	l2535
  5750  007C84  040E               	decf	Set_time@mode,w,c
  5751  007C86  A4D8               	btfss	status,2,c
  5752  007C88  D02B               	goto	l2555
  5753  007C8A                     l2535:
  5754                           
  5755                           ;time.c: 85: {
  5756                           ;time.c: 86: if(((x>=0&&x<=59) && (y>=0&&y<=59) && (z>=1&&z<=12) ))
  5757  007C8A  0E3C               	movlw	60
  5758  007C8C  5C48               	subwf	Set_time@x,w,c
  5759  007C8E  B0D8               	btfsc	status,0,c
  5760  007C90  D020               	goto	l2553
  5761  007C92  0E3C               	movlw	60
  5762  007C94  5C49               	subwf	Set_time@y,w,c
  5763  007C96  B0D8               	btfsc	status,0,c
  5764  007C98  D01C               	goto	l2553
  5765  007C9A  504A               	movf	Set_time@z,w,c
  5766  007C9C  B4D8               	btfsc	status,2,c
  5767  007C9E  D019               	goto	l2553
  5768  007CA0  0E0D               	movlw	13
  5769  007CA2  5C4A               	subwf	Set_time@z,w,c
  5770  007CA4  B0D8               	btfsc	status,0,c
  5771  007CA6  D015               	goto	l2553
  5772                           
  5773                           ;time.c: 87: {
  5774                           ;time.c: 88: s = s&0x7F;
  5775  007CA8  5046               	movf	Set_time@s,w,c
  5776  007CAA  0B7F               	andlw	127
  5777  007CAC  6E46               	movwf	Set_time@s,c
  5778                           
  5779                           ;time.c: 89: m = m&0x7F;
  5780  007CAE  5047               	movf	Set_time@m,w,c
  5781  007CB0  0B7F               	andlw	127
  5782  007CB2  6E47               	movwf	Set_time@m,c
  5783                           
  5784                           ;time.c: 90: h = h&0x1F;
  5785  007CB4  504B               	movf	Set_time@h,w,c
  5786  007CB6  0B1F               	andlw	31
  5787  007CB8  6E4B               	movwf	Set_time@h,c
  5788                           
  5789                           ;time.c: 91: if(mode==0)
  5790  007CBA  660E               	tstfsz	Set_time@mode,c
  5791  007CBC  D003               	goto	l2549
  5792                           
  5793                           ;time.c: 92: h = h|0x40;
  5794  007CBE  504B               	movf	Set_time@h,w,c
  5795  007CC0  0940               	iorlw	64
  5796  007CC2  D005               	goto	L5
  5797  007CC4                     l2549:
  5798                           
  5799                           ;time.c: 93: else if(mode == 1)
  5800  007CC4  040E               	decf	Set_time@mode,w,c
  5801  007CC6  A4D8               	btfss	status,2,c
  5802  007CC8  D01B               	goto	u1890
  5803                           
  5804                           ;time.c: 94: h = h|0x60;
  5805  007CCA  504B               	movf	Set_time@h,w,c
  5806  007CCC  0960               	iorlw	96
  5807  007CCE                     L5:
  5808  007CCE  6E4B               	movwf	Set_time@h,c
  5809  007CD0  D017               	goto	u1890
  5810  007CD2                     l2553:
  5811                           
  5812                           ;time.c: 97: else
  5813                           ;time.c: 98: Write_str(error);
  5814  007CD2  0E00               	movlw	high Set_time@error
  5815  007CD4  6E04               	movwf	Write_str@c+1,c
  5816  007CD6  0E34               	movlw	low Set_time@error
  5817  007CD8  6E03               	movwf	Write_str@c,c
  5818  007CDA  EC75  F037         	call	_Write_str	;wreg free
  5819  007CDE  D01A               	goto	l2567
  5820  007CE0                     l2555:
  5821                           
  5822                           ;time.c: 100: else if(((x>=0&&x<=59) && (y>=0&&y<=59) && (z>=0&&z<=24) ) && (mode==2))
  5823  007CE0  0E3C               	movlw	60
  5824  007CE2  5C48               	subwf	Set_time@x,w,c
  5825  007CE4  B0D8               	btfsc	status,0,c
  5826  007CE6  D010               	goto	l2565
  5827  007CE8  0E3C               	movlw	60
  5828  007CEA  5C49               	subwf	Set_time@y,w,c
  5829  007CEC  B0D8               	btfsc	status,0,c
  5830  007CEE  D00C               	goto	l2565
  5831  007CF0  0E19               	movlw	25
  5832  007CF2  5C4A               	subwf	Set_time@z,w,c
  5833  007CF4  B0D8               	btfsc	status,0,c
  5834  007CF6  D008               	goto	l2565
  5835                           
  5836                           ;time.c: 101: {
  5837                           ;time.c: 102: h = h|0x00;
  5838  007CF8  500E               	movf	Set_time@mode,w,c
  5839  007CFA  0A02               	xorlw	2
  5840  007CFC  A4D8               	btfss	status,2,c
  5841  007CFE  D004               	goto	l2565
  5842  007D00                     u1890:
  5843                           
  5844                           ;time.c: 103: h = h&0x7F;
  5845  007D00  504B               	movf	Set_time@h,w,c
  5846  007D02  0B7F               	andlw	127
  5847  007D04  6E4B               	movwf	Set_time@h,c
  5848                           
  5849                           ;time.c: 104: }
  5850  007D06  D006               	goto	l2567
  5851  007D08                     l2565:
  5852                           
  5853                           ;time.c: 105: else
  5854                           ;time.c: 106: Write_str(error);
  5855  007D08  0E00               	movlw	high Set_time@error
  5856  007D0A  6E04               	movwf	Write_str@c+1,c
  5857  007D0C  0E34               	movlw	low Set_time@error
  5858  007D0E  6E03               	movwf	Write_str@c,c
  5859  007D10  EC75  F037         	call	_Write_str	;wreg free
  5860  007D14                     l2567:
  5861                           
  5862                           ;time.c: 107: }while(!(((x>=0&&x<=59) && (y>=0&&y<=59) && (z>=1&&z<=12)) || ((x>=0&&x<=5
      +                          9) && (y>=0&&y<=59) && (z>=0&&z<=24) && (mode==2)) ));
  5863  007D14  0E3C               	movlw	60
  5864  007D16  5C48               	subwf	Set_time@x,w,c
  5865  007D18  B0D8               	btfsc	status,0,c
  5866  007D1A  D00A               	goto	l2575
  5867  007D1C  0E3C               	movlw	60
  5868  007D1E  5C49               	subwf	Set_time@y,w,c
  5869  007D20  B0D8               	btfsc	status,0,c
  5870  007D22  D006               	goto	l2575
  5871  007D24  504A               	movf	Set_time@z,w,c
  5872  007D26  B4D8               	btfsc	status,2,c
  5873  007D28  D003               	goto	l2575
  5874  007D2A  0E0C               	movlw	12
  5875  007D2C  644A               	cpfsgt	Set_time@z,c
  5876  007D2E  D010               	goto	l2583
  5877  007D30                     l2575:
  5878  007D30  0E3C               	movlw	60
  5879  007D32  5C48               	subwf	Set_time@x,w,c
  5880  007D34  B0D8               	btfsc	status,0,c
  5881  007D36  D76C               	goto	l2515
  5882  007D38  0E3C               	movlw	60
  5883  007D3A  5C49               	subwf	Set_time@y,w,c
  5884  007D3C  B0D8               	btfsc	status,0,c
  5885  007D3E  D768               	goto	l2515
  5886  007D40  0E19               	movlw	25
  5887  007D42  5C4A               	subwf	Set_time@z,w,c
  5888  007D44  B0D8               	btfsc	status,0,c
  5889  007D46  D764               	goto	l2515
  5890  007D48  500E               	movf	Set_time@mode,w,c
  5891  007D4A  0A02               	xorlw	2
  5892  007D4C  A4D8               	btfss	status,2,c
  5893  007D4E  D760               	goto	l2515
  5894  007D50                     l2583:
  5895                           
  5896                           ;time.c: 109: *sec = s;
  5897  007D50  C008  FFD9         	movff	Set_time@sec,fsr2l
  5898  007D54  C009  FFDA         	movff	Set_time@sec+1,fsr2h
  5899  007D58  C046  FFDF         	movff	Set_time@s,indf2
  5900                           
  5901                           ;time.c: 110: *min = m;
  5902  007D5C  C00A  FFD9         	movff	Set_time@min,fsr2l
  5903  007D60  C00B  FFDA         	movff	Set_time@min+1,fsr2h
  5904  007D64  C047  FFDF         	movff	Set_time@m,indf2
  5905                           
  5906                           ;time.c: 111: *hour = h;
  5907  007D68  C00C  FFD9         	movff	Set_time@hour,fsr2l
  5908  007D6C  C00D  FFDA         	movff	Set_time@hour+1,fsr2h
  5909  007D70  C04B  FFDF         	movff	Set_time@h,indf2
  5910  007D74  0012               	return	
  5911  007D76                     __end_of_Set_time:
  5912                           	opt stack 0
  5913                           tblptru	equ	0xFF8
  5914                           tblptrh	equ	0xFF7
  5915                           tblptrl	equ	0xFF6
  5916                           tablat	equ	0xFF5
  5917                           postinc0	equ	0xFEE
  5918                           wreg	equ	0xFE8
  5919                           indf1	equ	0xFE7
  5920                           postinc1	equ	0xFE6
  5921                           postdec1	equ	0xFE5
  5922                           fsr1h	equ	0xFE2
  5923                           fsr1l	equ	0xFE1
  5924                           indf2	equ	0xFDF
  5925                           postinc2	equ	0xFDE
  5926                           fsr2h	equ	0xFDA
  5927                           fsr2l	equ	0xFD9
  5928                           status	equ	0xFD8
  5929                           
  5930 ;; *************** function _Set_day *****************
  5931 ;; Defined at:
  5932 ;;		line 115 in file "time.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  str5           67    7[COMRAM] unsigned char [67]
  5937 ;;  error          18   74[COMRAM] unsigned char [18]
  5938 ;;  day             1   92[COMRAM] unsigned char 
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      unsigned char 
  5941 ;; Registers used:
  5942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0
  5949 ;;      Locals:        86       0       0       0       0       0       0       0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5951 ;;      Totals:        86       0       0       0       0       0       0       0       0
  5952 ;;Total ram usage:       86 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    3
  5955 ;; This function calls:
  5956 ;;		_BCD_format
  5957 ;;		_Clear_array
  5958 ;;		_Read_string
  5959 ;;		_Write_str
  5960 ;; This function is called by:
  5961 ;;		_Get_data
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text40
  5966  00752C                     __ptext40:
  5967                           	opt stack 0
  5968  00752C                     _Set_day:
  5969                           	opt stack 26
  5970                           
  5971                           ;time.c: 117: unsigned char error[18] = "\nInvalid Entry..!";
  5972                           
  5973                           ;incstack = 0
  5974  00752C  EE21  F095         	lfsr	2,Set_day@F203
  5975  007530  EE10  F04B         	lfsr	1,Set_day@error
  5976  007534  0E12               	movlw	18
  5977  007536                     u1981:
  5978  007536  CFDE FFE6          	movff	postinc2,postinc1
  5979  00753A  2EE8               	decfsz	wreg,f,c
  5980  00753C  D7FC               	goto	u1981
  5981                           
  5982                           ;time.c: 118: unsigned char str5[] = "\nEnter the DAY SUN-01 MON-02 TUE-03 WED-04 THURS-
      +                          05 FRI-06 SAT-07\0";
  5983  00753E  EE22  F000         	lfsr	2,Set_day@F205
  5984  007542  EE10  F008         	lfsr	1,Set_day@str5
  5985  007546  0E43               	movlw	67
  5986  007548                     u1991:
  5987  007548  CFDE FFE6          	movff	postinc2,postinc1
  5988  00754C  2EE8               	decfsz	wreg,f,c
  5989  00754E  D7FC               	goto	u1991
  5990                           
  5991                           ;time.c: 120: unsigned char day;
  5992                           ;time.c: 121: Write_str(str5);
  5993  007550  0E00               	movlw	high Set_day@str5
  5994  007552  6E04               	movwf	Write_str@c+1,c
  5995  007554  0E08               	movlw	low Set_day@str5
  5996  007556  6E03               	movwf	Write_str@c,c
  5997  007558  EC75  F037         	call	_Write_str	;wreg free
  5998                           
  5999                           ;time.c: 122: Clear_array(str, 8);
  6000  00755C  0100               	movlb	0	; () banked
  6001  00755E  0E00               	movlw	high _str
  6002  007560  6E02               	movwf	Clear_array@e+1,c
  6003  007562  0100               	movlb	0	; () banked
  6004  007564  0EF0               	movlw	low _str
  6005  007566  6E01               	movwf	Clear_array@e,c
  6006  007568  0E08               	movlw	8
  6007  00756A  6E03               	movwf	Clear_array@n,c
  6008  00756C  EC09  F037         	call	_Clear_array	;wreg free
  6009  007570                     l2591:
  6010                           
  6011                           ;time.c: 124: {
  6012                           ;time.c: 125: Read_string(str, 2);
  6013  007570  0100               	movlb	0	; () banked
  6014  007572  0E00               	movlw	high _str
  6015  007574  6E04               	movwf	Read_string@buffer+1,c
  6016  007576  0100               	movlb	0	; () banked
  6017  007578  0EF0               	movlw	low _str
  6018  00757A  6E03               	movwf	Read_string@buffer,c
  6019  00757C  0E02               	movlw	2
  6020  00757E  6E05               	movwf	Read_string@len,c
  6021  007580  EC8C  F037         	call	_Read_string	;wreg free
  6022                           
  6023                           ;time.c: 126: day = BCD_format(str);
  6024  007584  0100               	movlb	0	; () banked
  6025  007586  0E00               	movlw	high _str
  6026  007588  6E02               	movwf	BCD_format@str+1,c
  6027  00758A  0100               	movlb	0	; () banked
  6028  00758C  0EF0               	movlw	low _str
  6029  00758E  6E01               	movwf	BCD_format@str,c
  6030  007590  EC4E  F037         	call	_BCD_format	;wreg free
  6031  007594  6E5D               	movwf	Set_day@day,c
  6032                           
  6033                           ;time.c: 127: Write_str(str);
  6034  007596  0100               	movlb	0	; () banked
  6035  007598  0E00               	movlw	high _str
  6036  00759A  6E04               	movwf	Write_str@c+1,c
  6037  00759C  0100               	movlb	0	; () banked
  6038  00759E  0EF0               	movlw	low _str
  6039  0075A0  6E03               	movwf	Write_str@c,c
  6040  0075A2  EC75  F037         	call	_Write_str	;wreg free
  6041                           
  6042                           ;time.c: 128: if(day>=1 && day<=7)
  6043  0075A6  505D               	movf	Set_day@day,w,c
  6044  0075A8  B4D8               	btfsc	status,2,c
  6045  0075AA  D006               	goto	l2607
  6046  0075AC  0E08               	movlw	8
  6047  0075AE  5C5D               	subwf	Set_day@day,w,c
  6048  0075B0  B0D8               	btfsc	status,0,c
  6049  0075B2  D002               	goto	l2607
  6050                           
  6051                           ;time.c: 129: {
  6052                           ;time.c: 130: return (day);
  6053  0075B4  505D               	movf	Set_day@day,w,c
  6054  0075B6  D00D               	goto	l154
  6055  0075B8                     l2607:
  6056                           
  6057                           ;time.c: 132: else{
  6058                           ;time.c: 133: Write_str(error);
  6059  0075B8  0E00               	movlw	high Set_day@error
  6060  0075BA  6E04               	movwf	Write_str@c+1,c
  6061  0075BC  0E4B               	movlw	low Set_day@error
  6062  0075BE  6E03               	movwf	Write_str@c,c
  6063  0075C0  EC75  F037         	call	_Write_str	;wreg free
  6064                           
  6065                           ;time.c: 135: }
  6066                           ;time.c: 136: }while(!(day>=1 && day<=7));
  6067  0075C4  505D               	movf	Set_day@day,w,c
  6068  0075C6  B4D8               	btfsc	status,2,c
  6069  0075C8  D7D3               	goto	l2591
  6070  0075CA  0E08               	movlw	8
  6071  0075CC  5C5D               	subwf	Set_day@day,w,c
  6072  0075CE  B0D8               	btfsc	status,0,c
  6073  0075D0  D7CF               	goto	l2591
  6074  0075D2                     l154:
  6075  0075D2  0012               	return	
  6076  0075D4                     __end_of_Set_day:
  6077                           	opt stack 0
  6078                           tblptru	equ	0xFF8
  6079                           tblptrh	equ	0xFF7
  6080                           tblptrl	equ	0xFF6
  6081                           tablat	equ	0xFF5
  6082                           postinc0	equ	0xFEE
  6083                           wreg	equ	0xFE8
  6084                           indf1	equ	0xFE7
  6085                           postinc1	equ	0xFE6
  6086                           postdec1	equ	0xFE5
  6087                           fsr1h	equ	0xFE2
  6088                           fsr1l	equ	0xFE1
  6089                           indf2	equ	0xFDF
  6090                           postinc2	equ	0xFDE
  6091                           fsr2h	equ	0xFDA
  6092                           fsr2l	equ	0xFD9
  6093                           status	equ	0xFD8
  6094                           
  6095 ;; *************** function _Clear_array *****************
  6096 ;; Defined at:
  6097 ;;		line 52 in file "time.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  e               2    0[COMRAM] PTR unsigned char 
  6100 ;;		 -> str(11), time(2), 
  6101 ;;  n               1    2[COMRAM] unsigned char 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  i               1    3[COMRAM] unsigned char 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;		None               void
  6106 ;; Registers used:
  6107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6113 ;;      Params:         3       0       0       0       0       0       0       0       0
  6114 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6116 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6117 ;;Total ram usage:        4 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_Set_day
  6123 ;;		_Read_time
  6124 ;; This function uses a non-reentrant model
  6125 ;;
  6126                           
  6127                           	psect	text41
  6128  006E12                     __ptext41:
  6129                           	opt stack 0
  6130  006E12                     _Clear_array:
  6131                           	opt stack 29
  6132                           
  6133                           ;time.c: 54: unsigned char i;
  6134                           ;time.c: 55: for(i=0;i<n;i++)
  6135                           
  6136                           ;incstack = 0
  6137  006E12  0E00               	movlw	0
  6138  006E14  6E04               	movwf	Clear_array@i,c
  6139  006E16  D009               	goto	l2391
  6140  006E18                     l2385:
  6141                           
  6142                           ;time.c: 56: {
  6143                           ;time.c: 57: *e = ' ';
  6144  006E18  C001  FFD9         	movff	Clear_array@e,fsr2l
  6145  006E1C  C002  FFDA         	movff	Clear_array@e+1,fsr2h
  6146  006E20  0E20               	movlw	32
  6147  006E22  6EDF               	movwf	indf2,c
  6148                           
  6149                           ;time.c: 58: e++;
  6150  006E24  4A01               	infsnz	Clear_array@e,f,c
  6151  006E26  2A02               	incf	Clear_array@e+1,f,c
  6152  006E28  2A04               	incf	Clear_array@i,f,c
  6153  006E2A                     l2391:
  6154  006E2A  5003               	movf	Clear_array@n,w,c
  6155  006E2C  5C04               	subwf	Clear_array@i,w,c
  6156  006E2E  B0D8               	btfsc	status,0,c
  6157  006E30  0012               	return	
  6158  006E32  D7F2               	goto	l2385
  6159  006E34                     __end_of_Clear_array:
  6160                           	opt stack 0
  6161                           tblptru	equ	0xFF8
  6162                           tblptrh	equ	0xFF7
  6163                           tblptrl	equ	0xFF6
  6164                           tablat	equ	0xFF5
  6165                           postinc0	equ	0xFEE
  6166                           wreg	equ	0xFE8
  6167                           indf1	equ	0xFE7
  6168                           postinc1	equ	0xFE6
  6169                           postdec1	equ	0xFE5
  6170                           fsr1h	equ	0xFE2
  6171                           fsr1l	equ	0xFE1
  6172                           indf2	equ	0xFDF
  6173                           postinc2	equ	0xFDE
  6174                           fsr2h	equ	0xFDA
  6175                           fsr2l	equ	0xFD9
  6176                           status	equ	0xFD8
  6177                           
  6178 ;; *************** function _Set_date *****************
  6179 ;; Defined at:
  6180 ;;		line 141 in file "time.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  date            2    7[COMRAM] PTR unsigned char 
  6183 ;;		 -> Get_data@date(1), 
  6184 ;;  month           2    9[COMRAM] PTR unsigned char 
  6185 ;;		 -> Get_data@month(1), 
  6186 ;;  year            2   11[COMRAM] PTR unsigned char 
  6187 ;;		 -> Get_data@year(1), 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  str6           30   13[COMRAM] unsigned char [30]
  6190 ;;  error          18   43[COMRAM] unsigned char [18]
  6191 ;;  z               1   63[COMRAM] unsigned char 
  6192 ;;  y               1   62[COMRAM] unsigned char 
  6193 ;;  x               1   61[COMRAM] unsigned char 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;		None               void
  6196 ;; Registers used:
  6197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6203 ;;      Params:         6       0       0       0       0       0       0       0       0
  6204 ;;      Locals:        51       0       0       0       0       0       0       0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6206 ;;      Totals:        57       0       0       0       0       0       0       0       0
  6207 ;;Total ram usage:       57 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    3
  6210 ;; This function calls:
  6211 ;;		_BCD_format
  6212 ;;		_BCD_to_DEC
  6213 ;;		_Read_string
  6214 ;;		_Write_str
  6215 ;; This function is called by:
  6216 ;;		_Get_data
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text42
  6221  007954                     __ptext42:
  6222                           	opt stack 0
  6223  007954                     _Set_date:
  6224                           	opt stack 26
  6225                           
  6226                           ;time.c: 143: unsigned char x, y, z;
  6227                           ;time.c: 144: unsigned char str6[30] = "\nEnter DATE/MONTH/YEAR\tDDMMYY", error[] = "\nI
      +                          nvalid Entry..!";
  6228                           
  6229                           ;incstack = 0
  6230  007954  EE21  F023         	lfsr	2,Set_date@F214
  6231  007958  EE10  F00E         	lfsr	1,Set_date@str6
  6232  00795C  0E1E               	movlw	30
  6233  00795E                     u2041:
  6234  00795E  CFDE FFE6          	movff	postinc2,postinc1
  6235  007962  2EE8               	decfsz	wreg,f,c
  6236  007964  D7FC               	goto	u2041
  6237  007966  EE21  F083         	lfsr	2,Set_date@F216
  6238  00796A  EE10  F02C         	lfsr	1,Set_date@error
  6239  00796E  0E12               	movlw	18
  6240  007970                     u2051:
  6241  007970  CFDE FFE6          	movff	postinc2,postinc1
  6242  007974  2EE8               	decfsz	wreg,f,c
  6243  007976  D7FC               	goto	u2051
  6244  007978                     l2615:
  6245                           
  6246                           ;time.c: 146: {
  6247                           ;time.c: 147: Write_str(str6);
  6248  007978  0E00               	movlw	high Set_date@str6
  6249  00797A  6E04               	movwf	Write_str@c+1,c
  6250  00797C  0E0E               	movlw	low Set_date@str6
  6251  00797E  6E03               	movwf	Write_str@c,c
  6252  007980  EC75  F037         	call	_Write_str	;wreg free
  6253                           
  6254                           ;time.c: 148: Read_string(str, 6);
  6255  007984  0100               	movlb	0	; () banked
  6256  007986  0E00               	movlw	high _str
  6257  007988  6E04               	movwf	Read_string@buffer+1,c
  6258  00798A  0100               	movlb	0	; () banked
  6259  00798C  0EF0               	movlw	low _str
  6260  00798E  6E03               	movwf	Read_string@buffer,c
  6261  007990  0E06               	movlw	6
  6262  007992  6E05               	movwf	Read_string@len,c
  6263  007994  EC8C  F037         	call	_Read_string	;wreg free
  6264                           
  6265                           ;time.c: 149: *date = BCD_format(str);
  6266  007998  0100               	movlb	0	; () banked
  6267  00799A  0E00               	movlw	high _str
  6268  00799C  6E02               	movwf	BCD_format@str+1,c
  6269  00799E  0100               	movlb	0	; () banked
  6270  0079A0  0EF0               	movlw	low _str
  6271  0079A2  6E01               	movwf	BCD_format@str,c
  6272  0079A4  EC4E  F037         	call	_BCD_format	;wreg free
  6273  0079A8  C008  FFD9         	movff	Set_date@date,fsr2l
  6274  0079AC  C009  FFDA         	movff	Set_date@date+1,fsr2h
  6275  0079B0  6EDF               	movwf	indf2,c
  6276                           
  6277                           ;time.c: 150: *month = BCD_format(str+2);
  6278  0079B2  0100               	movlb	0	; () banked
  6279  0079B4  0E00               	movlw	high (_str+2)
  6280  0079B6  6E02               	movwf	BCD_format@str+1,c
  6281  0079B8  0100               	movlb	0	; () banked
  6282  0079BA  0EF2               	movlw	low (_str+2)
  6283  0079BC  6E01               	movwf	BCD_format@str,c
  6284  0079BE  EC4E  F037         	call	_BCD_format	;wreg free
  6285  0079C2  C00A  FFD9         	movff	Set_date@month,fsr2l
  6286  0079C6  C00B  FFDA         	movff	Set_date@month+1,fsr2h
  6287  0079CA  6EDF               	movwf	indf2,c
  6288                           
  6289                           ;time.c: 151: *year = BCD_format(str+4);
  6290  0079CC  0100               	movlb	0	; () banked
  6291  0079CE  0E00               	movlw	high (_str+4)
  6292  0079D0  6E02               	movwf	BCD_format@str+1,c
  6293  0079D2  0100               	movlb	0	; () banked
  6294  0079D4  0EF4               	movlw	low (_str+4)
  6295  0079D6  6E01               	movwf	BCD_format@str,c
  6296  0079D8  EC4E  F037         	call	_BCD_format	;wreg free
  6297  0079DC  C00C  FFD9         	movff	Set_date@year,fsr2l
  6298  0079E0  C00D  FFDA         	movff	Set_date@year+1,fsr2h
  6299  0079E4  6EDF               	movwf	indf2,c
  6300                           
  6301                           ;time.c: 152: x = BCD_to_DEC(*date);
  6302  0079E6  C008  FFD9         	movff	Set_date@date,fsr2l
  6303  0079EA  C009  FFDA         	movff	Set_date@date+1,fsr2h
  6304  0079EE  50DF               	movf	indf2,w,c
  6305  0079F0  ECA5  F036         	call	_BCD_to_DEC
  6306  0079F4  6E3E               	movwf	Set_date@x,c
  6307                           
  6308                           ;time.c: 153: y = BCD_to_DEC(*month);
  6309  0079F6  C00A  FFD9         	movff	Set_date@month,fsr2l
  6310  0079FA  C00B  FFDA         	movff	Set_date@month+1,fsr2h
  6311  0079FE  50DF               	movf	indf2,w,c
  6312  007A00  ECA5  F036         	call	_BCD_to_DEC
  6313  007A04  6E3F               	movwf	Set_date@y,c
  6314                           
  6315                           ;time.c: 154: z = BCD_to_DEC(*year);
  6316  007A06  C00C  FFD9         	movff	Set_date@year,fsr2l
  6317  007A0A  C00D  FFDA         	movff	Set_date@year+1,fsr2h
  6318  007A0E  50DF               	movf	indf2,w,c
  6319  007A10  ECA5  F036         	call	_BCD_to_DEC
  6320  007A14  6E40               	movwf	Set_date@z,c
  6321                           
  6322                           ;time.c: 155: if((x>=1&&x<=31) && (y>=1&&y<=12) && (z>=1&&z<=99))
  6323  007A16  503E               	movf	Set_date@x,w,c
  6324  007A18  B4D8               	btfsc	status,2,c
  6325  007A1A  D029               	goto	l2645
  6326  007A1C  0E20               	movlw	32
  6327  007A1E  5C3E               	subwf	Set_date@x,w,c
  6328  007A20  B0D8               	btfsc	status,0,c
  6329  007A22  D025               	goto	l2645
  6330  007A24  503F               	movf	Set_date@y,w,c
  6331  007A26  B4D8               	btfsc	status,2,c
  6332  007A28  D022               	goto	l2645
  6333  007A2A  0E0D               	movlw	13
  6334  007A2C  5C3F               	subwf	Set_date@y,w,c
  6335  007A2E  B0D8               	btfsc	status,0,c
  6336  007A30  D01E               	goto	l2645
  6337  007A32  5040               	movf	Set_date@z,w,c
  6338  007A34  B4D8               	btfsc	status,2,c
  6339  007A36  D01B               	goto	l2645
  6340  007A38  0E64               	movlw	100
  6341  007A3A  5C40               	subwf	Set_date@z,w,c
  6342  007A3C  B0D8               	btfsc	status,0,c
  6343  007A3E  D017               	goto	l2645
  6344                           
  6345                           ;time.c: 156: {
  6346                           ;time.c: 157: *date = *date & 0x3F;
  6347  007A40  C008  FFD9         	movff	Set_date@date,fsr2l
  6348  007A44  C009  FFDA         	movff	Set_date@date+1,fsr2h
  6349  007A48  50DF               	movf	indf2,w,c
  6350  007A4A  0B3F               	andlw	63
  6351  007A4C  C008  FFD9         	movff	Set_date@date,fsr2l
  6352  007A50  C009  FFDA         	movff	Set_date@date+1,fsr2h
  6353  007A54  6EDF               	movwf	indf2,c
  6354                           
  6355                           ;time.c: 159: *year = *year & 0xFF;
  6356  007A56  C00A  FFD9         	movff	Set_date@month,fsr2l
  6357  007A5A  C00B  FFDA         	movff	Set_date@month+1,fsr2h
  6358  007A5E  50DF               	movf	indf2,w,c
  6359  007A60  0B1F               	andlw	31
  6360  007A62  C00A  FFD9         	movff	Set_date@month,fsr2l
  6361  007A66  C00B  FFDA         	movff	Set_date@month+1,fsr2h
  6362  007A6A  6EDF               	movwf	indf2,c
  6363                           
  6364                           ;time.c: 160: }
  6365  007A6C  D006               	goto	l2647
  6366  007A6E                     l2645:
  6367                           
  6368                           ;time.c: 161: else
  6369                           ;time.c: 162: Write_str(error);
  6370  007A6E  0E00               	movlw	high Set_date@error
  6371  007A70  6E04               	movwf	Write_str@c+1,c
  6372  007A72  0E2C               	movlw	low Set_date@error
  6373  007A74  6E03               	movwf	Write_str@c,c
  6374  007A76  EC75  F037         	call	_Write_str	;wreg free
  6375  007A7A                     l2647:
  6376                           
  6377                           ;time.c: 163: }while(!((x>=0&&x<=31) && (y>=0&&y<=12) && (z>=0&&z<=99)));
  6378  007A7A  0E20               	movlw	32
  6379  007A7C  5C3E               	subwf	Set_date@x,w,c
  6380  007A7E  B0D8               	btfsc	status,0,c
  6381  007A80  D77B               	goto	l2615
  6382  007A82  0E0D               	movlw	13
  6383  007A84  5C3F               	subwf	Set_date@y,w,c
  6384  007A86  B0D8               	btfsc	status,0,c
  6385  007A88  D777               	goto	l2615
  6386  007A8A  0E64               	movlw	100
  6387  007A8C  5C40               	subwf	Set_date@z,w,c
  6388  007A8E  A0D8               	btfss	status,0,c
  6389  007A90  0012               	return	
  6390  007A92  D772               	goto	l2615
  6391  007A94                     __end_of_Set_date:
  6392                           	opt stack 0
  6393                           tblptru	equ	0xFF8
  6394                           tblptrh	equ	0xFF7
  6395                           tblptrl	equ	0xFF6
  6396                           tablat	equ	0xFF5
  6397                           postinc0	equ	0xFEE
  6398                           wreg	equ	0xFE8
  6399                           indf1	equ	0xFE7
  6400                           postinc1	equ	0xFE6
  6401                           postdec1	equ	0xFE5
  6402                           fsr1h	equ	0xFE2
  6403                           fsr1l	equ	0xFE1
  6404                           indf2	equ	0xFDF
  6405                           postinc2	equ	0xFDE
  6406                           fsr2h	equ	0xFDA
  6407                           fsr2l	equ	0xFD9
  6408                           status	equ	0xFD8
  6409                           
  6410 ;; *************** function _Write_str *****************
  6411 ;; Defined at:
  6412 ;;		line 32 in file "uart.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  c               2    2[COMRAM] PTR unsigned char 
  6415 ;;		 -> Get_data@error(18), Get_data@str8(14), Get_data@str2(19), Set_date@error(18), 
  6416 ;;		 -> Set_date@str6(30), Set_day@str5(67), Set_day@error(18), str(11), 
  6417 ;;		 -> Set_time@error(18), Set_time@str3(37), time(2), main@str8(29), 
  6418 ;;		 -> main@str7(35), 
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;		None
  6421 ;; Return value:  Size  Location     Type
  6422 ;;		None               void
  6423 ;; Registers used:
  6424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6430 ;;      Params:         2       0       0       0       0       0       0       0       0
  6431 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6433 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6434 ;;Total ram usage:        2 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    2
  6437 ;; This function calls:
  6438 ;;		_Write
  6439 ;;		_WriteUSART
  6440 ;; This function is called by:
  6441 ;;		_main
  6442 ;;		_Set_time
  6443 ;;		_Set_day
  6444 ;;		_Set_date
  6445 ;;		_Get_data
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text43
  6450  006EEA                     __ptext43:
  6451                           	opt stack 0
  6452  006EEA                     _Write_str:
  6453                           	opt stack 28
  6454                           
  6455                           ;uart.c: 34: Write(0x0D);
  6456                           
  6457                           ;incstack = 0
  6458  006EEA  0E0D               	movlw	13
  6459  006EEC  EC58  F036         	call	_Write
  6460                           
  6461                           ;uart.c: 35: while(*c != '\0')
  6462  006EF0  D00B               	goto	l2369
  6463  006EF2                     l2365:
  6464                           
  6465                           ;uart.c: 36: {
  6466                           ;uart.c: 37: WriteUSART(*c);
  6467  006EF2  C003  FFD9         	movff	Write_str@c,fsr2l
  6468  006EF6  C004  FFDA         	movff	Write_str@c+1,fsr2h
  6469  006EFA  50DF               	movf	indf2,w,c
  6470  006EFC  EC86  F036         	call	_WriteUSART
  6471  006F00                     l455:
  6472  006F00  A2AC               	btfss	4012,1,c	;volatile
  6473  006F02  D7FE               	goto	l455
  6474                           
  6475                           ;uart.c: 39: c++;
  6476  006F04  4A03               	infsnz	Write_str@c,f,c
  6477  006F06  2A04               	incf	Write_str@c+1,f,c
  6478  006F08                     l2369:
  6479  006F08  C003  FFD9         	movff	Write_str@c,fsr2l
  6480  006F0C  C004  FFDA         	movff	Write_str@c+1,fsr2h
  6481  006F10  50DF               	movf	indf2,w,c
  6482  006F12  B4D8               	btfsc	status,2,c
  6483  006F14  0012               	return	
  6484  006F16  D7ED               	goto	l2365
  6485  006F18                     __end_of_Write_str:
  6486                           	opt stack 0
  6487                           tblptru	equ	0xFF8
  6488                           tblptrh	equ	0xFF7
  6489                           tblptrl	equ	0xFF6
  6490                           tablat	equ	0xFF5
  6491                           postinc0	equ	0xFEE
  6492                           wreg	equ	0xFE8
  6493                           indf1	equ	0xFE7
  6494                           postinc1	equ	0xFE6
  6495                           postdec1	equ	0xFE5
  6496                           fsr1h	equ	0xFE2
  6497                           fsr1l	equ	0xFE1
  6498                           indf2	equ	0xFDF
  6499                           postinc2	equ	0xFDE
  6500                           fsr2h	equ	0xFDA
  6501                           fsr2l	equ	0xFD9
  6502                           status	equ	0xFD8
  6503                           
  6504 ;; *************** function _Read_string *****************
  6505 ;; Defined at:
  6506 ;;		line 55 in file "uart.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  6509 ;;		 -> str(11), 
  6510 ;;  len             1    4[COMRAM] unsigned char 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  data            1    6[COMRAM] unsigned char 
  6513 ;;  i               1    5[COMRAM] unsigned char 
  6514 ;; Return value:  Size  Location     Type
  6515 ;;		None               void
  6516 ;; Registers used:
  6517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6523 ;;      Params:         3       0       0       0       0       0       0       0       0
  6524 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6526 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6527 ;;Total ram usage:        5 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    2
  6530 ;; This function calls:
  6531 ;;		_ReadUSART
  6532 ;;		_Write
  6533 ;;		_WriteUSART
  6534 ;; This function is called by:
  6535 ;;		_Set_time
  6536 ;;		_Set_day
  6537 ;;		_Set_date
  6538 ;;		_Get_data
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text44
  6543  006F18                     __ptext44:
  6544                           	opt stack 0
  6545  006F18                     _Read_string:
  6546                           	opt stack 26
  6547                           
  6548                           ;uart.c: 57: char i;
  6549                           ;uart.c: 58: unsigned char data;
  6550                           ;uart.c: 59: Write(0x0D);
  6551                           
  6552                           ;incstack = 0
  6553  006F18  0E0D               	movlw	13
  6554  006F1A  EC58  F036         	call	_Write
  6555                           
  6556                           ;uart.c: 60: Write('\n');
  6557  006F1E  0E0A               	movlw	10
  6558  006F20  EC58  F036         	call	_Write
  6559                           
  6560                           ;uart.c: 61: for(i=0;i<len;i++)
  6561  006F24  0E00               	movlw	0
  6562  006F26  6E06               	movwf	Read_string@i,c
  6563  006F28  D013               	goto	l2405
  6564  006F2A                     l470:
  6565  006F2A  AA9E               	btfss	3998,5,c	;volatile
  6566  006F2C  D7FE               	goto	l470
  6567                           
  6568                           ;uart.c: 64: data = ReadUSART();
  6569  006F2E  ECCB  F036         	call	_ReadUSART	;wreg free
  6570  006F32  6E07               	movwf	Read_string@data,c
  6571                           
  6572                           ;uart.c: 65: *buffer = data;
  6573  006F34  C003  FFD9         	movff	Read_string@buffer,fsr2l
  6574  006F38  C004  FFDA         	movff	Read_string@buffer+1,fsr2h
  6575  006F3C  C007  FFDF         	movff	Read_string@data,indf2
  6576                           
  6577                           ;uart.c: 66: WriteUSART(data);
  6578  006F40  5007               	movf	Read_string@data,w,c
  6579  006F42  EC86  F036         	call	_WriteUSART
  6580  006F46                     l473:
  6581  006F46  A2AC               	btfss	4012,1,c	;volatile
  6582  006F48  D7FE               	goto	l473
  6583                           
  6584                           ;uart.c: 68: buffer++;
  6585  006F4A  4A03               	infsnz	Read_string@buffer,f,c
  6586  006F4C  2A04               	incf	Read_string@buffer+1,f,c
  6587  006F4E  2A06               	incf	Read_string@i,f,c
  6588  006F50                     l2405:
  6589  006F50  5005               	movf	Read_string@len,w,c
  6590  006F52  5C06               	subwf	Read_string@i,w,c
  6591  006F54  B0D8               	btfsc	status,0,c
  6592  006F56  0012               	return	
  6593  006F58  D7E8               	goto	l470
  6594  006F5A                     __end_of_Read_string:
  6595                           	opt stack 0
  6596                           tblptru	equ	0xFF8
  6597                           tblptrh	equ	0xFF7
  6598                           tblptrl	equ	0xFF6
  6599                           tablat	equ	0xFF5
  6600                           postinc0	equ	0xFEE
  6601                           wreg	equ	0xFE8
  6602                           indf1	equ	0xFE7
  6603                           postinc1	equ	0xFE6
  6604                           postdec1	equ	0xFE5
  6605                           fsr1h	equ	0xFE2
  6606                           fsr1l	equ	0xFE1
  6607                           indf2	equ	0xFDF
  6608                           postinc2	equ	0xFDE
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613 ;; *************** function _Write *****************
  6614 ;; Defined at:
  6615 ;;		line 26 in file "uart.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  data            1    wreg     unsigned char 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  data            1    1[COMRAM] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;		None               void
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6629 ;;      Params:         0       0       0       0       0       0       0       0       0
  6630 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6632 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6633 ;;Total ram usage:        1 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:    1
  6636 ;; This function calls:
  6637 ;;		_WriteUSART
  6638 ;; This function is called by:
  6639 ;;		_Write_str
  6640 ;;		_Read_char
  6641 ;;		_Read_string
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text45
  6646  006CB0                     __ptext45:
  6647                           	opt stack 0
  6648  006CB0                     _Write:
  6649                           	opt stack 28
  6650                           
  6651                           ;incstack = 0
  6652                           ;Write@data stored from wreg
  6653  006CB0  6E02               	movwf	Write@data,c
  6654                           
  6655                           ;uart.c: 28: WriteUSART(data);
  6656  006CB2  5002               	movf	Write@data,w,c
  6657  006CB4  EC86  F036         	call	_WriteUSART
  6658  006CB8                     l447:
  6659  006CB8  B2AC               	btfsc	4012,1,c	;volatile
  6660  006CBA  0012               	return	
  6661  006CBC  D7FD               	goto	l447
  6662  006CBE                     __end_of_Write:
  6663                           	opt stack 0
  6664                           tblptru	equ	0xFF8
  6665                           tblptrh	equ	0xFF7
  6666                           tblptrl	equ	0xFF6
  6667                           tablat	equ	0xFF5
  6668                           postinc0	equ	0xFEE
  6669                           wreg	equ	0xFE8
  6670                           indf1	equ	0xFE7
  6671                           postinc1	equ	0xFE6
  6672                           postdec1	equ	0xFE5
  6673                           fsr1h	equ	0xFE2
  6674                           fsr1l	equ	0xFE1
  6675                           indf2	equ	0xFDF
  6676                           postinc2	equ	0xFDE
  6677                           fsr2h	equ	0xFDA
  6678                           fsr2l	equ	0xFD9
  6679                           status	equ	0xFD8
  6680                           
  6681 ;; *************** function _WriteUSART *****************
  6682 ;; Defined at:
  6683 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;  data            1    wreg     unsigned char 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  data            1    0[COMRAM] unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;		None               void
  6690 ;; Registers used:
  6691 ;;		wreg
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6697 ;;      Params:         0       0       0       0       0       0       0       0       0
  6698 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6700 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6701 ;;Total ram usage:        1 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; This function calls:
  6704 ;;		Nothing
  6705 ;; This function is called by:
  6706 ;;		_Write
  6707 ;;		_Write_str
  6708 ;;		_Read_string
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text46
  6713  006D0C                     __ptext46:
  6714                           	opt stack 0
  6715  006D0C                     _WriteUSART:
  6716                           	opt stack 29
  6717                           
  6718                           ;incstack = 0
  6719                           ;WriteUSART@data stored from wreg
  6720  006D0C  6E01               	movwf	WriteUSART@data,c
  6721  006D0E  ACAC               	btfss	4012,6,c	;volatile
  6722  006D10  D003               	goto	l2293
  6723  006D12  90AC               	bcf	4012,0,c	;volatile
  6724  006D14  B25E               	btfsc	_USART_Status,1,c
  6725  006D16  80AC               	bsf	4012,0,c	;volatile
  6726  006D18                     l2293:
  6727  006D18  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  6728  006D1C  0012               	return	
  6729  006D1E                     __end_of_WriteUSART:
  6730                           	opt stack 0
  6731                           tblptru	equ	0xFF8
  6732                           tblptrh	equ	0xFF7
  6733                           tblptrl	equ	0xFF6
  6734                           tablat	equ	0xFF5
  6735                           postinc0	equ	0xFEE
  6736                           wreg	equ	0xFE8
  6737                           indf1	equ	0xFE7
  6738                           postinc1	equ	0xFE6
  6739                           postdec1	equ	0xFE5
  6740                           fsr1h	equ	0xFE2
  6741                           fsr1l	equ	0xFE1
  6742                           indf2	equ	0xFDF
  6743                           postinc2	equ	0xFDE
  6744                           fsr2h	equ	0xFDA
  6745                           fsr2l	equ	0xFD9
  6746                           status	equ	0xFD8
  6747                           
  6748 ;; *************** function _ReadUSART *****************
  6749 ;; Defined at:
  6750 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;		None
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  data            1    0[COMRAM] unsigned char 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      unsigned char 
  6757 ;; Registers used:
  6758 ;;		wreg, status,2, status,0
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6764 ;;      Params:         0       0       0       0       0       0       0       0       0
  6765 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6767 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6768 ;;Total ram usage:        1 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_Read_char
  6774 ;;		_Read_string
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text47
  6779  006D96                     __ptext47:
  6780                           	opt stack 0
  6781  006D96                     _ReadUSART:
  6782                           	opt stack 29
  6783                           
  6784                           ;incstack = 0
  6785  006D96  0EF2               	movlw	242
  6786  006D98  165E               	andwf	_USART_Status,f,c
  6787  006D9A  ACAB               	btfss	4011,6,c	;volatile
  6788  006D9C  D003               	goto	l519
  6789  006D9E  905E               	bcf	_USART_Status,0,c
  6790  006DA0  B0AB               	btfsc	4011,0,c	;volatile
  6791  006DA2  805E               	bsf	_USART_Status,0,c
  6792  006DA4                     l519:
  6793  006DA4  B4AB               	btfsc	4011,2,c	;volatile
  6794  006DA6  845E               	bsf	_USART_Status,2,c
  6795  006DA8  B2AB               	btfsc	4011,1,c	;volatile
  6796  006DAA  865E               	bsf	_USART_Status,3,c
  6797  006DAC  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6798  006DB0  5001               	movf	ReadUSART@data,w,c
  6799  006DB2  0012               	return	
  6800  006DB4                     __end_of_ReadUSART:
  6801                           	opt stack 0
  6802                           tblptru	equ	0xFF8
  6803                           tblptrh	equ	0xFF7
  6804                           tblptrl	equ	0xFF6
  6805                           tablat	equ	0xFF5
  6806                           postinc0	equ	0xFEE
  6807                           wreg	equ	0xFE8
  6808                           indf1	equ	0xFE7
  6809                           postinc1	equ	0xFE6
  6810                           postdec1	equ	0xFE5
  6811                           fsr1h	equ	0xFE2
  6812                           fsr1l	equ	0xFE1
  6813                           indf2	equ	0xFDF
  6814                           postinc2	equ	0xFDE
  6815                           fsr2h	equ	0xFDA
  6816                           fsr2l	equ	0xFD9
  6817                           status	equ	0xFD8
  6818                           
  6819 ;; *************** function _BCD_to_DEC *****************
  6820 ;; Defined at:
  6821 ;;		line 44 in file "time.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  c               1    wreg     unsigned char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  c               1    1[COMRAM] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      unsigned char 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0, prodl, prodh
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6835 ;;      Params:         0       0       0       0       0       0       0       0       0
  6836 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6837 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6838 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6839 ;;Total ram usage:        2 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_Set_time
  6845 ;;		_Set_date
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text48
  6850  006D4A                     __ptext48:
  6851                           	opt stack 0
  6852  006D4A                     _BCD_to_DEC:
  6853                           	opt stack 28
  6854                           
  6855                           ;incstack = 0
  6856                           ;BCD_to_DEC@c stored from wreg
  6857  006D4A  6E02               	movwf	BCD_to_DEC@c,c
  6858                           
  6859                           ;time.c: 46: return ((c>>4)*10+(c&0x0F)*1);
  6860  006D4C  5002               	movf	BCD_to_DEC@c,w,c
  6861  006D4E  0B0F               	andlw	15
  6862  006D50  0D01               	mullw	1
  6863  006D52  CFF3 F001          	movff	prodl,??_BCD_to_DEC
  6864  006D56  3802               	swapf	BCD_to_DEC@c,w,c
  6865  006D58  0B0F               	andlw	15
  6866  006D5A  0D0A               	mullw	10
  6867  006D5C  50F3               	movf	prodl,w,c
  6868  006D5E  2401               	addwf	??_BCD_to_DEC,w,c
  6869  006D60  0012               	return	
  6870  006D62                     __end_of_BCD_to_DEC:
  6871                           	opt stack 0
  6872                           tblptru	equ	0xFF8
  6873                           tblptrh	equ	0xFF7
  6874                           tblptrl	equ	0xFF6
  6875                           tablat	equ	0xFF5
  6876                           prodl	equ	0xFF3
  6877                           postinc0	equ	0xFEE
  6878                           wreg	equ	0xFE8
  6879                           indf1	equ	0xFE7
  6880                           postinc1	equ	0xFE6
  6881                           postdec1	equ	0xFE5
  6882                           fsr1h	equ	0xFE2
  6883                           fsr1l	equ	0xFE1
  6884                           indf2	equ	0xFDF
  6885                           postinc2	equ	0xFDE
  6886                           fsr2h	equ	0xFDA
  6887                           fsr2l	equ	0xFD9
  6888                           status	equ	0xFD8
  6889                           
  6890 ;; *************** function _BCD_format *****************
  6891 ;; Defined at:
  6892 ;;		line 33 in file "time.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  str             2    0[COMRAM] PTR unsigned char 
  6895 ;;		 -> str(11), 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  a               1    3[COMRAM] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      unsigned char 
  6900 ;; Registers used:
  6901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6907 ;;      Params:         2       0       0       0       0       0       0       0       0
  6908 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6909 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6910 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6911 ;;Total ram usage:        4 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_Set_time
  6917 ;;		_Set_day
  6918 ;;		_Set_date
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text49
  6923  006E9C                     __ptext49:
  6924                           	opt stack 0
  6925  006E9C                     _BCD_format:
  6926                           	opt stack 28
  6927                           
  6928                           ;time.c: 35: unsigned char a;
  6929                           ;time.c: 36: a = (*str-'0')<<4;
  6930                           
  6931                           ;incstack = 0
  6932  006E9C  C001  FFD9         	movff	BCD_format@str,fsr2l
  6933  006EA0  C002  FFDA         	movff	BCD_format@str+1,fsr2h
  6934  006EA4  50DF               	movf	indf2,w,c
  6935  006EA6  6E03               	movwf	??_BCD_format& (0+255),c
  6936  006EA8  3803               	swapf	??_BCD_format,w,c
  6937  006EAA  0BF0               	andlw	240
  6938  006EAC  6E04               	movwf	BCD_format@a,c
  6939                           
  6940                           ;time.c: 37: str++;
  6941  006EAE  4A01               	infsnz	BCD_format@str,f,c
  6942  006EB0  2A02               	incf	BCD_format@str+1,f,c
  6943                           
  6944                           ;time.c: 38: return (a|(*str-'0'));
  6945  006EB2  C001  FFD9         	movff	BCD_format@str,fsr2l
  6946  006EB6  C002  FFDA         	movff	BCD_format@str+1,fsr2h
  6947  006EBA  50DF               	movf	indf2,w,c
  6948  006EBC  0FD0               	addlw	208
  6949  006EBE  1004               	iorwf	BCD_format@a,w,c
  6950  006EC0  0012               	return	
  6951  006EC2                     __end_of_BCD_format:
  6952                           	opt stack 0
  6953  0000                     tblptru	equ	0xFF8
  6954                           tblptrh	equ	0xFF7
  6955                           tblptrl	equ	0xFF6
  6956                           tablat	equ	0xFF5
  6957                           prodl	equ	0xFF3
  6958                           postinc0	equ	0xFEE
  6959                           wreg	equ	0xFE8
  6960                           indf1	equ	0xFE7
  6961                           postinc1	equ	0xFE6
  6962                           postdec1	equ	0xFE5
  6963                           fsr1h	equ	0xFE2
  6964                           fsr1l	equ	0xFE1
  6965                           indf2	equ	0xFDF
  6966                           postinc2	equ	0xFDE
  6967                           fsr2h	equ	0xFDA
  6968                           fsr2l	equ	0xFD9
  6969                           status	equ	0xFD8
  6970                           tblptru	equ	0xFF8
  6971                           tblptrh	equ	0xFF7
  6972                           tblptrl	equ	0xFF6
  6973                           tablat	equ	0xFF5
  6974                           prodl	equ	0xFF3
  6975                           postinc0	equ	0xFEE
  6976                           wreg	equ	0xFE8
  6977                           indf1	equ	0xFE7
  6978                           postinc1	equ	0xFE6
  6979                           postdec1	equ	0xFE5
  6980                           fsr1h	equ	0xFE2
  6981                           fsr1l	equ	0xFE1
  6982                           indf2	equ	0xFDF
  6983                           postinc2	equ	0xFDE
  6984                           fsr2h	equ	0xFDA
  6985                           fsr2l	equ	0xFD9
  6986                           status	equ	0xFD8
  6987                           
  6988                           	psect	rparam
  6989  0000                     tblptru	equ	0xFF8
  6990                           tblptrh	equ	0xFF7
  6991                           tblptrl	equ	0xFF6
  6992                           tablat	equ	0xFF5
  6993                           prodl	equ	0xFF3
  6994                           postinc0	equ	0xFEE
  6995                           wreg	equ	0xFE8
  6996                           indf1	equ	0xFE7
  6997                           postinc1	equ	0xFE6
  6998                           postdec1	equ	0xFE5
  6999                           fsr1h	equ	0xFE2
  7000                           fsr1l	equ	0xFE1
  7001                           indf2	equ	0xFDF
  7002                           postinc2	equ	0xFDE
  7003                           fsr2h	equ	0xFDA
  7004                           fsr2l	equ	0xFD9
  7005                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        349
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160    144     160
    BANK1           256      0     242
    BANK2           256      0     104
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> Get_data@s_6(BANK0[3]), Get_data@s_5(BANK0[3]), Get_data@s_4(BANK0[3]), Get_data@s_3(BANK0[3]), 
		 -> Get_data@s_2(BANK0[3]), Get_data@s_1(BANK0[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 11
		 -> str(BANK0[11]), 

    Read_string@buffer	PTR unsigned char  size(2) Largest target is 11
		 -> str(BANK0[11]), 

    Write_str@c	PTR unsigned char  size(2) Largest target is 67
		 -> Get_data@error(BANK0[18]), Get_data@str8(BANK0[14]), Get_data@str2(BANK0[19]), Set_date@error(COMRAM[18]), 
		 -> Set_date@str6(COMRAM[30]), Set_day@str5(COMRAM[67]), Set_day@error(COMRAM[18]), str(BANK0[11]), 
		 -> Set_time@error(COMRAM[18]), Set_time@str3(COMRAM[37]), time(BANK0[2]), main@str8(BANK0[29]), 
		 -> main@str7(BANK0[35]), 

    Write_time_XLCD@str	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_year@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_month@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_date@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Write_ARR@c	PTR unsigned char  size(2) Largest target is 4
		 -> write_DAY@day_7(COMRAM[4]), write_DAY@day_6(COMRAM[4]), write_DAY@day_5(COMRAM[4]), write_DAY@day_4(COMRAM[4]), 
		 -> write_DAY@day_3(COMRAM[4]), write_DAY@day_2(COMRAM[4]), write_DAY@day_1(COMRAM[4]), 

    Write_ARR@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_hour@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_min@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Read_sec@e	PTR unsigned char  size(2) Largest target is 2
		 -> time(BANK0[2]), 

    Set_date@year	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@year(BANK0[1]), 

    Set_date@month	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@month(BANK0[1]), 

    Set_date@date	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@date(BANK0[1]), 

    Set_time@hour	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@h(BANK0[1]), 

    Set_time@min	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@m(BANK0[1]), 

    Set_time@sec	PTR unsigned char  size(2) Largest target is 1
		 -> Get_data@s(BANK0[1]), 

    Clear_array@e	PTR unsigned char  size(2) Largest target is 11
		 -> str(BANK0[11]), time(BANK0[2]), 

    BCD_format@str	PTR unsigned char  size(2) Largest target is 11
		 -> str(BANK0[11]), 


Critical Paths under _main in COMRAM

    _Write_time_XLCD->_WriteCmdXLCD
    _Write_time_XLCD->_WriteDataXLCD
    _WriteDataXLCD->_DelayFor18TCY
    _UsartConfig->_OpenUSART
    _delay_us->_Delay1KTCYx
    _Read_year->_Read
    _Read_sec->_Read
    _Read_month->_Read
    _Read_min->_Read
    _Read_hour->_Read
    _Read_day->_write_DAY
    _write_DAY->_Write_ARR
    _Read_date->_Read
    _Read->_Write_I2C
    _Read_char->_Write
    _OpenXLCD->_SetDDRamAddr
    _WriteCmdXLCD->_DelayFor18TCY
    _SetDDRamAddr->_DelayFor18TCY
    _DelayPORXLCD->_Delay1KTCYx
    _BusyXLCD->_DelayFor18TCY
    _DelayFor18TCY->_Delay10TCYx
    _Get_data->_Set_day
    _Write_time_->_Write_I2C
    _Write_time->_Write_I2C
    _delay_ms->_Delay1KTCYx
    _Write_I2C->_WriteI2C
    _WriteI2C->_IdleI2C
    _Set_time->_Read_string
    _Set_day->_Read_string
    _Set_date->_Read_string
    _Write_str->_Write
    _Read_string->_Write
    _Write->_WriteUSART

Critical Paths under _main in BANK0

    _main->_Get_data

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0   19070
                                             77 BANK0     67    67      0
                           _Get_data
                           _OpenXLCD
                          _Read_char
                          _Read_time
                       _SetDDRamAddr
                        _UsartConfig
                       _WriteCmdXLCD
                          _Write_str
                    _Write_time_XLCD
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _Write_time_XLCD                                      3     1      2     328
                                              3 COMRAM     3     1      2
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      90
                                              2 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _UsartConfig                                          2     1      1     370
                                              6 COMRAM     2     1      1
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     273
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Read_time                                            1     1      0    4117
                                             33 COMRAM     1     1      0
                        _Clear_array
                           _CloseI2C
                            _IdleI2C
                            _OpenI2C
                          _Read_date
                           _Read_day
                          _Read_hour
                           _Read_min
                         _Read_month
                           _Read_sec
                          _Read_year
                          _Write_I2C
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             2     2      0      68
                                              1 COMRAM     2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Read_year                                            3     1      2     351
                                              5 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_sec                                             3     1      2     328
                                              5 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_month                                           3     1      2     328
                                              5 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_min                                             3     1      2     328
                                              5 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_hour                                            7     4      3     582
                                              5 COMRAM     7     4      3
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read_day                                             0     0      0    1214
                               _Read
                          _write_DAY
 ---------------------------------------------------------------------------------
 (3) _write_DAY                                           29    29      0    1075
                                              4 COMRAM    29    29      0
                          _Write_ARR
 ---------------------------------------------------------------------------------
 (4) _Write_ARR                                            4     0      4     878
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _Read_date                                            3     1      2     351
                                              5 COMRAM     3     1      2
                               _Read
 ---------------------------------------------------------------------------------
 (3) _Read                                                 1     1      0     139
                                              4 COMRAM     1     1      0
                            _ReadBUF
                            _ReadI2C
                          _Write_I2C
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _ReadI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_char                                            1     1      0     112
                                              2 COMRAM     1     1      0
                          _ReadUSART
                              _Write
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0     336
                                              6 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      90
                                              2 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _SetDDRamAddr                                         4     4      0     112
                                              2 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0      68
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        1     1      0      68
                                              1 COMRAM     1     1      0
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Get_data                                            77    77      0   12357
                                              0 BANK0     77    77      0
                        _Read_string
                           _Set_date
                            _Set_day
                           _Set_time
                          _Write_str
                         _Write_time
                        _Write_time_
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     2      4     727
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Write_time_                                          3     1      2     438
                                              4 COMRAM     3     1      2
                            _OpenI2C
                            _ReadBUF
                          _Write_I2C
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1     150
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Write_time                                           4     1      3     363
                                              4 COMRAM     4     1      3
                           _CloseI2C
                            _ReadBUF
                          _Write_I2C
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     2      0      68
                                              1 COMRAM     2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_I2C                                            1     1      0      46
                                              3 COMRAM     1     1      0
                            _ReadBUF
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              1 COMRAM     2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (4) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadBUF                                              1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CloseI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_time                                            68    61      7    3211
                                              7 COMRAM    68    61      7
                         _BCD_format
                         _BCD_to_DEC
                        _Read_string
                          _Write_str
 ---------------------------------------------------------------------------------
 (2) _Set_day                                             86    86      0    2520
                                              7 COMRAM    86    86      0
                         _BCD_format
                        _Clear_array
                        _Read_string
                          _Write_str
 ---------------------------------------------------------------------------------
 (2) _Clear_array                                          4     1      3     281
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _Set_date                                            57    51      6    2752
                                              7 COMRAM    57    51      6
                         _BCD_format
                         _BCD_to_DEC
                        _Read_string
                          _Write_str
 ---------------------------------------------------------------------------------
 (1) _Write_str                                            2     0      2     906
                                              2 COMRAM     2     0      2
                              _Write
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _Read_string                                          5     2      3     733
                                              2 COMRAM     5     2      3
                          _ReadUSART
                              _Write
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _Write                                                1     1      0      44
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BCD_to_DEC                                           2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _BCD_format                                           4     2      2     439
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Get_data
     _Read_string
       _ReadUSART
       _Write
         _WriteUSART
       _WriteUSART
     _Set_date
       _BCD_format
       _BCD_to_DEC
       _Read_string
         _ReadUSART
         _Write
           _WriteUSART
         _WriteUSART
       _Write_str
         _Write
           _WriteUSART
         _WriteUSART
     _Set_day
       _BCD_format
       _Clear_array
       _Read_string
         _ReadUSART
         _Write
           _WriteUSART
         _WriteUSART
       _Write_str
         _Write
           _WriteUSART
         _WriteUSART
     _Set_time
       _BCD_format
       _BCD_to_DEC
       _Read_string
         _ReadUSART
         _Write
           _WriteUSART
         _WriteUSART
       _Write_str
         _Write
           _WriteUSART
         _WriteUSART
     _Write_str
       _Write
         _WriteUSART
       _WriteUSART
     _Write_time
       _CloseI2C
       _ReadBUF
       _Write_I2C
         _ReadBUF
         _WriteI2C
           _IdleI2C
       _delay_ms
         _Delay1KTCYx
     _Write_time_
       _OpenI2C
       _ReadBUF
       _Write_I2C
         _ReadBUF
         _WriteI2C
           _IdleI2C
       _delay_ms
         _Delay1KTCYx
     _strcmp
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _Delay10KTCYx
     _DelayPORXLCD
       _Delay1KTCYx
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _Read_char
     _ReadUSART
     _Write
       _WriteUSART
   _Read_time
     _Clear_array
     _CloseI2C
     _IdleI2C
     _OpenI2C
     _Read_date
       _Read
         _ReadBUF
         _ReadI2C
         _Write_I2C
           _ReadBUF
           _WriteI2C
             _IdleI2C
         _delay_ms
           _Delay1KTCYx
     _Read_day
       _Read
         _ReadBUF
         _ReadI2C
         _Write_I2C
           _ReadBUF
           _WriteI2C
             _IdleI2C
         _delay_ms
           _Delay1KTCYx
       _write_DAY
         _Write_ARR
     _Read_hour
       _Read
         _ReadBUF
         _ReadI2C
         _Write_I2C
           _ReadBUF
           _WriteI2C
             _IdleI2C
         _delay_ms
           _Delay1KTCYx
     _Read_min
       _Read
         _ReadBUF
         _ReadI2C
         _Write_I2C
           _ReadBUF
           _WriteI2C
             _IdleI2C
         _delay_ms
           _Delay1KTCYx
     _Read_month
       _Read
         _ReadBUF
         _ReadI2C
         _Write_I2C
           _ReadBUF
           _WriteI2C
             _IdleI2C
         _delay_ms
           _Delay1KTCYx
     _Read_sec
       _Read
         _ReadBUF
         _ReadI2C
         _Write_I2C
           _ReadBUF
           _WriteI2C
             _IdleI2C
         _delay_ms
           _Delay1KTCYx
     _Read_year
       _Read
         _ReadBUF
         _ReadI2C
         _Write_I2C
           _ReadBUF
           _WriteI2C
             _IdleI2C
         _delay_ms
           _Delay1KTCYx
     _Write_I2C
       _ReadBUF
       _WriteI2C
         _IdleI2C
     _delay_ms
       _Delay1KTCYx
     _delay_us
       _Delay1KTCYx
   _SetDDRamAddr
     _DelayFor18TCY
       _Delay10TCYx
   _UsartConfig
     _OpenUSART
   _WriteCmdXLCD
     _DelayFor18TCY
       _Delay10TCYx
   _Write_str
     _Write
       _WriteUSART
     _WriteUSART
   _Write_time_XLCD
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _WriteDataXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _delay_ms
     _Delay1KTCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      68       9       40.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     258      20        0.0%
DATA                 0      0     258       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Sep 20 11:32:17 2014

     __end_of_Clear_array 6E34               _SSPSTATbits 000FC7               __CFG_BORV$3 000000  
                     l320 6DF4                       l154 75D2                       l227 7688  
                     l501 7374                       l326 723C                       l350 774E  
                     l510 73B8                       l335 72F0                       l344 769E  
                     l329 7282                       l505 7388                       l338 7342  
                     l506 738A                       l259 7BEA                       l347 7744  
                     l507 7394                       l508 7396                       l470 6F2A  
                     l606 72EA                       l462 6DD2                       l519 6DA4  
                     l447 6CB8                       l455 6F00                       l473 6F46  
                     l609 72B4                       l393 6E4E                       l618 72E0  
                     l394 6E54                       l584 6EE0                       l585 6EE2  
                     l862 6CDE                       l855 6CEE                       l848 6D36  
            __CFG_BOR$OFF 000000                       _str 00F0     __size_of_WriteCmdXLCD 0022  
                     wreg 000FE8              __CFG_FOSC$HS 000000      __size_of_Write_time_ 0060  
            __CFG_LVP$OFF 000000               main@config1 00EE              __CFG_WDT$OFF 000000  
                    l2301 6D72                      l3021 7DFA                      l3031 7EAE  
                    l3041 7F12                      l3033 7EB2                      l3051 7F60  
                    l3027 7E42                      l2315 70F8                      l3123 7158  
                    l3115 7140                      l3203 7918                      l2405 6F50  
                    l2245 6CCC                      l3037 7EFA                      l3045 7F24  
                    l2309 70DC                      l2421 7B22                      l3109 712C  
                    l3205 7924                      l3039 7F02                      l2431 7BA4  
                    l2423 7B3C                      l3057 7F7A                      l3049 7F50  
                    l2425 7B56                      l3129 716C                      l2515 7C10  
                    l2275 72C0                      l2427 7B70                      l2419 7B08  
                    l2435 7BBE                      l2293 6D18                      l2365 6EF2  
                    l2357 6D24                      l2429 7B8A                      l2453 6D84  
                    l2615 7978                      l2391 6E2A                      l2607 75B8  
                    l2535 7C8A                      l2369 6F08                      l2385 6E18  
                    l2553 7CD2                      l2297 6D6A                      l2457 6D8C  
                    l3185 78C2                      l3177 7896                      l2555 7CE0  
                    l3195 78F0                      l3187 78CC                      l2645 7A6E  
                    l2565 7D08                      l2549 7CC4                      l2661 6F92  
                    l2647 7A7A                      l2591 7570                      l2583 7D50  
                    l2575 7D30                      l2567 7D14                      l2655 6F5C  
                    l2903 7376                      l2657 6F64                      l2763 75EA  
                    l2773 762A                      l2765 75F2                      l2783 766C  
                    l2775 7630                      l2963 74D0                      l2981 751A  
                    l2973 74FA                      l2965 74DA                      l2895 7368  
                    l2977 750A                      l2969 74EA       __size_of_BCD_format 0026  
                    u2041 795E                      u2051 7970                      u2245 7640  
     __size_of_BCD_to_DEC 0018                      u2265 7654                      u2461 7D86  
                    u2701 7854                      u2471 7D98                      u2711 7866  
                    u1761 7BF6                      u2481 7DAA                      u1771 7C08  
                    u1755 7092                      u1890 7D00                      u1981 7536  
                    u1991 7548                      u2857 6D3C                      u2867 6CF0  
                    u2877 6CE0                      _Read 6DF2                      _main 784A  
                    _time 00FB                      fsr1h 000FE2                      fsr2h 000FDA  
                    indf1 000FE7                      fsr1l 000FE1                      indf2 000FDF  
                    fsr2l 000FD9   __end_of_Write_time_XLCD 7176    __size_of_WriteDataXLCD 0024  
                    prodl 000FF3                      start 0000             __CFG_IESO$OFF 000000  
         __end_of_IdleI2C 6CDC             __CFG_MCLRE$ON 000000           __end_of_ReadI2C 6EEA  
         __end_of_ReadBUF 6CA4                Read_char@c 0003                Read_date@c 0008  
              Read_date@e 0006               _Delay10TCYx 6CEC           __end_of_OpenI2C 6DD2  
            _WriteCmdXLCD 6E56                Read_hour@c 000C                Read_hour@e 0006  
              Read_hour@i 000B           __end_of_Set_day 75D4               _Delay1KTCYx 6CDC  
           __CFG_PLLDIV$5 000000                Read_year@c 0008                Read_year@e 0006  
                   ?_Read 0001             ?_SetDDRamAddr 0001                     ?_main 0001  
                   _RCREG 000FAE                     _RCSTA 000FAB                     _SPBRG 000FAF  
                   _PORTB 000F81                     _PORTD 000F83             __CFG_USBDIV$1 000000  
                   _TRISB 000F93                     _TRISD 000F95                     _TXREG 000FAD  
   __size_of_Delay10KTCYx 0016                     Read@c 0005                     _TXSTA 000FAC  
           __CFG_PWRT$OFF 000000            __CFG_FCMEN$OFF 000000             ??_Read_string 0006  
                   _Write 6CB0                     main@c 00EF                     tablat 000FF5  
                   status 000FD8               _Clear_array 6E12          __end_of_CloseI2C 6C92  
          WriteUSART@data 0001          __end_of_Get_data 8000           __initialization 7422  
            __end_of_Read 6E12              __end_of_main 7954          __end_of_BusyXLCD 6E56  
            _Delay10KTCYx 6D34     __size_of_DelayPORXLCD 0008          __end_of_Read_day 6CB0  
        __end_of_Read_min 6FE8          __end_of_Read_sec 707C                _Read_month 6FE8  
          ??_SetDDRamAddr 0003                    ??_Read 0005          __end_of_OpenXLCD 752C  
                  ??_main 005E             __activetblptr 000002             _WriteDataXLCD 6E78  
        __end_of_Set_date 7A94          __end_of_Set_time 7D76               Read_month@c 0008  
             Read_month@e 0006                Set_day@day 005D           __CFG_CCP2MX$OFF 000000  
          DelayFor18TCY@i 0002                    ?_Write 0001          __end_of_WriteI2C 72EC  
           BCD_format@str 0001               OpenI2C@slew 0001                 ??_IdleI2C 0001  
      __size_of_ReadUSART 001E       __end_of_Read_string 6F5A                    _SPBRGH 000FB0  
                  _SSPADD 000FC8                    _SSPBUF 000FC9                 ??_ReadI2C 0001  
               ??_ReadBUF 0001        __size_of_Read_char 0020        __size_of_Read_date 005A  
        ?_Write_time_XLCD 0004        __size_of_Read_hour 00B6          __end_of_delay_ms 6D7C  
        __end_of_delay_us 6D96        __size_of_Read_time 00CE        __size_of_Read_year 0058  
               ??_OpenI2C 0002              _DelayPORXLCD 6C92                 ??_Set_day 0008  
      __size_of_OpenUSART 0068              ??_BCD_format 0003              ??_BCD_to_DEC 0001  
                  clear_0 7428            ?_WriteDataXLCD 0001                    _strcmp 6F5A  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
      __end_of_BCD_format 6EC2        __end_of_BCD_to_DEC 6D62                __accesstop 0060  
 __end_of__initialization 748E           __CFG_PBADEN$OFF 000000        __size_of_Write_I2C 000E  
      __size_of_Write_ARR 0052        __size_of_Write_str 002E                _WriteUSART 6D0C  
          __pcstackCOMRAM 0001              __pidataBANK0 6C8B              __pidataBANK1 7758  
            __pidataBANK2 73BA             __end_of_Write 6CBE                _Write_time 72EC  
             ?_Read_month 0006         __end_of_ReadUSART 6DB4         __end_of_Read_char 6DF2  
       __end_of_Read_date 7228             ??_UsartConfig 0008         __end_of_Read_hour 768A  
       __end_of_Read_time 7758         __end_of_Read_year 71CE               _Read_string 6F18  
                 ??_Write 0002             ReadUSART@data 0001                 ?_CloseI2C 0001  
       __end_of_OpenUSART 73BA                 ?_Get_data 0001    __size_of_DelayFor18TCY 0016  
              __pbssBANK0 00F0                 ?_BusyXLCD 0001             Set_date@error 002C  
           Set_date@month 000A               Set_day@F203 0195               Set_day@F205 0200  
         WriteCmdXLCD@cmd 0003      __end_of_SetDDRamAddr 70CE                 ?_Read_day 0001  
               ?_Read_min 0006                 ?_Read_sec 0006                Write_I2C@c 0004  
              Write_ARR@c 0001                Write_ARR@e 0003                 ?_OpenXLCD 0001  
             Set_day@str5 0008                 ?_Set_date 0008                 ?_Set_time 0008  
       WriteDataXLCD@data 0003              ?_Delay10TCYx 0001              Read_string@i 0006  
              Write_str@c 0003           ??_WriteDataXLCD 0003              ?_Delay1KTCYx 0001  
               ?_WriteI2C 0001                   ?_strcmp 0001         __end_of_Write_I2C 6CCC  
       __end_of_Write_ARR 7120             ??_Write_time_ 0007         __end_of_Write_str 6F18  
               ?_delay_ms 0001                 ?_delay_us 0001               Set_time@min 000A  
             Set_time@sec 0008                ??_CloseI2C 0001              Write_time_@h 0006  
            Write_time_@m 0005              Write_time_@s 0007                ??_Get_data 005E  
          Read_string@len 0005                   _SSPCON1 000FC6                   _SSPCON2 000FC5  
                 _SSPSTAT 000FC7       __end_of_UsartConfig 6D0C                ??_BusyXLCD 0003  
                 _IdleI2C 6CCC           __CFG_VREGEN$OFF 000000                ??_Read_day 0022  
     __size_of_Read_month 004A                ??_Read_min 0008                ??_Read_sec 0008  
            ?_Clear_array 0001        __size_of_write_DAY 0158                   _ReadI2C 6EC2  
                 _ReadBUF 6C9A                ??_OpenXLCD 0007                   _OpenI2C 6DB4  
                 __Hparam 0000                ??_Set_date 000E                   __Lparam 0000  
                 _Set_day 752C                ??_Set_time 000F               ?_WriteUSART 0001  
           _DelayFor18TCY 6D1E               ?_Write_time 0005           __CFG_STVREN$OFF 000000  
                 __pcinit 7422                ??_WriteI2C 0002           Delay10TCYx@unit 0001  
                 __ramtop 0800                   __ptext0 784A                   __ptext1 7120  
                 __ptext2 6E78                   __ptext3 6CFC                   __ptext4 7352  
                 __ptext5 768A                   __ptext6 6D7C                   __ptext7 7176  
                 __ptext8 7032                   __ptext9 6FE8           __size_of_strcmp 0044  
              ??_delay_ms 0002                ??_delay_us 0002       __end_of_Write_time_ 7288  
    end_of_initialization 748E             __Lmediumconst 0000              write_DAY@day 0021  
           Set_time@error 0034                 _RCSTAbits 000FAB            ?_DelayFor18TCY 0001  
                 postdec1 000FE5                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE            Write_time@date 0005            Write_time@year 0007  
                 strcmp@r 0006                 Get_data@h 00A8                 Get_data@m 00A7  
               Get_data@s 00A6         __end_of_write_DAY 7BEC        UsartConfig@config1 0008  
      UsartConfig@config2 0007               _UsartConfig 6CFC                 _TRISAbits 000F92  
               _TRISBbits 000F93                 _TRISCbits 000F94     __size_of_SetDDRamAddr 0052  
     __size_of_WriteUSART 0012       __size_of_Write_time 0066                 _TXSTAbits 000FAC  
               Read_min@c 0008                 Read_min@e 0006                 Read_sec@c 0008  
               Read_sec@e 0006  __size_of_Write_time_XLCD 0056              ??_Read_month 0008  
    __size_of_Delay10TCYx 0010              _SetDDRamAddr 707C      __size_of_Delay1KTCYx 0010  
             _Write_time_ 7228        SetDDRamAddr@DDaddr 0006            __end_of_strcmp 6F9E  
     start_initialization 7422                 _ReadUSART 6D96              ?_Read_string 0003  
               _Read_char 6DD2                 _Read_date 71CE                 _Read_hour 75D4  
               _Read_time 768A          WriteI2C@data_out 0003                 _Read_year 7176  
       __size_of_CloseI2C 0004         __size_of_Get_data 028A                 Set_date@x 003E  
               Set_date@y 003F                 Set_date@z 0040                 _OpenUSART 7352  
       __size_of_BusyXLCD 0022        __end_of_Read_month 7032                 Set_time@h 004B  
               Set_time@m 0047                 Set_time@s 0046                 Set_time@x 0048  
               Set_time@y 0049                 Set_time@z 004A         __size_of_Read_day 000C  
         ??_DelayFor18TCY 0002         __size_of_Read_min 004A         __size_of_Read_sec 004A  
    __size_of_Clear_array 0022         __size_of_OpenXLCD 0094         __size_of_Set_date 0140  
           ?_WriteCmdXLCD 0001         __size_of_Set_time 018A               __pdataBANK0 00FD  
             __pdataBANK1 0100               __pdataBANK2 0200          __CFG_LPT1OSC$OFF 000000  
                ??_strcmp 0005         __size_of_WriteI2C 0064              Clear_array@e 0001  
            Clear_array@i 0004              Clear_array@n 0003             Read_hour@mode 0008  
             __pbssCOMRAM 005E                ?_ReadUSART 0001             __pcstackBANK0 0060  
               _Write_I2C 6CBE                 _Write_ARR 70CE                ?_Read_char 0001  
              ?_Read_date 0006                 _Write_str 6EEA                ?_Read_hour 0006  
              ?_Read_time 0001                ?_Read_year 0006         __size_of_delay_ms 001A  
       __size_of_delay_us 001A           Delay1KTCYx@unit 0001              Set_date@F214 0123  
            Set_date@F216 0183                  ?_IdleI2C 0001                ?_OpenUSART 0001  
           Read_time@mode 0022              Set_day@error 004B              Set_date@date 0008  
                ?_ReadI2C 0001                  ?_ReadBUF 0001              Set_date@str6 000E  
            Set_date@year 000C                 Write@data 0002                  ?_OpenI2C 0001  
                ?_Set_day 0001              ??_WriteUSART 0001            ??_WriteCmdXLCD 0003  
           ?_Delay10KTCYx 0001              ??_Write_time 0008        Write_time_XLCD@str 0004  
           Get_data@error 0081             Get_data@month 00AB     __end_of_WriteDataXLCD 6E9C  
       ??_Write_time_XLCD 0006                ?_Write_I2C 0001                ?_Write_ARR 0001  
          __size_of_Write 000E                ?_Write_str 0003        __end_of_WriteUSART 6D1E  
                _LATAbits 000F89        __end_of_Write_time 7352                  _LATBbits 000F8A  
               delay_ms@i 0003                 delay_ms@t 0002              Set_time@F200 01A7  
               delay_us@i 0003              Set_time@F198 0243                 delay_us@t 0002  
                _PIE1bits 000F9D             ?_DelayPORXLCD 0001                  _PIR1bits 000F9E  
         OpenXLCD@lcdtype 0007              Set_time@mode 000E              Set_time@hour 000C  
            Set_time@str3 000F                 main@F4700 0100                 main@F4702 0141  
          ??_Delay10KTCYx 0001             Write_time@day 0008           Read_string@data 0007  
                ReadBUF@c 0001              ?_UsartConfig 0007               ??_ReadUSART 0001  
        Delay10KTCYx@unit 0002                  _CloseI2C 6C8E                 _write_DAY 7A94  
             ??_Read_char 0003               ??_Read_date 0008                  _Get_data 7D76  
             ??_Read_hour 0009               ??_Read_time 0022               ??_Read_year 0008  
               copy_data0 7444                 copy_data1 7464      __size_of_Read_string 0042  
                _BusyXLCD 6E34          OpenI2C@sync_mode 0002               ??_OpenUSART 0003  
                _Read_day 6CA4                  _Read_min 6F9E                  _Read_sec 7032  
        __size_of_IdleI2C 0010           OpenUSART@config 0006            ??_DelayPORXLCD 0002  
                _OpenXLCD 7498          __size_of_ReadI2C 0028               BCD_format@a 0004  
        __size_of_ReadBUF 000A                  __Hrparam 0000               BCD_to_DEC@c 0002  
                _Set_date 7954          __size_of_OpenI2C 001E                  _Set_time 7BEC  
                __Lrparam 0000          __size_of_Set_day 00A8                _BCD_format 6E9C  
              _BCD_to_DEC 6D4A                  _WriteI2C 7288            write_DAY@day_1 0005  
          write_DAY@day_2 0009              ?_Write_time_ 0005            write_DAY@day_3 000D  
          write_DAY@day_4 0011            write_DAY@day_5 0015            write_DAY@day_6 0019  
          write_DAY@day_7 001D              Get_data@F231 0171              Get_data@F241 01EC  
            Get_data@F233 00FD              Get_data@F243 01EF              Get_data@F235 01E3  
            Get_data@F227 015E              Get_data@F237 01E6              Get_data@F229 01B9  
            Get_data@F239 01E9                  _delay_ms 6D62                  _delay_us 6D7C  
             ??_Write_I2C 0004               ??_Write_ARR 0005                ?_write_DAY 0001  
                __ptext10 6F9E                  __ptext11 75D4                  __ptext20 6E56  
                __ptext12 6CA4                  __ptext21 707C                  __ptext13 7A94  
                __ptext30 6DB4                  __ptext22 6C92                  __ptext14 70CE  
                __ptext31 72EC                  __ptext23 6D34                  __ptext15 71CE  
                __ptext40 752C                  __ptext32 6D62                  __ptext24 6E34  
                __ptext16 6DF2                  __ptext41 6E12                  __ptext33 6CDC  
                __ptext25 6D1E                  __ptext17 6EC2                  __ptext42 7954  
                __ptext34 6CBE                  __ptext26 6CEC                  __ptext18 6DD2  
                __ptext43 6EEA                  __ptext35 7288                  __ptext27 7D76  
                __ptext19 7498                  __ptext44 6F18                  __ptext36 6CCC  
                __ptext28 6F5A                  __ptext45 6CB0                  __ptext37 6C9A  
                __ptext29 7228                  __ptext46 6D0C                  __ptext38 6C8E  
                __ptext47 6D96                  __ptext39 7BEC                  __ptext48 6D4A  
                __ptext49 6E9C               ??_Write_str 0005              Get_data@date 00AA  
    __end_of_WriteCmdXLCD 6E78              Get_data@mode 00AC              Get_data@str2 0060  
            Get_data@str8 0073              Get_data@year 00A9             __size_of_Read 0020  
           __size_of_main 010A             ??_Delay10TCYx 0001             ??_Delay1KTCYx 0001  
                main@mode 00ED                  main@str7 00AD                  main@str8 00D0  
   __CFG_CPUDIV$OSC1_PLL2 000000            OpenUSART@spbrg 0001             write_DAY@F260 01CF  
           write_DAY@F262 01D3             write_DAY@F264 01D7             write_DAY@F256 01C7  
           write_DAY@F266 01DB             write_DAY@F258 01CB             write_DAY@F268 01DF  
    __end_of_Delay10KTCYx 6D4A          Write_time_XLCD@i 0006               Get_data@s_1 0093  
             Get_data@s_2 0096               Get_data@s_3 0099               Get_data@s_4 009C  
             Get_data@s_5 009F               Get_data@s_6 00A2             ??_Clear_array 0004  
             Get_data@day 00A5     __end_of_DelayFor18TCY 6D34               ?_BCD_format 0001  
         _Write_time_XLCD 7120               ?_BCD_to_DEC 0001       __end_of_Delay10TCYx 6CFC  
         Write_time@month 0006                  strcmp@s1 0001                  strcmp@s2 0003  
    __end_of_DelayPORXLCD 6C9A       __end_of_Delay1KTCYx 6CEC               _SSPCON1bits 000FC6  
             _SSPCON2bits 000FC5               ??_write_DAY 0005      __size_of_UsartConfig 0010  
       Read_string@buffer 0003              _USART_Status 005E  
